C        Generated by TAPENADE     (INRIA, Tropics team)
C  Tapenade 3.6 (r4343) - 10 Feb 2012 10:52
C
C  Differentiation of c_turm in reverse (adjoint) mode:
C   gradient     of useful results: q vmul turmu
C   with respect to varying inputs: q vmul turmu
C   RW status of diff variables: q:incr vmul:incr turmu:in-out
C
C*************************************************************
      SUBROUTINE C_TURM_BQ(q, qb, turmu, turmub, vmul, vmulb, jd, kd)
      USE PARAMS_GLOBAL
      IMPLICIT NONE
C*************************************************************
C*************************************************************
      INTEGER jd, kd
      REAL q(jd, kd, nq)
      REAL qb(jd, kd, nq)
      REAL turmu(jd, kd), vmul(jd, kd)
      REAL turmub(jd, kd), vmulb(jd, kd)
C
C local variables
      INTEGER j, k
      REAL chi, vnul, fv1
      REAL chib, vnulb, fv1b
      REAL temp0
      REAL tempb
      REAL temp1b
      REAL temp
      REAL temp1b0
      INCLUDE 'sadata.h'
      DO k=1,kd
        DO j=1,jd
          vnul = vmul(j, k)/(q(j, k, 1)*q(j, k, nq))
          chi = q(j, k, nmv+1)/vnul
          fv1 = chi**3/(chi**3+cv1**3)
          temp1b = q(j, k, nq)*q(j, k, nmv+1)*turmub(j, k)
          temp1b0 = q(j, k, 1)*fv1*turmub(j, k)
          qb(j, k, 1) = qb(j, k, 1) + fv1*temp1b
          fv1b = q(j, k, 1)*temp1b
          qb(j, k, nq) = qb(j, k, nq) + q(j, k, nmv+1)*temp1b0
          turmub(j, k) = 0.0
          temp0 = cv1**3 + chi**3
          chib = (3*chi**2/temp0-chi**5*3/temp0**2)*fv1b
          qb(j, k, nmv+1) = qb(j, k, nmv+1) + chib/vnul + q(j, k, nq)*
     +      temp1b0
          vnulb = -(q(j, k, nmv+1)*chib/vnul**2)
          temp = q(j, k, 1)*q(j, k, nq)
          tempb = -(vmul(j, k)*vnulb/temp**2)
          vmulb(j, k) = vmulb(j, k) + vnulb/temp
          qb(j, k, 1) = qb(j, k, 1) + q(j, k, nq)*tempb
          qb(j, k, nq) = qb(j, k, nq) + q(j, k, 1)*tempb
        ENDDO
      ENDDO
      END
