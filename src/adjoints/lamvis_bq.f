C        Generated by TAPENADE     (INRIA, Tropics team)
C  Tapenade 3.6 (r4343) - 10 Feb 2012 10:52
C
C  Differentiation of lamvis in reverse (adjoint) mode:
C   gradient     of useful results: q vmul
C   with respect to varying inputs: q vmul
C   RW status of diff variables: q:incr vmul:in-out
C
C*************************************************************
      SUBROUTINE LAMVIS_BQ(q, qb, vmul, vmulb, jd, kd)
      USE PARAMS_GLOBAL
      IMPLICIT NONE
C
C     calculate laminar viscosity
C
C*************************************************************
C*************************************************************
C
      INTEGER jd, kd
      REAL q(jd, kd, nq), vmul(jd, kd)
      REAL qb(jd, kd, nq), vmulb(jd, kd)
C local variables
      INTEGER k, j
      REAL gkpr, prtr, dre, c2b, c2bp, ra, uvel, vvel
      REAL rab, uvelb, vvelb
      REAL ei, tt
      REAL eib, ttb
      REAL temp0
      REAL tempb
      INTRINSIC SQRT
      REAL temp
C
C***  first executable statement
      c2b = 198.6/tinf
      c2bp = c2b + 1.
      DO k=1,kd
        DO j=1,jd
          ra = 1./q(j, k, 1)
          uvel = q(j, k, 2)*ra
          vvel = q(j, k, 3)*ra
          ei = q(j, k, 4)*ra - 0.5*(uvel**2+vvel**2)
          tt = ggm1*ei
          temp = tt/(c2b+tt)
          temp0 = SQRT(tt)
          tempb = temp0*c2bp*vmulb(j, k)/(c2b+tt)
          IF (tt .EQ. 0.0) THEN
            ttb = (1.0-temp)*tempb
          ELSE
            ttb = (1.0-temp)*tempb + temp*c2bp*vmulb(j, k)/(2.0*temp0)
          END IF
          vmulb(j, k) = 0.0
          eib = ggm1*ttb
          qb(j, k, 4) = qb(j, k, 4) + ra*eib
          uvelb = -(0.5*2*uvel*eib)
          vvelb = -(0.5*2*vvel*eib)
          rab = q(j, k, 3)*vvelb + q(j, k, 2)*uvelb + q(j, k, 4)*eib
          qb(j, k, 3) = qb(j, k, 3) + ra*vvelb
          qb(j, k, 2) = qb(j, k, 2) + ra*uvelb
          qb(j, k, 1) = qb(j, k, 1) - rab/q(j, k, 1)**2
        ENDDO
      ENDDO
      END
