C        Generated by TAPENADE     (INRIA, Tropics team)
C  Tapenade 3.6 (r4343) - 10 Feb 2012 10:52
C
C  Differentiation of weno in reverse (adjoint) mode:
C   gradient     of useful results: f ql qr
C   with respect to varying inputs: f ql qr
C
C**************************************************************************
      SUBROUTINE WENO_BQ(f, fb, ql, qlb, qr, qrb, is, ie, im, th, qt, 
     +                   eps, fmin, fmax, ibmin, ibmax, iba)
      USE PARAMS_GLOBAL
      IMPLICIT NONE
C*************************************************************************
      INCLUDE 'DIFFSIZES.inc'
C  Hint: ISIZE1OFf0bINweno should be the value of mdim
C  Hint: ISIZE1OFf1bINweno should be the value of mdim
C  Hint: ISIZE1OFf2bINweno should be the value of mdim
C  Hint: ISIZE1OFf2mbINweno should be the value of mdim
C  Hint: ISIZE1OFslopebINweno should be the value of mdim
C
C 5th order weno scheme
C note: qr(is) and ql(ie) are never used.
C*************************************************************************
C*************************************************************************
C
      INTEGER is, ie, im, ibmin, ibmax, iba(mdim)
      REAL th, qt, eps, at1
      REAL at1b
      REAL f(mdim, nmv), fmin(nmv), fmax(nmv)
      REAL fb(mdim, nmv)
C local variables
      REAL ql(mdim, nmv), qr(mdim, nmv)
      REAL qlb(mdim, nmv), qrb(mdim, nmv)
C
      REAL f0(mdim), f1(mdim), f2(mdim), f2m(mdim)
      REAL slope(mdim)
C
      REAL dre, duj, vjp1, vjm1, ejp1, ammd, fl, fr
      INTEGER i, n
      REAL f0bmin, f1bmin, f2bmin, f0bmax, f1bmax, f2bmax, at, s1, ati1
     +     , t1
      REAL f1bminb, f2bminb, f1bmaxb, f2bmaxb, atb, s1b, ati1b, t1b
      REAL WENO5, blankv
      INTEGER branch
      REAL slopeb(mdim)
      REAL x3b
      REAL amin114b
      REAL y1b
      REAL x19
      REAL x18
      REAL x10b
      REAL x17
      REAL x16
      REAL x15
      REAL x6b
      REAL amin117b
      REAL x14
      REAL y4b
      REAL x13
      REAL amin10b
      REAL x12
      REAL x11
      REAL x13b
      REAL x10
      REAL x21b
      REAL abs1b
      REAL y10b
      REAL x9b
      REAL y25
      REAL y7b
      REAL y24
      REAL amin13b
      REAL y23
      REAL y22
      REAL amin19
      REAL x16b
      REAL y21
      REAL amin18
      REAL amin119
      REAL x24b
      REAL abs4b
      REAL y20
      REAL amin17
      REAL amin118
      REAL y13b
      REAL amin16
      REAL amin117
      REAL y21b
      REAL tempb0
      REAL x9
      REAL amin15
      REAL amin116
      REAL x8
      REAL amin14
      REAL amin115
      REAL amin16b
      REAL x7
      REAL amin13
      REAL amin114
      REAL amin110b
      REAL x6
      REAL amin12
      REAL amin113
      REAL x19b
      INTRINSIC SIGN
      REAL x5
      REAL amin11
      REAL amin112
      REAL abs7b
      REAL x4
      REAL amin10
      REAL amin111
      REAL y16b
      REAL x3
      REAL amin110
      REAL y24b
      INTRINSIC ABS
      REAL x2
      REAL f2b(mdim)
      REAL x1
      REAL amin19b
      REAL x2b
      REAL amin113b
      REAL y19b
      REAL x5b
      REAL amin116b
      REAL y3b
      REAL y19
      REAL x12b
      REAL y18
      REAL abs0b
      REAL x20b
      REAL y17
      REAL y16
      REAL x8b
      REAL amin119b
      REAL y15
      REAL y6b
      REAL y14
      REAL amin12b
      REAL y13
      REAL y12
      REAL x15b
      REAL y11
      REAL abs3b
      REAL x23b
      REAL y10
      REAL y12b
      REAL y20b
      REAL tempb
      REAL y9b
      REAL amin15b
      REAL x18b
      INTRINSIC AMAX1
      REAL abs6b
      REAL y15b
      REAL y23b
      REAL f1b(mdim)
      REAL amin18b
      REAL x1b
      REAL amin112b
      REAL abs9b
      REAL y18b
      REAL x4b
      REAL amin115b
      REAL y2b
      REAL abs9
      REAL abs8
      REAL x11b
      REAL abs7
      REAL abs6
      REAL x25
      REAL abs5
      REAL x7b
      REAL amin118b
      REAL x24
      REAL abs4
      REAL y5b
      REAL x23
      REAL abs3
      REAL amin11b
      INTRINSIC AMIN1
      REAL x22
      REAL abs2
      REAL x21
      REAL abs1
      REAL x14b
      REAL x20
      REAL abs0
      REAL x22b
      REAL abs2b
      REAL y11b
      REAL y8b
      REAL amin14b
      REAL x17b
      REAL abs5b
      REAL x25b
      REAL y14b
      REAL f2mb(mdim)
      REAL y22b
      REAL y9
      REAL f0b(mdim)
      REAL y8
      REAL amin17b
      REAL y7
      REAL amin111b
      REAL y6
      REAL y5
      REAL abs8b
      REAL y4
      REAL y17b
      REAL y3
      REAL y25b
      REAL y2
      REAL y1
C*************************************************************************
C
C..this is just 1st order upwind
      IF (qt .EQ. 0.0) THEN
        DO n=1,nmv
          DO i=is,ie
            fb(i, n) = fb(i, n) + qlb(i, n) + qrb(i, n)
            qrb(i, n) = 0.0
            qlb(i, n) = 0.0
          ENDDO
        ENDDO
      ELSE
        f0b = 0.0
        f1b = 0.0
        f2b = 0.0
        f1bmaxb = 0.0
        f2bmaxb = 0.0
        f1bminb = 0.0
        f2mb = 0.0
        slopeb = 0.0
        f2bminb = 0.0
        DO n=1,nmv
          CALL PUSHINTEGER4(i)
          CALL PUSHREAL8ARRAY(f0, mdim)
C
C..let's load up a few difference arrays
C
          DO i=is,ie
            f0(i) = f(i, n)
          ENDDO
C..1st difference at i+1/2
          DO i=is,ie-1
            f1(i) = f0(i+1) - f0(i)
          ENDDO
C..2nd difference at i
          DO i=is+1,ie-1
            f2(i) = f1(i) - f1(i-1)
          ENDDO
C..extrapolate at the boundaries
          f2(is) = 2.*f2(is+1) - f2(is+2)
          f2(ie) = 2.*f2(ie-1) - f2(ie-2)
C..modify at boundaries, if needed
          IF (ibmin .EQ. 2) THEN
            f0bmin = fmin(n)
            f1bmin = f0(is) - f0bmin
            f2(is) = f1(is) - f1bmin
            f2bmin = 2.*f2(is) - f2(is+1)
            CALL PUSHCONTROL1B(0)
          ELSE
            CALL PUSHCONTROL1B(1)
          END IF
          IF (ibmax .EQ. 2) THEN
            f0bmax = fmax(n)
            f1bmax = f0bmax - f0(ie)
            f2(ie) = f1bmax - f1(ie-1)
            f2bmax = 2.*f2(ie) - f2(ie-1)
            CALL PUSHCONTROL1B(1)
          ELSE
            CALL PUSHCONTROL1B(0)
          END IF
C..limit 2nd difference to i+1/2
          DO i=is,ie-1
            IF (f2(i) .GE. 0.) THEN
              x1 = f2(i)
            ELSE
              x1 = -f2(i)
            END IF
            IF (f2(i+1) .GE. 0.) THEN
              y1 = f2(i+1)
            ELSE
              y1 = -f2(i+1)
            END IF
            IF (x1 .GT. y1) THEN
              amin10 = y1
            ELSE
              amin10 = x1
            END IF
            f2m(i) = 0.5*(SIGN(1., f2(i))+SIGN(1., f2(i+1)))*amin10
          ENDDO
C
C..now combine everything to get ql and qr
C
C
C..first-order at boundary?
C
          at = f1(is) - 0.5*f2m(is)
          IF (at .GE. 0.) THEN
            x2 = at
            CALL PUSHCONTROL1B(0)
          ELSE
            x2 = -at
            CALL PUSHCONTROL1B(1)
          END IF
          IF (2.*f1(is) .GE. 0.) THEN
            y2 = 2.*f1(is)
            CALL PUSHCONTROL1B(0)
          ELSE
            y2 = -(2.*f1(is))
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x2 .GT. y2) THEN
            CALL PUSHCONTROL1B(0)
          ELSE
            CALL PUSHCONTROL1B(1)
          END IF
C
          IF (ibmin .EQ. 2) THEN
            CALL PUSHINTEGER4(i)
            i = is
            IF (f1(i) .GE. 0.) THEN
              x3 = f1(i)
              CALL PUSHCONTROL1B(0)
            ELSE
              x3 = -f1(i)
              CALL PUSHCONTROL1B(1)
            END IF
            IF (f1bmin .GE. 0.) THEN
              y3 = f1bmin
              CALL PUSHCONTROL1B(0)
            ELSE
              y3 = -f1bmin
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x3 .GT. y3) THEN
              amin12 = y3
              CALL PUSHCONTROL1B(0)
            ELSE
              amin12 = x3
              CALL PUSHCONTROL1B(1)
            END IF
            s1 = 0.5*(SIGN(1., f1(i))+SIGN(1., f1bmin))*amin12
            at = f1(i) - 0.5*f2m(i)
            IF (f2(i) .GE. 0.) THEN
              x4 = f2(i)
              CALL PUSHCONTROL1B(0)
            ELSE
              x4 = -f2(i)
              CALL PUSHCONTROL1B(1)
            END IF
            IF (f2bmin .GE. 0.) THEN
              y4 = f2bmin
              CALL PUSHCONTROL1B(0)
            ELSE
              y4 = -f2bmin
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x4 .GT. y4) THEN
              amin13 = y4
              CALL PUSHCONTROL1B(0)
            ELSE
              amin13 = x4
              CALL PUSHCONTROL1B(1)
            END IF
            ati1 = f1bmin + 0.5*(0.5*(SIGN(1., f2(i))+SIGN(1., f2bmin))*
     +        amin13)
            IF (at .GE. 0.) THEN
              x5 = at
              CALL PUSHCONTROL1B(0)
            ELSE
              x5 = -at
              CALL PUSHCONTROL1B(1)
            END IF
            IF (ati1 .GE. 0.) THEN
              y5 = ati1
              CALL PUSHCONTROL1B(0)
            ELSE
              y5 = -ati1
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x5 .GT. y5) THEN
              amin14 = y5
              CALL PUSHCONTROL1B(0)
            ELSE
              amin14 = x5
              CALL PUSHCONTROL1B(1)
            END IF
            t1 = 0.5*(SIGN(1., at)+SIGN(1., ati1))*amin14
            IF (at + ati1 .GE. 0.) THEN
              abs0 = at + ati1
              CALL PUSHCONTROL1B(0)
            ELSE
              abs0 = -(at+ati1)
              CALL PUSHCONTROL1B(1)
            END IF
            x6 = 0.5*abs0
            IF (s1 .GE. 0.) THEN
              abs5 = s1
              CALL PUSHCONTROL1B(0)
            ELSE
              abs5 = -s1
              CALL PUSHCONTROL1B(1)
            END IF
            x21 = 2.*abs5
            IF (t1 .GE. 0.) THEN
              y21 = t1
              CALL PUSHCONTROL1B(0)
            ELSE
              y21 = -t1
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x21 .LT. y21) THEN
              y6 = y21
              CALL PUSHCONTROL1B(0)
            ELSE
              y6 = x21
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x6 .GT. y6) THEN
              CALL PUSHCONTROL1B(0)
            ELSE
              CALL PUSHCONTROL1B(1)
            END IF
            CALL PUSHCONTROL1B(1)
          ELSE
            CALL PUSHCONTROL1B(0)
          END IF
C
          at1 = f1(ie-1) + 0.5*f2m(ie-1)
          IF (at1 .GE. 0.) THEN
            x7 = at1
            CALL PUSHCONTROL1B(0)
          ELSE
            x7 = -at1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (2.*f1(ie-1) .GE. 0.) THEN
            y7 = 2.*f1(ie-1)
            CALL PUSHCONTROL1B(0)
          ELSE
            y7 = -(2.*f1(ie-1))
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x7 .GT. y7) THEN
            CALL PUSHCONTROL1B(0)
          ELSE
            CALL PUSHCONTROL1B(1)
          END IF
C
          IF (ibmax .EQ. 2) THEN
            CALL PUSHINTEGER4(i)
            i = ie
            IF (f1bmax .GE. 0.) THEN
              x8 = f1bmax
              CALL PUSHCONTROL1B(0)
            ELSE
              x8 = -f1bmax
              CALL PUSHCONTROL1B(1)
            END IF
            IF (f1(i-1) .GE. 0.) THEN
              y8 = f1(i-1)
              CALL PUSHCONTROL1B(0)
            ELSE
              y8 = -f1(i-1)
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x8 .GT. y8) THEN
              amin17 = y8
              CALL PUSHCONTROL1B(0)
            ELSE
              amin17 = x8
              CALL PUSHCONTROL1B(1)
            END IF
            s1 = 0.5*(SIGN(1., f1bmax)+SIGN(1., f1(i-1)))*amin17
            IF (f2(i-1) .GE. 0.) THEN
              x9 = f2(i-1)
              CALL PUSHCONTROL1B(0)
            ELSE
              x9 = -f2(i-1)
              CALL PUSHCONTROL1B(1)
            END IF
            IF (f2bmax .GE. 0.) THEN
              y9 = f2bmax
              CALL PUSHCONTROL1B(0)
            ELSE
              y9 = -f2bmax
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x9 .GT. y9) THEN
              amin18 = y9
              CALL PUSHCONTROL1B(0)
            ELSE
              amin18 = x9
              CALL PUSHCONTROL1B(1)
            END IF
            at = f1bmax - 0.5*(0.5*(SIGN(1., f2(i-1))+SIGN(1., f2bmax))*
     +        amin18)
            CALL PUSHREAL8(ati1)
            ati1 = f1(i-1) + 0.5*f2m(i-1)
            IF (at .GE. 0.) THEN
              x10 = at
              CALL PUSHCONTROL1B(0)
            ELSE
              x10 = -at
              CALL PUSHCONTROL1B(1)
            END IF
            IF (ati1 .GE. 0.) THEN
              y10 = ati1
              CALL PUSHCONTROL1B(0)
            ELSE
              y10 = -ati1
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x10 .GT. y10) THEN
              amin19 = y10
              CALL PUSHCONTROL1B(0)
            ELSE
              amin19 = x10
              CALL PUSHCONTROL1B(1)
            END IF
            CALL PUSHREAL8(t1)
            t1 = 0.5*(SIGN(1., at)+SIGN(1., ati1))*amin19
            IF (at + ati1 .GE. 0.) THEN
              abs1 = at + ati1
              CALL PUSHCONTROL1B(0)
            ELSE
              abs1 = -(at+ati1)
              CALL PUSHCONTROL1B(1)
            END IF
            x11 = 0.5*abs1
            IF (s1 .GE. 0.) THEN
              abs6 = s1
              CALL PUSHCONTROL1B(0)
            ELSE
              abs6 = -s1
              CALL PUSHCONTROL1B(1)
            END IF
            x22 = 2.*abs6
            IF (t1 .GE. 0.) THEN
              y22 = t1
              CALL PUSHCONTROL1B(0)
            ELSE
              y22 = -t1
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x22 .LT. y22) THEN
              y11 = y22
              CALL PUSHCONTROL1B(0)
            ELSE
              y11 = x22
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x11 .GT. y11) THEN
              CALL PUSHCONTROL1B(0)
            ELSE
              CALL PUSHCONTROL1B(1)
            END IF
            CALL PUSHCONTROL1B(1)
          ELSE
            CALL PUSHCONTROL1B(0)
          END IF
          CALL PUSHINTEGER4(i)
          CALL PUSHREAL8(ati1)
          CALL PUSHREAL8(at)
          CALL PUSHREAL8(t1)
C
C..sonic-a near the boundary?
C
          i = is + 2
          CALL PUSHREAL8(at)
C..include limited curvatures to calculate new slopes
          at = f1(i) - 0.5*f2m(i)
          CALL PUSHREAL8(ati1)
          ati1 = f1(i-1) + 0.5*f2m(i-1)
          IF (f1(i) .GE. 0.) THEN
            x15 = f1(i)
            CALL PUSHCONTROL1B(0)
          ELSE
            x15 = -f1(i)
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f1(i-1) .GE. 0.) THEN
            y15 = f1(i-1)
            CALL PUSHCONTROL1B(0)
          ELSE
            y15 = -f1(i-1)
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x15 .GT. y15) THEN
            amin114 = y15
            CALL PUSHCONTROL1B(0)
          ELSE
            amin114 = x15
            CALL PUSHCONTROL1B(1)
          END IF
C..limit slopes at i
          s1 = 0.5*(SIGN(1., f1(i))+SIGN(1., f1(i-1)))*amin114
          IF (at .GE. 0.) THEN
            x16 = at
            CALL PUSHCONTROL1B(0)
          ELSE
            x16 = -at
            CALL PUSHCONTROL1B(1)
          END IF
          IF (ati1 .GE. 0.) THEN
            y16 = ati1
            CALL PUSHCONTROL1B(0)
          ELSE
            y16 = -ati1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x16 .GT. y16) THEN
            amin115 = y16
            CALL PUSHCONTROL1B(0)
          ELSE
            amin115 = x16
            CALL PUSHCONTROL1B(1)
          END IF
          CALL PUSHREAL8(t1)
          t1 = 0.5*(SIGN(1., at)+SIGN(1., ati1))*amin115
          IF (at + ati1 .GE. 0.) THEN
            abs3 = at + ati1
            CALL PUSHCONTROL1B(0)
          ELSE
            abs3 = -(at+ati1)
            CALL PUSHCONTROL1B(1)
          END IF
          x17 = 0.5*abs3
          IF (s1 .GE. 0.) THEN
            abs8 = s1
            CALL PUSHCONTROL1B(0)
          ELSE
            abs8 = -s1
            CALL PUSHCONTROL1B(1)
          END IF
          x24 = 2.*abs8
          IF (t1 .GE. 0.) THEN
            y24 = t1
            CALL PUSHCONTROL1B(0)
          ELSE
            y24 = -t1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x24 .LT. y24) THEN
            y17 = y24
            CALL PUSHCONTROL1B(0)
          ELSE
            y17 = x24
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x17 .GT. y17) THEN
            CALL PUSHCONTROL1B(0)
          ELSE
            CALL PUSHCONTROL1B(1)
          END IF
C..now find appropriate slope
C..use slope to calculate ql and qr
C
C..sonic-a near the boundary?
C
          i = ie - 1
C..include limited curvatures to calculate new slopes
          at = f1(i) - 0.5*f2m(i)
          ati1 = f1(i-1) + 0.5*f2m(i-1)
          IF (f1(i) .GE. 0.) THEN
            x18 = f1(i)
            CALL PUSHCONTROL1B(0)
          ELSE
            x18 = -f1(i)
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f1(i-1) .GE. 0.) THEN
            y18 = f1(i-1)
            CALL PUSHCONTROL1B(0)
          ELSE
            y18 = -f1(i-1)
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x18 .GT. y18) THEN
            amin117 = y18
            CALL PUSHCONTROL1B(0)
          ELSE
            amin117 = x18
            CALL PUSHCONTROL1B(1)
          END IF
C..limit slopes at i
          s1 = 0.5*(SIGN(1., f1(i))+SIGN(1., f1(i-1)))*amin117
          IF (at .GE. 0.) THEN
            x19 = at
            CALL PUSHCONTROL1B(0)
          ELSE
            x19 = -at
            CALL PUSHCONTROL1B(1)
          END IF
          IF (ati1 .GE. 0.) THEN
            y19 = ati1
            CALL PUSHCONTROL1B(0)
          ELSE
            y19 = -ati1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x19 .GT. y19) THEN
            amin118 = y19
            CALL PUSHCONTROL1B(0)
          ELSE
            amin118 = x19
            CALL PUSHCONTROL1B(1)
          END IF
          CALL PUSHREAL8(t1)
          t1 = 0.5*(SIGN(1., at)+SIGN(1., ati1))*amin118
          IF (at + ati1 .GE. 0.) THEN
            abs4 = at + ati1
            CALL PUSHCONTROL1B(0)
          ELSE
            abs4 = -(at+ati1)
            CALL PUSHCONTROL1B(1)
          END IF
          x20 = 0.5*abs4
          IF (s1 .GE. 0.) THEN
            abs9 = s1
            CALL PUSHCONTROL1B(0)
          ELSE
            abs9 = -s1
            CALL PUSHCONTROL1B(1)
          END IF
          x25 = 2.*abs9
          IF (t1 .GE. 0.) THEN
            y25 = t1
            CALL PUSHCONTROL1B(0)
          ELSE
            y25 = -t1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x25 .LT. y25) THEN
            y20 = y25
            CALL PUSHCONTROL1B(0)
          ELSE
            y20 = x25
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x20 .GT. y20) THEN
            CALL PUSHCONTROL1B(0)
          ELSE
            CALL PUSHCONTROL1B(1)
          END IF
          f0b(i) = f0b(i) + qrb(i, n)
          slopeb(i) = slopeb(i) - 0.5*qrb(i, n)
          qrb(i, n) = 0.0
          amin119b = SIGN(1., t1)*slopeb(i)
          slopeb(i) = 0.0
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y20b = amin119b
            x20b = 0.0
          ELSE
            x20b = amin119b
            y20b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y25b = y20b
            x25b = 0.0
          ELSE
            x25b = y20b
            y25b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            t1b = y25b
          ELSE
            t1b = -y25b
          END IF
          abs9b = 2.*x25b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            s1b = abs9b
          ELSE
            s1b = -abs9b
          END IF
          abs4b = 0.5*x20b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = abs4b
            ati1b = abs4b
          ELSE
            atb = -abs4b
            ati1b = -abs4b
          END IF
          CALL POPREAL8(t1)
          amin118b = 0.5*(SIGN(1., at)+SIGN(1., ati1))*t1b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y19b = amin118b
            x19b = 0.0
          ELSE
            x19b = amin118b
            y19b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            ati1b = ati1b + y19b
          ELSE
            ati1b = ati1b - y19b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = atb + x19b
          ELSE
            atb = atb - x19b
          END IF
          amin117b = 0.5*(SIGN(1., f1(i))+SIGN(1., f1(i-1)))*s1b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y18b = amin117b
            x18b = 0.0
          ELSE
            x18b = amin117b
            y18b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1b(i-1) = f1b(i-1) + y18b
          ELSE
            f1b(i-1) = f1b(i-1) - y18b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1b(i) = f1b(i) + x18b
          ELSE
            f1b(i) = f1b(i) - x18b
          END IF
          f1b(i-1) = f1b(i-1) + ati1b
          f2mb(i-1) = f2mb(i-1) + 0.5*ati1b
          f1b(i) = f1b(i) + atb
          f2mb(i) = f2mb(i) - 0.5*atb
          i = is + 2
          f0b(i) = f0b(i) + qlb(i, n)
          slopeb(i) = slopeb(i) + 0.5*qlb(i, n)
          qlb(i, n) = 0.0
          amin116b = SIGN(1., t1)*slopeb(i)
          slopeb(i) = 0.0
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y17b = amin116b
            x17b = 0.0
          ELSE
            x17b = amin116b
            y17b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y24b = y17b
            x24b = 0.0
          ELSE
            x24b = y17b
            y24b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            t1b = y24b
          ELSE
            t1b = -y24b
          END IF
          abs8b = 2.*x24b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            s1b = abs8b
          ELSE
            s1b = -abs8b
          END IF
          abs3b = 0.5*x17b
          ati1 = f1(i-1) + 0.5*f2m(i-1)
          at = f1(i) - 0.5*f2m(i)
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = abs3b
            ati1b = abs3b
          ELSE
            atb = -abs3b
            ati1b = -abs3b
          END IF
          CALL POPREAL8(t1)
          amin115b = 0.5*(SIGN(1., at)+SIGN(1., ati1))*t1b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y16b = amin115b
            x16b = 0.0
          ELSE
            x16b = amin115b
            y16b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            ati1b = ati1b + y16b
          ELSE
            ati1b = ati1b - y16b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = atb + x16b
          ELSE
            atb = atb - x16b
          END IF
          amin114b = 0.5*(SIGN(1., f1(i))+SIGN(1., f1(i-1)))*s1b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y15b = amin114b
            x15b = 0.0
          ELSE
            x15b = amin114b
            y15b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1b(i-1) = f1b(i-1) + y15b
          ELSE
            f1b(i-1) = f1b(i-1) - y15b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1b(i) = f1b(i) + x15b
          ELSE
            f1b(i) = f1b(i) - x15b
          END IF
          CALL POPREAL8(ati1)
          f1b(i-1) = f1b(i-1) + ati1b
          f2mb(i-1) = f2mb(i-1) + 0.5*ati1b
          CALL POPREAL8(at)
          f1b(i) = f1b(i) + atb
          f2mb(i) = f2mb(i) - 0.5*atb
          DO i=is+2,ie-2
            blankv = iba(i)*iba(i-1)*iba(i+1)*iba(i-2)*iba(i+2)
            f0b(i) = f0b(i) + (1.-blankv)*qlb(i, n) + (1.-blankv)*qrb(i
     +        , n)
            qrb(i, n) = blankv*qrb(i, n)
            qlb(i, n) = blankv*qlb(i, n)
            CALL WENO5_BQ(f0(i+2), f0b(i+2), f0(i+1), f0b(i+1), f0(i), 
     +                    f0b(i), f0(i-1), f0b(i-1), f0(i-2), f0b(i-2), 
     +                    qrb(i, n))
            qrb(i, n) = 0.0
            CALL WENO5_BQ(f0(i-2), f0b(i-2), f0(i-1), f0b(i-1), f0(i), 
     +                    f0b(i), f0(i+1), f0b(i+1), f0(i+2), f0b(i+2), 
     +                    qlb(i, n))
            qlb(i, n) = 0.0
          ENDDO
          DO i=is+1,ie-1,ie-is-2
C..include limited curvatures to calculate new slopes
            at = f1(i) - 0.5*f2m(i)
            ati1 = f1(i-1) + 0.5*f2m(i-1)
            IF (f1(i) .GE. 0.) THEN
              x12 = f1(i)
              CALL PUSHCONTROL1B(0)
            ELSE
              x12 = -f1(i)
              CALL PUSHCONTROL1B(1)
            END IF
            IF (f1(i-1) .GE. 0.) THEN
              y12 = f1(i-1)
              CALL PUSHCONTROL1B(0)
            ELSE
              y12 = -f1(i-1)
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x12 .GT. y12) THEN
              amin111 = y12
              CALL PUSHCONTROL1B(0)
            ELSE
              amin111 = x12
              CALL PUSHCONTROL1B(1)
            END IF
C..limit slopes at i
            s1 = 0.5*(SIGN(1., f1(i))+SIGN(1., f1(i-1)))*amin111
            IF (at .GE. 0.) THEN
              x13 = at
              CALL PUSHCONTROL1B(0)
            ELSE
              x13 = -at
              CALL PUSHCONTROL1B(1)
            END IF
            IF (ati1 .GE. 0.) THEN
              y13 = ati1
              CALL PUSHCONTROL1B(0)
            ELSE
              y13 = -ati1
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x13 .GT. y13) THEN
              amin112 = y13
              CALL PUSHCONTROL1B(0)
            ELSE
              amin112 = x13
              CALL PUSHCONTROL1B(1)
            END IF
            t1 = 0.5*(SIGN(1., at)+SIGN(1., ati1))*amin112
            IF (at + ati1 .GE. 0.) THEN
              abs2 = at + ati1
              CALL PUSHCONTROL1B(0)
            ELSE
              abs2 = -(at+ati1)
              CALL PUSHCONTROL1B(1)
            END IF
            x14 = 0.5*abs2
            IF (s1 .GE. 0.) THEN
              abs7 = s1
              CALL PUSHCONTROL1B(0)
            ELSE
              abs7 = -s1
              CALL PUSHCONTROL1B(1)
            END IF
            x23 = 2.*abs7
            IF (t1 .GE. 0.) THEN
              y23 = t1
              CALL PUSHCONTROL1B(0)
            ELSE
              y23 = -t1
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x23 .LT. y23) THEN
              y14 = y23
              CALL PUSHCONTROL1B(0)
            ELSE
              y14 = x23
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x14 .GT. y14) THEN
              CALL PUSHCONTROL1B(0)
            ELSE
              CALL PUSHCONTROL1B(1)
            END IF
            f0b(i) = f0b(i) + qlb(i, n) + qrb(i, n)
            slopeb(i) = slopeb(i) + 0.5*qlb(i, n) - 0.5*qrb(i, n)
            qrb(i, n) = 0.0
            qlb(i, n) = 0.0
            amin113b = SIGN(1., t1)*slopeb(i)
            slopeb(i) = 0.0
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y14b = amin113b
              x14b = 0.0
            ELSE
              x14b = amin113b
              y14b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y23b = y14b
              x23b = 0.0
            ELSE
              x23b = y14b
              y23b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              t1b = y23b
            ELSE
              t1b = -y23b
            END IF
            abs7b = 2.*x23b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              s1b = abs7b
            ELSE
              s1b = -abs7b
            END IF
            abs2b = 0.5*x14b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              atb = abs2b
              ati1b = abs2b
            ELSE
              atb = -abs2b
              ati1b = -abs2b
            END IF
            amin112b = 0.5*(SIGN(1., at)+SIGN(1., ati1))*t1b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y13b = amin112b
              x13b = 0.0
            ELSE
              x13b = amin112b
              y13b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              ati1b = ati1b + y13b
            ELSE
              ati1b = ati1b - y13b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              atb = atb + x13b
            ELSE
              atb = atb - x13b
            END IF
            amin111b = 0.5*(SIGN(1., f1(i))+SIGN(1., f1(i-1)))*s1b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y12b = amin111b
              x12b = 0.0
            ELSE
              x12b = amin111b
              y12b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f1b(i-1) = f1b(i-1) + y12b
            ELSE
              f1b(i-1) = f1b(i-1) - y12b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f1b(i) = f1b(i) + x12b
            ELSE
              f1b(i) = f1b(i) - x12b
            END IF
            f1b(i-1) = f1b(i-1) + ati1b
            f2mb(i-1) = f2mb(i-1) + 0.5*ati1b
            f1b(i) = f1b(i) + atb
            f2mb(i) = f2mb(i) - 0.5*atb
          ENDDO
          CALL POPREAL8(t1)
          CALL POPREAL8(at)
          CALL POPREAL8(ati1)
          CALL POPINTEGER4(i)
          CALL POPCONTROL1B(branch)
          IF (branch .NE. 0) THEN
            i = ie
            f0b(i) = f0b(i) + qrb(i, n)
            slopeb(i) = slopeb(i) - 0.5*qrb(i, n)
            qrb(i, n) = 0.0
            amin110b = SIGN(1., t1)*slopeb(i)
            slopeb(i) = 0.0
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y11b = amin110b
              x11b = 0.0
            ELSE
              x11b = amin110b
              y11b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y22b = y11b
              x22b = 0.0
            ELSE
              x22b = y11b
              y22b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              t1b = y22b
            ELSE
              t1b = -y22b
            END IF
            abs6b = 2.*x22b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              s1b = abs6b
            ELSE
              s1b = -abs6b
            END IF
            abs1b = 0.5*x11b
            ati1 = f1(i-1) + 0.5*f2m(i-1)
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              atb = abs1b
              ati1b = abs1b
            ELSE
              atb = -abs1b
              ati1b = -abs1b
            END IF
            CALL POPREAL8(t1)
            amin19b = 0.5*(SIGN(1., at)+SIGN(1., ati1))*t1b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y10b = amin19b
              x10b = 0.0
            ELSE
              x10b = amin19b
              y10b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              ati1b = ati1b + y10b
            ELSE
              ati1b = ati1b - y10b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              atb = atb + x10b
            ELSE
              atb = atb - x10b
            END IF
            CALL POPREAL8(ati1)
            f1b(i-1) = f1b(i-1) + ati1b
            f2mb(i-1) = f2mb(i-1) + 0.5*ati1b
            tempb0 = -(0.5**2*atb)
            f1bmaxb = f1bmaxb + atb
            amin18b = (SIGN(1., f2(i-1))+SIGN(1., f2bmax))*tempb0
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y9b = amin18b
              x9b = 0.0
            ELSE
              x9b = amin18b
              y9b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f2bmaxb = f2bmaxb + y9b
            ELSE
              f2bmaxb = f2bmaxb - y9b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f2b(i-1) = f2b(i-1) + x9b
            ELSE
              f2b(i-1) = f2b(i-1) - x9b
            END IF
            amin17b = 0.5*(SIGN(1., f1bmax)+SIGN(1., f1(i-1)))*s1b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y8b = amin17b
              x8b = 0.0
            ELSE
              x8b = amin17b
              y8b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f1b(i-1) = f1b(i-1) + y8b
            ELSE
              f1b(i-1) = f1b(i-1) - y8b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f1bmaxb = f1bmaxb + x8b
            ELSE
              f1bmaxb = f1bmaxb - x8b
            END IF
            CALL POPINTEGER4(i)
          END IF
          f0b(ie) = f0b(ie) + qrb(ie, n)
          slopeb(i) = slopeb(i) - 0.5*qrb(ie, n)
          qrb(ie, n) = 0.0
          amin16b = 0.5*(SIGN(1., at1)+SIGN(1., 2.*f1(ie-1)))*slopeb(i)
          slopeb(i) = 0.0
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y7b = amin16b
            x7b = 0.0
          ELSE
            x7b = amin16b
            y7b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1b(ie-1) = f1b(ie-1) + 2.*y7b
          ELSE
            f1b(ie-1) = f1b(ie-1) - 2.*y7b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            at1b = x7b
          ELSE
            at1b = -x7b
          END IF
          f1b(ie-1) = f1b(ie-1) + at1b
          f2mb(ie-1) = f2mb(ie-1) + 0.5*at1b
          CALL POPCONTROL1B(branch)
          IF (branch .NE. 0) THEN
            f0b(i) = f0b(i) + qlb(i, n)
            slopeb(i) = slopeb(i) + 0.5*qlb(i, n)
            qlb(i, n) = 0.0
            amin15b = SIGN(1., t1)*slopeb(i)
            slopeb(i) = 0.0
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y6b = amin15b
              x6b = 0.0
            ELSE
              x6b = amin15b
              y6b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y21b = y6b
              x21b = 0.0
            ELSE
              x21b = y6b
              y21b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              t1b = y21b
            ELSE
              t1b = -y21b
            END IF
            abs5b = 2.*x21b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              s1b = abs5b
            ELSE
              s1b = -abs5b
            END IF
            abs0b = 0.5*x6b
            at = f1(i) - 0.5*f2m(i)
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              atb = abs0b
              ati1b = abs0b
            ELSE
              atb = -abs0b
              ati1b = -abs0b
            END IF
            amin14b = 0.5*(SIGN(1., at)+SIGN(1., ati1))*t1b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y5b = amin14b
              x5b = 0.0
            ELSE
              x5b = amin14b
              y5b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              ati1b = ati1b + y5b
            ELSE
              ati1b = ati1b - y5b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              atb = atb + x5b
            ELSE
              atb = atb - x5b
            END IF
            tempb = 0.5**2*ati1b
            f1bminb = f1bminb + ati1b
            amin13b = (SIGN(1., f2(i))+SIGN(1., f2bmin))*tempb
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y4b = amin13b
              x4b = 0.0
            ELSE
              x4b = amin13b
              y4b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f2bminb = f2bminb + y4b
            ELSE
              f2bminb = f2bminb - y4b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f2b(i) = f2b(i) + x4b
            ELSE
              f2b(i) = f2b(i) - x4b
            END IF
            f1b(i) = f1b(i) + atb
            f2mb(i) = f2mb(i) - 0.5*atb
            amin12b = 0.5*(SIGN(1., f1(i))+SIGN(1., f1bmin))*s1b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y3b = amin12b
              x3b = 0.0
            ELSE
              x3b = amin12b
              y3b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f1bminb = f1bminb + y3b
            ELSE
              f1bminb = f1bminb - y3b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f1b(i) = f1b(i) + x3b
            ELSE
              f1b(i) = f1b(i) - x3b
            END IF
            CALL POPINTEGER4(i)
          END IF
          f0b(is) = f0b(is) + qlb(is, n)
          slopeb(i) = slopeb(i) + 0.5*qlb(is, n)
          qlb(is, n) = 0.0
          at = f1(is) - 0.5*f2m(is)
          amin11b = 0.5*(SIGN(1., at)+SIGN(1., 2.*f1(is)))*slopeb(i)
          slopeb(i) = 0.0
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y2b = amin11b
            x2b = 0.0
          ELSE
            x2b = amin11b
            y2b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1b(is) = f1b(is) + 2.*y2b
          ELSE
            f1b(is) = f1b(is) - 2.*y2b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = x2b
          ELSE
            atb = -x2b
          END IF
          f1b(is) = f1b(is) + atb
          f2mb(is) = f2mb(is) - 0.5*atb
          DO i=is,ie-1
            IF (f2(i) .GE. 0.) THEN
              x1 = f2(i)
              CALL PUSHCONTROL1B(0)
            ELSE
              x1 = -f2(i)
              CALL PUSHCONTROL1B(1)
            END IF
            IF (f2(i+1) .GE. 0.) THEN
              y1 = f2(i+1)
              CALL PUSHCONTROL1B(0)
            ELSE
              y1 = -f2(i+1)
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x1 .GT. y1) THEN
              CALL PUSHCONTROL1B(0)
            ELSE
              CALL PUSHCONTROL1B(1)
            END IF
            amin10b = 0.5*(SIGN(1., f2(i))+SIGN(1., f2(i+1)))*f2mb(i)
            f2mb(i) = 0.0
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y1b = amin10b
              x1b = 0.0
            ELSE
              x1b = amin10b
              y1b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f2b(i+1) = f2b(i+1) + y1b
            ELSE
              f2b(i+1) = f2b(i+1) - y1b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f2b(i) = f2b(i) + x1b
            ELSE
              f2b(i) = f2b(i) - x1b
            END IF
          ENDDO
          CALL POPCONTROL1B(branch)
          IF (branch .NE. 0) THEN
            f2b(ie) = f2b(ie) + 2.*f2bmaxb
            f2b(ie-1) = f2b(ie-1) - f2bmaxb
            f1bmaxb = f1bmaxb + f2b(ie)
            f1b(ie-1) = f1b(ie-1) - f2b(ie)
            f2b(ie) = 0.0
            f0b(ie) = f0b(ie) - f1bmaxb
            f1bmaxb = 0.0
            f2bmaxb = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2b(is) = f2b(is) + 2.*f2bminb
            f2b(is+1) = f2b(is+1) - f2bminb
            f1b(is) = f1b(is) + f2b(is)
            f1bminb = f1bminb - f2b(is)
            f2b(is) = 0.0
            f0b(is) = f0b(is) + f1bminb
            f1bminb = 0.0
            f2bminb = 0.0
          END IF
          f2b(ie-1) = f2b(ie-1) + 2.*f2b(ie)
          f2b(ie-2) = f2b(ie-2) - f2b(ie)
          f2b(ie) = 0.0
          f2b(is+1) = f2b(is+1) + 2.*f2b(is)
          f2b(is+2) = f2b(is+2) - f2b(is)
          f2b(is) = 0.0
          DO i=is+1,ie-1
            f1b(i) = f1b(i) + f2b(i)
            f1b(i-1) = f1b(i-1) - f2b(i)
            f2b(i) = 0.0
          ENDDO
          DO i=is,ie-1
            f0b(i+1) = f0b(i+1) + f1b(i)
            f0b(i) = f0b(i) - f1b(i)
            f1b(i) = 0.0
          ENDDO
          CALL POPREAL8ARRAY(f0, mdim)
          DO i=is,ie
            fb(i, n) = fb(i, n) + f0b(i)
            f0b(i) = 0.0
          ENDDO
          CALL POPINTEGER4(i)
        ENDDO
      END IF
      END
