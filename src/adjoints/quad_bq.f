C        Generated by TAPENADE     (INRIA, Tropics team)
C  Tapenade 3.6 (r4343) - 10 Feb 2012 10:52
C
C  Differentiation of quad in reverse (adjoint) mode:
C   gradient     of useful results: f ql qr
C   with respect to varying inputs: f ql qr
C
C*************************************************************************
      SUBROUTINE QUAD_BQ(f, fb, ql, qlb, qr, qrb, is, ie, im, th, qt, 
     +                   eps, fmin, fmax, ibmin, ibmax)
      USE PARAMS_GLOBAL
      IMPLICIT NONE
C**************************************************************************
      INCLUDE 'DIFFSIZES.inc'
C  Hint: ISIZE1OFd1bINquad should be the value of mdim
C  Hint: ISIZE1OFd2bINquad should be the value of mdim
C  Hint: ISIZE1OFcon3bINquad should be the value of mdim
C  Hint: ISIZE1OFs1bINquad should be the value of mdim
C  Hint: ISIZE1OFsfbINquad should be the value of mdim
C  Hint: ISIZE1OFscbINquad should be the value of mdim
C  Hint: ISIZE1OFsbbINquad should be the value of mdim
C
C..piecewise quadratic reconstruction with 6th order compact evaluation of
C  nodal derivatives and new monotonicity-preserving constraint.
C
C**************************************************************************
C**************************************************************************
      INTEGER is, ie, im, ibmin, ibmax
      REAL th, qt, eps
      REAL f(mdim, nmv), ql(mdim, nmv), qr(mdim, nmv)
      REAL fb(mdim, nmv), qlb(mdim, nmv), qrb(mdim, nmv)
C local variables
      REAL fmin(nmv), fmax(nmv)
C
      REAL d1(mdim), d2(mdim)
      REAL con1(mdim), con2(mdim), con3(mdim)
      REAL s1(mdim), sf(mdim), sc(mdim), sb(mdim)
C
      REAL amedian, ammd
      REAL b, c, d, fl, fr
      INTEGER n, i, is1, is2, ie2, ie1
      REAL f1i, f1i1, f1i2, f1i3, f2i1, f2i2, f2i3, f2i, f2mi
      REAL f1ib, f1i1b, f1i2b, f1i3b, f2i1b, f2i2b, f2i3b, f2ib, f2mib
      REAL f1bmin, f2bmin, f2mi1, f2mi2, at, sl, ati1, t1, slopes2
      REAL f1bminb, f2bminb, f2mi1b, f2mi2b, atb, slb, ati1b, t1b, 
     +     slopes2b
      REAL f1i4, f1bmax, f2bmax, f2mi3, at1, slopee2, sm, cm, si, ci
      REAL f1i4b, f1bmaxb, f2bmaxb, f2mi3b, at1b, slopee2b, smb, cmb, 
     +     sib, cib
      REAL sr, cr, cl
      REAL srb, crb, clb
      INTEGER branch
      REAL x3b
      REAL amin114b
      REAL y1b
      REAL amin122b
      REAL amin130b
      REAL x19
      REAL x39b
      REAL x18
      REAL x10b
      REAL y28b
      REAL x17
      REAL y36b
      REAL x16
      REAL x15
      REAL x6b
      REAL amin117b
      REAL x14
      REAL y4b
      REAL amin125b
      REAL x13
      REAL amin10b
      REAL amin133b
      REAL x12
      REAL x11
      REAL y29
      REAL x13b
      REAL x10
      REAL y28
      REAL y39b
      REAL x21b
      REAL y27
      REAL y10b
      REAL y26
      REAL x9b
      REAL y25
      REAL y7b
      REAL tempb6
      REAL amin128b
      REAL y24
      REAL amin13b
      REAL tempb5
      REAL y23
      REAL x42
      REAL scb(mdim)
      REAL tempb4
      REAL y22
      REAL x41
      REAL amin19
      REAL x16b
      REAL tempb3
      REAL y21
      REAL x40
      REAL amin18
      REAL amin119
      REAL x24b
      REAL abs11b
      REAL tempb2
      REAL y20
      REAL amin17
      REAL amin118
      REAL y13b
      REAL tempb1
      REAL x32b
      REAL amin16
      REAL amin117
      REAL tempb0
      REAL y21b
      REAL x40b
      REAL x9
      REAL amin15
      REAL amin116
      REAL x8
      REAL amin14
      REAL amin115
      REAL amin16b
      REAL x7
      REAL amin13
      REAL amin114
      REAL abs27
      REAL sfb(mdim)
      REAL amin110b
      REAL x6
      REAL amin12
      REAL amin113
      REAL abs26
      REAL x19b
      INTRINSIC SIGN
      REAL x5
      REAL amin11
      REAL amin112
      REAL abs25
      REAL abs7b
      REAL x27b
      REAL x4
      REAL amin10
      REAL amin111
      REAL abs24
      REAL abs22b
      REAL y16b
      REAL x35b
      REAL x3
      REAL amin110
      REAL abs23
      REAL y24b
      INTRINSIC ABS
      REAL x2
      REAL abs22
      REAL y32b
      REAL x1
      REAL abs21
      REAL con3b(mdim)
      REAL amin19b
      REAL y40b
      REAL abs20
      REAL x2b
      REAL amin113b
      REAL amin121b
      REAL x38b
      REAL y19b
      REAL abs25b
      REAL y27b
      REAL y35b
      REAL x5b
      REAL amin116b
      REAL y3b
      REAL amin124b
      REAL amin132b
      REAL x39
      REAL y19
      REAL x38
      REAL x12b
      REAL y18
      REAL x37
      REAL y38b
      REAL x20b
      REAL y17
      REAL x36
      REAL y16
      REAL x35
      REAL x8b
      REAL amin119b
      REAL y15
      REAL x34
      REAL y6b
      REAL amin127b
      REAL y14
      REAL x33
      REAL amin12b
      REAL amin135b
      REAL y13
      REAL x32
      REAL sbb(mdim)
      REAL y12
      REAL x31
      REAL x15b
      REAL y11
      REAL x30
      REAL abs10b
      REAL x23b
      REAL y10
      REAL d2b(mdim)
      REAL y12b
      REAL x31b
      REAL y20b
      REAL abs19
      REAL tempb
      REAL y9b
      REAL abs18
      REAL amin15b
      REAL abs17
      REAL y42
      REAL abs16
      REAL x18b
      INTRINSIC AMAX1
      REAL y41
      REAL abs15
      REAL x26b
      REAL y40
      REAL abs14
      REAL abs21b
      REAL y15b
      REAL x34b
      REAL abs13
      REAL y23b
      REAL x42b
      REAL abs12
      REAL y31b
      REAL amin135
      REAL abs11
      REAL amin18b
      REAL amin134
      REAL abs10
      REAL x1b
      REAL amin112b
      REAL amin133
      REAL amin120b
      REAL amin132
      REAL abs9b
      REAL x29b
      REAL amin131
      REAL x37b
      REAL y18b
      REAL abs24b
      REAL amin130
      REAL y26b
      REAL s1b(mdim)
      REAL y34b
      REAL y42b
      REAL x4b
      REAL amin115b
      REAL y2b
      REAL amin123b
      REAL amin131b
      REAL x29
      REAL abs9
      REAL x28
      REAL abs8
      REAL x11b
      REAL y29b
      REAL x27
      REAL abs7
      REAL y37b
      REAL x26
      REAL abs6
      REAL x25
      REAL abs5
      REAL x7b
      REAL amin118b
      REAL x24
      REAL abs4
      REAL y5b
      REAL amin126b
      REAL x23
      REAL abs3
      REAL amin11b
      REAL amin134b
      INTRINSIC AMIN1
      REAL x22
      REAL abs2
      REAL x21
      REAL y39
      REAL abs1
      REAL x14b
      REAL x20
      REAL y38
      REAL abs0
      REAL x22b
      REAL y37
      REAL d1b(mdim)
      REAL y11b
      REAL x30b
      REAL y36
      REAL y35
      REAL y8b
      REAL amin129b
      REAL y34
      REAL amin14b
      REAL y33
      REAL y32
      REAL x17b
      REAL y31
      REAL amin129
      REAL x25b
      REAL abs12b
      REAL y30
      REAL amin128
      REAL abs20b
      REAL y14b
      REAL x33b
      REAL amin127
      REAL y22b
      REAL x41b
      REAL y9
      REAL amin126
      REAL y30b
      REAL y8
      REAL amin125
      REAL amin17b
      REAL y7
      REAL amin124
      REAL amin111b
      REAL y6
      REAL amin123
      REAL y5
      REAL amin122
      REAL abs8b
      REAL x28b
      REAL y4
      REAL amin121
      REAL y17b
      REAL abs23b
      REAL x36b
      REAL y3
      REAL amin120
      REAL y25b
      REAL y2
      REAL y33b
      REAL y1
      REAL y41b
C**************************************************************************
C
C***  first executable statement
C
      IF (qt .EQ. 0.) THEN
        DO n=1,nmv
          DO i=is,ie
            fb(i, n) = fb(i, n) + qlb(i, n) + qrb(i, n)
            qrb(i, n) = 0.0
            qlb(i, n) = 0.0
          ENDDO
        ENDDO
      ELSE
        is1 = is + 1
        is2 = is + 2
        ie2 = ie - 2
        ie1 = ie - 1
        s1b = 0.0
        f1bmaxb = 0.0
        con3b = 0.0
        d1b = 0.0
        f2bmaxb = 0.0
        d2b = 0.0
        sbb = 0.0
        scb = 0.0
        f1bminb = 0.0
        sfb = 0.0
        cmb = 0.0
        f2bminb = 0.0
        DO n=1,nmv
C
C..slope:
C
          i = is
          f1i = f(i+1, n) - f(i, n)
          f1i1 = f(i+2, n) - f(i+1, n)
          f1i2 = f(i+3, n) - f(i+2, n)
          f1i3 = f(i+4, n) - f(i+3, n)
          f2i1 = f1i1 - f1i
          f2i2 = f1i2 - f1i1
          f2i3 = f1i3 - f1i2
          f2i = 2.*f2i1 - f2i2
          IF (ibmin .EQ. 2) THEN
            f1bmin = f(i, n) - fmin(n)
            f2i = f1i - f1bmin
            f2bmin = 2.*f2i - f2i1
            CALL PUSHCONTROL1B(0)
          ELSE
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f2i .GE. 0.) THEN
            x1 = f2i
            CALL PUSHCONTROL1B(0)
          ELSE
            x1 = -f2i
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f2i1 .GE. 0.) THEN
            y1 = f2i1
            CALL PUSHCONTROL1B(0)
          ELSE
            y1 = -f2i1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x1 .GT. y1) THEN
            amin10 = y1
            CALL PUSHCONTROL1B(0)
          ELSE
            amin10 = x1
            CALL PUSHCONTROL1B(1)
          END IF
          f2mi = 0.5*(SIGN(1., f2i)+SIGN(1., f2i1))*amin10
          IF (f2i1 .GE. 0.) THEN
            x2 = f2i1
            CALL PUSHCONTROL1B(0)
          ELSE
            x2 = -f2i1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f2i2 .GE. 0.) THEN
            y2 = f2i2
            CALL PUSHCONTROL1B(0)
          ELSE
            y2 = -f2i2
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x2 .GT. y2) THEN
            amin11 = y2
            CALL PUSHCONTROL1B(0)
          ELSE
            amin11 = x2
            CALL PUSHCONTROL1B(1)
          END IF
          f2mi1 = 0.5*(SIGN(1., f2i1)+SIGN(1., f2i2))*amin11
          IF (f2i2 .GE. 0.) THEN
            x3 = f2i2
            CALL PUSHCONTROL1B(0)
          ELSE
            x3 = -f2i2
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f2i3 .GE. 0.) THEN
            y3 = f2i3
            CALL PUSHCONTROL1B(0)
          ELSE
            y3 = -f2i3
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x3 .GT. y3) THEN
            amin12 = y3
            CALL PUSHCONTROL1B(0)
          ELSE
            amin12 = x3
            CALL PUSHCONTROL1B(1)
          END IF
          f2mi2 = 0.5*(SIGN(1., f2i2)+SIGN(1., f2i3))*amin12
          at = f1i - 0.5*f2mi
          IF (at .GE. 0.) THEN
            x4 = at
            CALL PUSHCONTROL1B(0)
          ELSE
            x4 = -at
            CALL PUSHCONTROL1B(1)
          END IF
          IF (2.*f1i .GE. 0.) THEN
            y4 = 2.*f1i
            CALL PUSHCONTROL1B(0)
          ELSE
            y4 = -(2.*f1i)
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x4 .GT. y4) THEN
            amin13 = y4
            CALL PUSHCONTROL1B(0)
          ELSE
            amin13 = x4
            CALL PUSHCONTROL1B(1)
          END IF
          d1(i) = 0.5*(SIGN(1., at)+SIGN(1., 2.*f1i))*amin13
          IF (ibmin .EQ. 2) THEN
            IF (f1i .GE. 0.) THEN
              x5 = f1i
              CALL PUSHCONTROL1B(0)
            ELSE
              x5 = -f1i
              CALL PUSHCONTROL1B(1)
            END IF
            IF (f1bmin .GE. 0.) THEN
              y5 = f1bmin
              CALL PUSHCONTROL1B(0)
            ELSE
              y5 = -f1bmin
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x5 .GT. y5) THEN
              amin14 = y5
              CALL PUSHCONTROL1B(0)
            ELSE
              amin14 = x5
              CALL PUSHCONTROL1B(1)
            END IF
            sl = 0.5*(SIGN(1., f1i)+SIGN(1., f1bmin))*amin14
            at = f1i - 0.5*f2mi
            IF (f2i .GE. 0.) THEN
              x6 = f2i
              CALL PUSHCONTROL1B(0)
            ELSE
              x6 = -f2i
              CALL PUSHCONTROL1B(1)
            END IF
            IF (f2bmin .GE. 0.) THEN
              y6 = f2bmin
              CALL PUSHCONTROL1B(0)
            ELSE
              y6 = -f2bmin
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x6 .GT. y6) THEN
              amin15 = y6
              CALL PUSHCONTROL1B(0)
            ELSE
              amin15 = x6
              CALL PUSHCONTROL1B(1)
            END IF
            ati1 = f1bmin + 0.5*(0.5*(SIGN(1., f2i)+SIGN(1., f2bmin))*
     +        amin15)
            IF (at .GE. 0.) THEN
              x7 = at
              CALL PUSHCONTROL1B(0)
            ELSE
              x7 = -at
              CALL PUSHCONTROL1B(1)
            END IF
            IF (ati1 .GE. 0.) THEN
              y7 = ati1
              CALL PUSHCONTROL1B(0)
            ELSE
              y7 = -ati1
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x7 .GT. y7) THEN
              amin16 = y7
              CALL PUSHCONTROL1B(0)
            ELSE
              amin16 = x7
              CALL PUSHCONTROL1B(1)
            END IF
            t1 = 0.5*(SIGN(1., at)+SIGN(1., ati1))*amin16
            IF (at + ati1 .GE. 0.) THEN
              abs7 = at + ati1
              CALL PUSHCONTROL1B(0)
            ELSE
              abs7 = -(at+ati1)
              CALL PUSHCONTROL1B(1)
            END IF
            x8 = 0.5*abs7
            IF (sl .GE. 0.) THEN
              abs20 = sl
              CALL PUSHCONTROL1B(0)
            ELSE
              abs20 = -sl
              CALL PUSHCONTROL1B(1)
            END IF
            x37 = 2.*abs20
            IF (t1 .GE. 0.) THEN
              y37 = t1
              CALL PUSHCONTROL1B(0)
            ELSE
              y37 = -t1
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x37 .LT. y37) THEN
              y8 = y37
              CALL PUSHCONTROL1B(0)
            ELSE
              y8 = x37
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x8 .GT. y8) THEN
              amin17 = y8
              CALL PUSHCONTROL1B(0)
            ELSE
              amin17 = x8
              CALL PUSHCONTROL1B(1)
            END IF
            d1(i) = SIGN(1., t1)*amin17
            CALL PUSHCONTROL1B(1)
          ELSE
            CALL PUSHCONTROL1B(0)
          END IF
C
C..sonica scheme at the boundary:
C
C
          i = is1
          at = f1i1 - 0.5*f2mi1
          CALL PUSHREAL8(ati1)
          ati1 = f1i + 0.5*f2mi
          IF (f1i1 .GE. 0.) THEN
            x9 = f1i1
            CALL PUSHCONTROL1B(0)
          ELSE
            x9 = -f1i1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f1i .GE. 0.) THEN
            y9 = f1i
            CALL PUSHCONTROL1B(0)
          ELSE
            y9 = -f1i
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x9 .GT. y9) THEN
            amin18 = y9
            CALL PUSHCONTROL1B(0)
          ELSE
            amin18 = x9
            CALL PUSHCONTROL1B(1)
          END IF
          sl = 0.5*(SIGN(1., f1i1)+SIGN(1., f1i))*amin18
          IF (at .GE. 0.) THEN
            x10 = at
            CALL PUSHCONTROL1B(0)
          ELSE
            x10 = -at
            CALL PUSHCONTROL1B(1)
          END IF
          IF (ati1 .GE. 0.) THEN
            y10 = ati1
            CALL PUSHCONTROL1B(0)
          ELSE
            y10 = -ati1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x10 .GT. y10) THEN
            amin19 = y10
            CALL PUSHCONTROL1B(0)
          ELSE
            amin19 = x10
            CALL PUSHCONTROL1B(1)
          END IF
          CALL PUSHREAL8(t1)
          t1 = 0.5*(SIGN(1., at)+SIGN(1., ati1))*amin19
          IF (at + ati1 .GE. 0.) THEN
            abs8 = at + ati1
            CALL PUSHCONTROL1B(0)
          ELSE
            abs8 = -(at+ati1)
            CALL PUSHCONTROL1B(1)
          END IF
          x11 = 0.5*abs8
          IF (sl .GE. 0.) THEN
            abs21 = sl
            CALL PUSHCONTROL1B(0)
          ELSE
            abs21 = -sl
            CALL PUSHCONTROL1B(1)
          END IF
          x38 = 2.*abs21
          IF (t1 .GE. 0.) THEN
            y38 = t1
            CALL PUSHCONTROL1B(0)
          ELSE
            y38 = -t1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x38 .LT. y38) THEN
            y11 = y38
            CALL PUSHCONTROL1B(0)
          ELSE
            y11 = x38
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x11 .GT. y11) THEN
            amin110 = y11
            CALL PUSHCONTROL1B(0)
          ELSE
            amin110 = x11
            CALL PUSHCONTROL1B(1)
          END IF
          d1(i) = SIGN(1., t1)*amin110
C
C
          i = is2
          CALL PUSHREAL8(at)
          at = f1i2 - 0.5*f2mi2
          ati1 = f1i1 + 0.5*f2mi1
          IF (f1i2 .GE. 0.) THEN
            x12 = f1i2
            CALL PUSHCONTROL1B(0)
          ELSE
            x12 = -f1i2
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f1i1 .GE. 0.) THEN
            y12 = f1i1
            CALL PUSHCONTROL1B(0)
          ELSE
            y12 = -f1i1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x12 .GT. y12) THEN
            amin111 = y12
            CALL PUSHCONTROL1B(0)
          ELSE
            amin111 = x12
            CALL PUSHCONTROL1B(1)
          END IF
          sl = 0.5*(SIGN(1., f1i2)+SIGN(1., f1i1))*amin111
          IF (at .GE. 0.) THEN
            x13 = at
            CALL PUSHCONTROL1B(0)
          ELSE
            x13 = -at
            CALL PUSHCONTROL1B(1)
          END IF
          IF (ati1 .GE. 0.) THEN
            y13 = ati1
            CALL PUSHCONTROL1B(0)
          ELSE
            y13 = -ati1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x13 .GT. y13) THEN
            amin112 = y13
            CALL PUSHCONTROL1B(0)
          ELSE
            amin112 = x13
            CALL PUSHCONTROL1B(1)
          END IF
          CALL PUSHREAL8(t1)
          t1 = 0.5*(SIGN(1., at)+SIGN(1., ati1))*amin112
          IF (at + ati1 .GE. 0.) THEN
            abs9 = at + ati1
            CALL PUSHCONTROL1B(0)
          ELSE
            abs9 = -(at+ati1)
            CALL PUSHCONTROL1B(1)
          END IF
          x14 = 0.5*abs9
          IF (sl .GE. 0.) THEN
            abs22 = sl
            CALL PUSHCONTROL1B(0)
          ELSE
            abs22 = -sl
            CALL PUSHCONTROL1B(1)
          END IF
          x39 = 2.*abs22
          IF (t1 .GE. 0.) THEN
            y39 = t1
            CALL PUSHCONTROL1B(0)
          ELSE
            y39 = -t1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x39 .LT. y39) THEN
            y14 = y39
            CALL PUSHCONTROL1B(0)
          ELSE
            y14 = x39
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x14 .GT. y14) THEN
            CALL PUSHCONTROL1B(0)
          ELSE
            CALL PUSHCONTROL1B(1)
          END IF
C
          con1(i) = 0.25
          con2(i) = 1.
          con3(i) = 0.75*(f(i+1, n)-f(i-1, n))
          con3(i) = con3(i) - con1(i)*d1(i-1)
          CALL PUSHINTEGER4(i)
          CALL PUSHREAL8ARRAY(con1, mdim)
C
          DO i=is+3,ie-3
            con1(i) = 1./3.
            con2(i) = 1.
            con3(i) = (f(i+2, n)+28.*f(i+1, n)-28.*f(i-1, n)-f(i-2, n))/
     +        36.
          ENDDO
C
          i = ie
          CALL PUSHREAL8(f1i1)
          f1i1 = f(i, n) - f(i-1, n)
          CALL PUSHREAL8(f1i2)
          f1i2 = f(i-1, n) - f(i-2, n)
          f1i3 = f(i-2, n) - f(i-3, n)
          f1i4 = f(i-3, n) - f(i-4, n)
          f2i1 = f1i1 - f1i2
          f2i2 = f1i2 - f1i3
          f2i3 = f1i3 - f1i4
          CALL PUSHREAL8(f2i)
          f2i = 2.*f2i1 - f2i2
          IF (ibmax .EQ. 2) THEN
            f1bmax = fmax(n) - f(i, n)
            f2i = f1bmax - f1i1
            f2bmax = 2.*f2i - f2i1
            CALL PUSHCONTROL1B(0)
          ELSE
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f2i1 .GE. 0.) THEN
            x15 = f2i1
            CALL PUSHCONTROL1B(0)
          ELSE
            x15 = -f2i1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f2i .GE. 0.) THEN
            y15 = f2i
            CALL PUSHCONTROL1B(0)
          ELSE
            y15 = -f2i
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x15 .GT. y15) THEN
            amin114 = y15
            CALL PUSHCONTROL1B(0)
          ELSE
            amin114 = x15
            CALL PUSHCONTROL1B(1)
          END IF
          f2mi1 = 0.5*(SIGN(1., f2i1)+SIGN(1., f2i))*amin114
          IF (f2i2 .GE. 0.) THEN
            x16 = f2i2
            CALL PUSHCONTROL1B(0)
          ELSE
            x16 = -f2i2
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f2i1 .GE. 0.) THEN
            y16 = f2i1
            CALL PUSHCONTROL1B(0)
          ELSE
            y16 = -f2i1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x16 .GT. y16) THEN
            amin115 = y16
            CALL PUSHCONTROL1B(0)
          ELSE
            amin115 = x16
            CALL PUSHCONTROL1B(1)
          END IF
          f2mi2 = 0.5*(SIGN(1., f2i2)+SIGN(1., f2i1))*amin115
          IF (f2i3 .GE. 0.) THEN
            x17 = f2i3
            CALL PUSHCONTROL1B(0)
          ELSE
            x17 = -f2i3
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f2i2 .GE. 0.) THEN
            y17 = f2i2
            CALL PUSHCONTROL1B(0)
          ELSE
            y17 = -f2i2
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x17 .GT. y17) THEN
            amin116 = y17
            CALL PUSHCONTROL1B(0)
          ELSE
            amin116 = x17
            CALL PUSHCONTROL1B(1)
          END IF
          f2mi3 = 0.5*(SIGN(1., f2i3)+SIGN(1., f2i2))*amin116
          at1 = f1i1 + 0.5*f2mi1
          IF (at1 .GE. 0.) THEN
            x18 = at1
            CALL PUSHCONTROL1B(0)
          ELSE
            x18 = -at1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (2.*f1i1 .GE. 0.) THEN
            y18 = 2.*f1i1
            CALL PUSHCONTROL1B(0)
          ELSE
            y18 = -(2.*f1i1)
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x18 .GT. y18) THEN
            amin117 = y18
            CALL PUSHCONTROL1B(0)
          ELSE
            amin117 = x18
            CALL PUSHCONTROL1B(1)
          END IF
          d1(i) = 0.5*(SIGN(1., at1)+SIGN(1., 2.*f1i1))*amin117
          IF (ibmax .EQ. 2) THEN
            IF (f1bmax .GE. 0.) THEN
              x19 = f1bmax
              CALL PUSHCONTROL1B(0)
            ELSE
              x19 = -f1bmax
              CALL PUSHCONTROL1B(1)
            END IF
            IF (f1i1 .GE. 0.) THEN
              y19 = f1i1
              CALL PUSHCONTROL1B(0)
            ELSE
              y19 = -f1i1
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x19 .GT. y19) THEN
              amin118 = y19
              CALL PUSHCONTROL1B(0)
            ELSE
              amin118 = x19
              CALL PUSHCONTROL1B(1)
            END IF
            sl = 0.5*(SIGN(1., f1bmax)+SIGN(1., f1i1))*amin118
            IF (f2i1 .GE. 0.) THEN
              x20 = f2i1
              CALL PUSHCONTROL1B(0)
            ELSE
              x20 = -f2i1
              CALL PUSHCONTROL1B(1)
            END IF
            IF (f2bmax .GE. 0.) THEN
              y20 = f2bmax
              CALL PUSHCONTROL1B(0)
            ELSE
              y20 = -f2bmax
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x20 .GT. y20) THEN
              amin119 = y20
              CALL PUSHCONTROL1B(0)
            ELSE
              amin119 = x20
              CALL PUSHCONTROL1B(1)
            END IF
            CALL PUSHREAL8(at)
            at = f1bmax - 0.5*(0.5*(SIGN(1., f2i1)+SIGN(1., f2bmax))*
     +        amin119)
            CALL PUSHREAL8(ati1)
            ati1 = f1i1 + 0.5*f2mi1
            IF (at .GE. 0.) THEN
              x21 = at
              CALL PUSHCONTROL1B(0)
            ELSE
              x21 = -at
              CALL PUSHCONTROL1B(1)
            END IF
            IF (ati1 .GE. 0.) THEN
              y21 = ati1
              CALL PUSHCONTROL1B(0)
            ELSE
              y21 = -ati1
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x21 .GT. y21) THEN
              amin120 = y21
              CALL PUSHCONTROL1B(0)
            ELSE
              amin120 = x21
              CALL PUSHCONTROL1B(1)
            END IF
            CALL PUSHREAL8(t1)
            t1 = 0.5*(SIGN(1., at)+SIGN(1., ati1))*amin120
            IF (at + ati1 .GE. 0.) THEN
              abs10 = at + ati1
              CALL PUSHCONTROL1B(0)
            ELSE
              abs10 = -(at+ati1)
              CALL PUSHCONTROL1B(1)
            END IF
            x22 = 0.5*abs10
            IF (sl .GE. 0.) THEN
              abs23 = sl
              CALL PUSHCONTROL1B(0)
            ELSE
              abs23 = -sl
              CALL PUSHCONTROL1B(1)
            END IF
            x40 = 2.*abs23
            IF (t1 .GE. 0.) THEN
              y40 = t1
              CALL PUSHCONTROL1B(0)
            ELSE
              y40 = -t1
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x40 .LT. y40) THEN
              y22 = y40
              CALL PUSHCONTROL1B(0)
            ELSE
              y22 = x40
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x22 .GT. y22) THEN
              amin121 = y22
              CALL PUSHCONTROL1B(0)
            ELSE
              amin121 = x22
              CALL PUSHCONTROL1B(1)
            END IF
            d1(i) = SIGN(1., t1)*amin121
            CALL PUSHCONTROL1B(1)
          ELSE
            CALL PUSHCONTROL1B(0)
          END IF
C
C
          i = ie1
          CALL PUSHREAL8(at)
          at = f1i1 - 0.5*f2mi1
          CALL PUSHREAL8(ati1)
          ati1 = f1i2 + 0.5*f2mi2
          IF (f1i1 .GE. 0.) THEN
            x23 = f1i1
            CALL PUSHCONTROL1B(0)
          ELSE
            x23 = -f1i1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f1i2 .GE. 0.) THEN
            y23 = f1i2
            CALL PUSHCONTROL1B(0)
          ELSE
            y23 = -f1i2
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x23 .GT. y23) THEN
            amin122 = y23
            CALL PUSHCONTROL1B(0)
          ELSE
            amin122 = x23
            CALL PUSHCONTROL1B(1)
          END IF
          sl = 0.5*(SIGN(1., f1i1)+SIGN(1., f1i2))*amin122
          IF (at .GE. 0.) THEN
            x24 = at
            CALL PUSHCONTROL1B(0)
          ELSE
            x24 = -at
            CALL PUSHCONTROL1B(1)
          END IF
          IF (ati1 .GE. 0.) THEN
            y24 = ati1
            CALL PUSHCONTROL1B(0)
          ELSE
            y24 = -ati1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x24 .GT. y24) THEN
            amin123 = y24
            CALL PUSHCONTROL1B(0)
          ELSE
            amin123 = x24
            CALL PUSHCONTROL1B(1)
          END IF
          CALL PUSHREAL8(t1)
          t1 = 0.5*(SIGN(1., at)+SIGN(1., ati1))*amin123
          IF (at + ati1 .GE. 0.) THEN
            abs11 = at + ati1
            CALL PUSHCONTROL1B(0)
          ELSE
            abs11 = -(at+ati1)
            CALL PUSHCONTROL1B(1)
          END IF
          x25 = 0.5*abs11
          IF (sl .GE. 0.) THEN
            abs24 = sl
            CALL PUSHCONTROL1B(0)
          ELSE
            abs24 = -sl
            CALL PUSHCONTROL1B(1)
          END IF
          x41 = 2.*abs24
          IF (t1 .GE. 0.) THEN
            y41 = t1
            CALL PUSHCONTROL1B(0)
          ELSE
            y41 = -t1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x41 .LT. y41) THEN
            y25 = y41
            CALL PUSHCONTROL1B(0)
          ELSE
            y25 = x41
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x25 .GT. y25) THEN
            amin124 = y25
            CALL PUSHCONTROL1B(0)
          ELSE
            amin124 = x25
            CALL PUSHCONTROL1B(1)
          END IF
          d1(i) = SIGN(1., t1)*amin124
C
C
          i = ie2
          at = f1i2 - 0.5*f2mi2
          ati1 = f1i3 + 0.5*f2mi3
          IF (f1i2 .GE. 0.) THEN
            x26 = f1i2
            CALL PUSHCONTROL1B(0)
          ELSE
            x26 = -f1i2
            CALL PUSHCONTROL1B(1)
          END IF
          IF (f1i3 .GE. 0.) THEN
            y26 = f1i3
            CALL PUSHCONTROL1B(0)
          ELSE
            y26 = -f1i3
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x26 .GT. y26) THEN
            amin125 = y26
            CALL PUSHCONTROL1B(0)
          ELSE
            amin125 = x26
            CALL PUSHCONTROL1B(1)
          END IF
          sl = 0.5*(SIGN(1., f1i2)+SIGN(1., f1i3))*amin125
          IF (at .GE. 0.) THEN
            x27 = at
            CALL PUSHCONTROL1B(0)
          ELSE
            x27 = -at
            CALL PUSHCONTROL1B(1)
          END IF
          IF (ati1 .GE. 0.) THEN
            y27 = ati1
            CALL PUSHCONTROL1B(0)
          ELSE
            y27 = -ati1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x27 .GT. y27) THEN
            amin126 = y27
            CALL PUSHCONTROL1B(0)
          ELSE
            amin126 = x27
            CALL PUSHCONTROL1B(1)
          END IF
          CALL PUSHREAL8(t1)
          t1 = 0.5*(SIGN(1., at)+SIGN(1., ati1))*amin126
          IF (at + ati1 .GE. 0.) THEN
            abs12 = at + ati1
            CALL PUSHCONTROL1B(0)
          ELSE
            abs12 = -(at+ati1)
            CALL PUSHCONTROL1B(1)
          END IF
          x28 = 0.5*abs12
          IF (sl .GE. 0.) THEN
            abs25 = sl
            CALL PUSHCONTROL1B(0)
          ELSE
            abs25 = -sl
            CALL PUSHCONTROL1B(1)
          END IF
          x42 = 2.*abs25
          IF (t1 .GE. 0.) THEN
            y42 = t1
            CALL PUSHCONTROL1B(0)
          ELSE
            y42 = -t1
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x42 .LT. y42) THEN
            y28 = y42
            CALL PUSHCONTROL1B(0)
          ELSE
            y28 = x42
            CALL PUSHCONTROL1B(1)
          END IF
          IF (x28 .GT. y28) THEN
            CALL PUSHCONTROL1B(0)
          ELSE
            CALL PUSHCONTROL1B(1)
          END IF
          CALL PUSHREAL8(con1(i))
C
          con1(i) = 0.25
          con2(i) = 1.
          con3(i) = 0.75*(f(i+1, n)-f(i-1, n))
          con3(i) = con3(i) - con1(i)*d1(i+1)
          CALL TRIDAG(con1, con2, con1, con3, d1, is2, ie2)
C
C..curvature:
C
          i = is
          d2(i) = 0.
          i = is1
          d2(i) = 0.
          i = is2
          CALL PUSHREAL8(con1(i))
          con1(i) = 0.1
          CALL PUSHREAL8(con2(i))
          con2(i) = 1.
          con3(i) = 1.2*(f(i+1, n)-2.*f(i, n)+f(i-1, n))
          con3(i) = con3(i) - con1(i)*d2(i-1)
          CALL PUSHINTEGER4(i)
          CALL PUSHREAL8ARRAY(con1, mdim)
          CALL PUSHREAL8ARRAY(con2, mdim)
          DO i=is+3,ie-3
            con1(i) = 2./11.
            con2(i) = 1.
            con3(i) = (3.*f(i+2, n)+48.*f(i+1, n)-102.*f(i, n)+48.*f(i-1
     +        , n)+3.*f(i-2, n))/44.
          ENDDO
          i = ie
          d2(i) = 0.
          i = ie1
          d2(i) = 0.
          i = ie2
          CALL PUSHREAL8(con1(i))
          con1(i) = 0.1
          CALL PUSHREAL8(con2(i))
          con2(i) = 1.
          con3(i) = 1.2*(f(i+1, n)-2.*f(i, n)+f(i-1, n))
          con3(i) = con3(i) - con1(i)*d2(i+1)
          CALL TRIDAG(con1, con2, con1, con3, d2, is2, ie2)
          CALL PUSHINTEGER4(i)
C
C..correct the sign of the slope and curvature:
C
          DO i=is1,ie
            s1(i) = f(i, n) - f(i-1, n)
          ENDDO
          DO i=is,ie2
            sf(i) = (-f(i+2, n)+4.*f(i+1, n)-3.*f(i, n))/2.
          ENDDO
          DO i=is1,ie1
            sc(i) = (f(i+1, n)-f(i-1, n))/2.
          ENDDO
          DO i=is2,ie
            sb(i) = (f(i-2, n)-4.*f(i-1, n)+3.*f(i, n))/2.
          ENDDO
          CALL PUSHREAL8ARRAY(d1, mdim)
C
          DO i=is2,ie2
            IF (sc(i) - sf(i) .GE. 0.) THEN
              x29 = sc(i) - sf(i)
            ELSE
              x29 = -(sc(i)-sf(i))
            END IF
            IF (sb(i) - sf(i) .GE. 0.) THEN
              y29 = sb(i) - sf(i)
            ELSE
              y29 = -(sb(i)-sf(i))
            END IF
            IF (x29 .GT. y29) THEN
              amin128 = y29
            ELSE
              amin128 = x29
            END IF
            sm = sf(i) + 0.5*(SIGN(1., sc(i)-sf(i))+SIGN(1., sb(i)-sf(i)
     +        ))*amin128
            IF (sm .EQ. sf(i)) cm = f(i+2, n) - 2.*f(i+1, n) + f(i, n)
            IF (sm .EQ. sc(i)) cm = f(i+1, n) - 2.*f(i, n) + f(i-1, n)
            IF (sm .EQ. sb(i)) cm = f(i, n) - 2.*f(i-1, n) + f(i-2, n)
            IF (sm - d1(i) .GE. 0.) THEN
              x30 = sm - d1(i)
            ELSE
              x30 = -(sm-d1(i))
            END IF
            IF (sc(i) - d1(i) .GE. 0.) THEN
              y30 = sc(i) - d1(i)
            ELSE
              y30 = -(sc(i)-d1(i))
            END IF
            IF (x30 .GT. y30) THEN
              amin129 = y30
            ELSE
              amin129 = x30
            END IF
            d1(i) = d1(i) + 0.5*(SIGN(1., sm-d1(i))+SIGN(1., sc(i)-d1(i)
     +        ))*amin129
            IF (d1(i) .EQ. sm) d2(i) = cm
            IF (d1(i) .EQ. sc(i)) d2(i) = f(i+1, n) - 2.*f(i, n) + f(i-1
     +          , n)
          ENDDO
          fb(ie2, n) = fb(ie2, n) + qlb(ie2, n)
          slopee2b = 0.5*qlb(ie2, n)
          qlb(ie2, n) = 0.0
          fb(is2, n) = fb(is2, n) + qrb(is2, n)
          slopes2b = -(0.5*qrb(is2, n))
          qrb(is2, n) = 0.0
          DO i=is2,ie2
            IF (d1(i) .GE. 0.) THEN
              abs0 = d1(i)
            ELSE
              abs0 = -d1(i)
            END IF
            IF (s1(i+1) .GE. 0.) THEN
              abs13 = s1(i+1)
            ELSE
              abs13 = -s1(i+1)
            END IF
            IF (d1(i) .GE. 0.) THEN
              abs26 = d1(i)
            ELSE
              abs26 = -d1(i)
            END IF
            IF (s1(i) .GE. 0.) THEN
              abs27 = s1(i)
            ELSE
              abs27 = -s1(i)
            END IF
C..impose monotonicity-preserving constraints:
C..method 1:
C
C         if(abs(d1(i)).gt.2.0*abs(s1(i+1)).or.abs(d1(i)).gt.
C    &       2.0*abs(s1(i))) then
C           if(abs(d1(i)).le.abs(d1(i+1))) then
C             sr=d1(i)
C             cr=s1(i+1)-d1(i)
C           else
C             sr=2.*s1(i+1)-d1(i+1)
C             cr=-2.*s1(i+1)+2.*d1(i+1)
C           endif
C           if(abs(d1(i)).le.abs(d1(i-1))) then
C             sl=d1(i)
C             cl=-s1(i)+d1(i)
C           else
C             sl=2.*s1(i)-d1(i-1)
C             cl=2.*s1(i)-2.*d1(i-1)
C           endif
C           si=ammd(sl,sr)
C           ci=ammd(cl,cr)
C         endif
C
C..method 2:
C
            IF (abs0 .GT. 2.0*abs13 .AND. abs26 .GT. 2.0*abs27) THEN
              IF (d1(i) .GE. 0.) THEN
                abs1 = d1(i)
              ELSE
                abs1 = -d1(i)
              END IF
              IF (d1(i+1) .GE. 0.) THEN
                abs14 = d1(i+1)
              ELSE
                abs14 = -d1(i+1)
              END IF
              IF (abs1 .LE. abs14) THEN
                sr = d1(i)
                cr = 2.*(s1(i+1)-d1(i))
                CALL PUSHCONTROL1B(1)
              ELSE
                sr = 2.*s1(i+1) - d1(i+1)
                cr = 2.*(-s1(i+1)+d1(i+1))
                CALL PUSHCONTROL1B(0)
              END IF
              IF (d1(i) .GE. 0.) THEN
                abs2 = d1(i)
              ELSE
                abs2 = -d1(i)
              END IF
              IF (d1(i-1) .GE. 0.) THEN
                abs15 = d1(i-1)
              ELSE
                abs15 = -d1(i-1)
              END IF
              IF (abs2 .LE. abs15) THEN
                sl = d1(i)
                cl = 2.*(-s1(i)+d1(i))
                CALL PUSHCONTROL1B(0)
              ELSE
                sl = 2.*s1(i) - d1(i-1)
                cl = 2.*(s1(i)-d1(i-1))
                CALL PUSHCONTROL1B(1)
              END IF
              IF (sl .GE. 0.) THEN
                x31 = sl
                CALL PUSHCONTROL1B(0)
              ELSE
                x31 = -sl
                CALL PUSHCONTROL1B(1)
              END IF
              IF (sr .GE. 0.) THEN
                y31 = sr
                CALL PUSHCONTROL1B(0)
              ELSE
                y31 = -sr
                CALL PUSHCONTROL1B(1)
              END IF
              IF (x31 .GT. y31) THEN
                CALL PUSHCONTROL1B(0)
              ELSE
                CALL PUSHCONTROL1B(1)
              END IF
              IF (cl .GE. 0.) THEN
                x32 = cl
                CALL PUSHCONTROL1B(0)
              ELSE
                x32 = -cl
                CALL PUSHCONTROL1B(1)
              END IF
              IF (cr .GE. 0.) THEN
                y32 = cr
                CALL PUSHCONTROL1B(0)
              ELSE
                y32 = -cr
                CALL PUSHCONTROL1B(1)
              END IF
              IF (x32 .GT. y32) THEN
                CALL PUSHCONTROL1B(0)
              ELSE
                CALL PUSHCONTROL1B(1)
              END IF
              CALL PUSHCONTROL2B(0)
            ELSE
              IF (d1(i) .GE. 0.) THEN
                abs3 = d1(i)
              ELSE
                abs3 = -d1(i)
              END IF
              IF (s1(i+1) .GE. 0.) THEN
                abs16 = s1(i+1)
              ELSE
                abs16 = -s1(i+1)
              END IF
              IF (abs3 .GT. 2.0*abs16) THEN
                IF (d1(i) .GE. 0.) THEN
                  abs4 = d1(i)
                ELSE
                  abs4 = -d1(i)
                END IF
                IF (d1(i+1) .GE. 0.) THEN
                  abs17 = d1(i+1)
                ELSE
                  abs17 = -d1(i+1)
                END IF
                IF (abs4 .LE. abs17) THEN
                  sr = d1(i)
                  cr = 2.*(s1(i+1)-d1(i))
                  CALL PUSHCONTROL1B(0)
                ELSE
                  sr = 2.*s1(i+1) - d1(i+1)
                  cr = 2.*(-s1(i+1)+d1(i+1))
                  CALL PUSHCONTROL1B(1)
                END IF
                IF (d1(i) .GE. 0.) THEN
                  x33 = d1(i)
                  CALL PUSHCONTROL1B(0)
                ELSE
                  x33 = -d1(i)
                  CALL PUSHCONTROL1B(1)
                END IF
                IF (sr .GE. 0.) THEN
                  y33 = sr
                  CALL PUSHCONTROL1B(0)
                ELSE
                  y33 = -sr
                  CALL PUSHCONTROL1B(1)
                END IF
                IF (x33 .GT. y33) THEN
                  CALL PUSHCONTROL1B(0)
                ELSE
                  CALL PUSHCONTROL1B(1)
                END IF
                IF (d2(i) .GE. 0.) THEN
                  x34 = d2(i)
                  CALL PUSHCONTROL1B(0)
                ELSE
                  x34 = -d2(i)
                  CALL PUSHCONTROL1B(1)
                END IF
                IF (cr .GE. 0.) THEN
                  y34 = cr
                  CALL PUSHCONTROL1B(0)
                ELSE
                  y34 = -cr
                  CALL PUSHCONTROL1B(1)
                END IF
                IF (x34 .GT. y34) THEN
                  CALL PUSHCONTROL1B(0)
                ELSE
                  CALL PUSHCONTROL1B(1)
                END IF
                CALL PUSHCONTROL1B(1)
              ELSE
                CALL PUSHCONTROL1B(0)
              END IF
              IF (d1(i) .GE. 0.) THEN
                abs5 = d1(i)
              ELSE
                abs5 = -d1(i)
              END IF
              IF (s1(i) .GE. 0.) THEN
                abs18 = s1(i)
              ELSE
                abs18 = -s1(i)
              END IF
              IF (abs5 .GT. 2.0*abs18) THEN
                IF (d1(i) .GE. 0.) THEN
                  abs6 = d1(i)
                ELSE
                  abs6 = -d1(i)
                END IF
                IF (d1(i-1) .GE. 0.) THEN
                  abs19 = d1(i-1)
                ELSE
                  abs19 = -d1(i-1)
                END IF
                IF (abs6 .LE. abs19) THEN
                  sl = d1(i)
                  cl = 2.*(-s1(i)+d1(i))
                  CALL PUSHCONTROL1B(0)
                ELSE
                  sl = 2.*s1(i) - d1(i-1)
                  cl = 2.*(s1(i)-d1(i-1))
                  CALL PUSHCONTROL1B(1)
                END IF
                IF (sl .GE. 0.) THEN
                  x35 = sl
                  CALL PUSHCONTROL1B(0)
                ELSE
                  x35 = -sl
                  CALL PUSHCONTROL1B(1)
                END IF
                IF (d1(i) .GE. 0.) THEN
                  y35 = d1(i)
                  CALL PUSHCONTROL1B(0)
                ELSE
                  y35 = -d1(i)
                  CALL PUSHCONTROL1B(1)
                END IF
                IF (x35 .GT. y35) THEN
                  CALL PUSHCONTROL1B(0)
                ELSE
                  CALL PUSHCONTROL1B(1)
                END IF
                IF (cl .GE. 0.) THEN
                  x36 = cl
                  CALL PUSHCONTROL1B(0)
                ELSE
                  x36 = -cl
                  CALL PUSHCONTROL1B(1)
                END IF
                IF (d2(i) .GE. 0.) THEN
                  y36 = d2(i)
                  CALL PUSHCONTROL1B(0)
                ELSE
                  y36 = -d2(i)
                  CALL PUSHCONTROL1B(1)
                END IF
                IF (x36 .GT. y36) THEN
                  CALL PUSHCONTROL1B(0)
                ELSE
                  CALL PUSHCONTROL1B(1)
                END IF
                CALL PUSHCONTROL2B(1)
              ELSE
                CALL PUSHCONTROL2B(2)
              END IF
            END IF
            fb(i, n) = fb(i, n) + qlb(i, n) + qrb(i, n)
            sib = 0.5*qlb(i, n) - 0.5*qrb(i, n)
            cib = qlb(i, n)/12. + qrb(i, n)/12.
            qrb(i, n) = 0.0
            qlb(i, n) = 0.0
            CALL POPCONTROL2B(branch)
            IF (branch .EQ. 0) THEN
              amin131b = (SIGN(1., cl)+SIGN(1., cr))*0.5*cib
              CALL POPCONTROL1B(branch)
              IF (branch .EQ. 0) THEN
                y32b = amin131b
                x32b = 0.0
              ELSE
                x32b = amin131b
                y32b = 0.0
              END IF
              CALL POPCONTROL1B(branch)
              IF (branch .EQ. 0) THEN
                crb = y32b
              ELSE
                crb = -y32b
              END IF
              CALL POPCONTROL1B(branch)
              IF (branch .EQ. 0) THEN
                clb = x32b
              ELSE
                clb = -x32b
              END IF
              amin130b = (SIGN(1., sl)+SIGN(1., sr))*0.5*sib
              CALL POPCONTROL1B(branch)
              IF (branch .EQ. 0) THEN
                y31b = amin130b
                x31b = 0.0
              ELSE
                x31b = amin130b
                y31b = 0.0
              END IF
              CALL POPCONTROL1B(branch)
              IF (branch .EQ. 0) THEN
                srb = y31b
              ELSE
                srb = -y31b
              END IF
              CALL POPCONTROL1B(branch)
              IF (branch .EQ. 0) THEN
                slb = x31b
              ELSE
                slb = -x31b
              END IF
              CALL POPCONTROL1B(branch)
              IF (branch .EQ. 0) THEN
                d1b(i) = d1b(i) + slb + 2.*clb
                s1b(i) = s1b(i) - 2.*clb
              ELSE
                s1b(i) = s1b(i) + 2.*slb + 2.*clb
                d1b(i-1) = d1b(i-1) - slb - 2.*clb
              END IF
              CALL POPCONTROL1B(branch)
              IF (branch .EQ. 0) THEN
                d1b(i+1) = d1b(i+1) + 2.*crb - srb
                s1b(i+1) = s1b(i+1) + 2.*srb - 2.*crb
              ELSE
                s1b(i+1) = s1b(i+1) + 2.*crb
                d1b(i) = d1b(i) + srb - 2.*crb
              END IF
              sib = 0.0
              cib = 0.0
            ELSE
              IF (branch .EQ. 1) THEN
                amin135b = 0.5*(SIGN(1., cl)+SIGN(1., d2(i)))*cib
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  y36b = amin135b
                  x36b = 0.0
                ELSE
                  x36b = amin135b
                  y36b = 0.0
                END IF
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  d2b(i) = d2b(i) + y36b
                ELSE
                  d2b(i) = d2b(i) - y36b
                END IF
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  clb = x36b
                ELSE
                  clb = -x36b
                END IF
                amin134b = 0.5*(SIGN(1., sl)+SIGN(1., d1(i)))*sib
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  y35b = amin134b
                  x35b = 0.0
                ELSE
                  x35b = amin134b
                  y35b = 0.0
                END IF
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  d1b(i) = d1b(i) + y35b
                ELSE
                  d1b(i) = d1b(i) - y35b
                END IF
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  slb = x35b
                ELSE
                  slb = -x35b
                END IF
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  d1b(i) = d1b(i) + slb + 2.*clb
                  s1b(i) = s1b(i) - 2.*clb
                ELSE
                  s1b(i) = s1b(i) + 2.*slb + 2.*clb
                  d1b(i-1) = d1b(i-1) - slb - 2.*clb
                END IF
                sib = 0.0
                cib = 0.0
              END IF
              CALL POPCONTROL1B(branch)
              IF (branch .NE. 0) THEN
                amin133b = 0.5*(SIGN(1., cr)+SIGN(1., d2(i)))*cib
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  y34b = amin133b
                  x34b = 0.0
                ELSE
                  x34b = amin133b
                  y34b = 0.0
                END IF
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  crb = y34b
                ELSE
                  crb = -y34b
                END IF
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  d2b(i) = d2b(i) + x34b
                ELSE
                  d2b(i) = d2b(i) - x34b
                END IF
                amin132b = 0.5*(SIGN(1., sr)+SIGN(1., d1(i)))*sib
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  y33b = amin132b
                  x33b = 0.0
                ELSE
                  x33b = amin132b
                  y33b = 0.0
                END IF
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  srb = y33b
                ELSE
                  srb = -y33b
                END IF
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  d1b(i) = d1b(i) + x33b
                ELSE
                  d1b(i) = d1b(i) - x33b
                END IF
                CALL POPCONTROL1B(branch)
                IF (branch .EQ. 0) THEN
                  s1b(i+1) = s1b(i+1) + 2.*crb
                  d1b(i) = d1b(i) + srb - 2.*crb
                ELSE
                  d1b(i+1) = d1b(i+1) + 2.*crb - srb
                  s1b(i+1) = s1b(i+1) + 2.*srb - 2.*crb
                END IF
                sib = 0.0
                cib = 0.0
              END IF
            END IF
            d2b(i) = d2b(i) + cib
            d1b(i) = d1b(i) + sib
          ENDDO
          CALL POPREAL8ARRAY(d1, mdim)
          DO i=is2,ie2
            IF (sc(i) - sf(i) .GE. 0.) THEN
              x29 = sc(i) - sf(i)
              CALL PUSHCONTROL1B(0)
            ELSE
              x29 = -(sc(i)-sf(i))
              CALL PUSHCONTROL1B(1)
            END IF
            IF (sb(i) - sf(i) .GE. 0.) THEN
              y29 = sb(i) - sf(i)
              CALL PUSHCONTROL1B(0)
            ELSE
              y29 = -(sb(i)-sf(i))
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x29 .GT. y29) THEN
              amin128 = y29
              CALL PUSHCONTROL1B(0)
            ELSE
              amin128 = x29
              CALL PUSHCONTROL1B(1)
            END IF
            sm = sf(i) + 0.5*(SIGN(1., sc(i)-sf(i))+SIGN(1., sb(i)-sf(i)
     +        ))*amin128
            IF (sm .EQ. sf(i)) THEN
              CALL PUSHCONTROL1B(0)
            ELSE
              CALL PUSHCONTROL1B(1)
            END IF
            IF (sm .EQ. sc(i)) THEN
              CALL PUSHCONTROL1B(0)
            ELSE
              CALL PUSHCONTROL1B(1)
            END IF
            IF (sm .EQ. sb(i)) THEN
              CALL PUSHCONTROL1B(0)
            ELSE
              CALL PUSHCONTROL1B(1)
            END IF
            IF (sm - d1(i) .GE. 0.) THEN
              x30 = sm - d1(i)
              CALL PUSHCONTROL1B(0)
            ELSE
              x30 = -(sm-d1(i))
              CALL PUSHCONTROL1B(1)
            END IF
            IF (sc(i) - d1(i) .GE. 0.) THEN
              y30 = sc(i) - d1(i)
              CALL PUSHCONTROL1B(0)
            ELSE
              y30 = -(sc(i)-d1(i))
              CALL PUSHCONTROL1B(1)
            END IF
            IF (x30 .GT. y30) THEN
              amin129 = y30
              CALL PUSHCONTROL1B(0)
            ELSE
              amin129 = x30
              CALL PUSHCONTROL1B(1)
            END IF
            CALL PUSHREAL8(d1(i))
            d1(i) = d1(i) + 0.5*(SIGN(1., sm-d1(i))+SIGN(1., sc(i)-d1(i)
     +        ))*amin129
            IF (d1(i) .EQ. sm) THEN
              CALL PUSHCONTROL1B(0)
            ELSE
              CALL PUSHCONTROL1B(1)
            END IF
            IF (d1(i) .EQ. sc(i)) THEN
              fb(i+1, n) = fb(i+1, n) + d2b(i)
              fb(i, n) = fb(i, n) - 2.*d2b(i)
              fb(i-1, n) = fb(i-1, n) + d2b(i)
              d2b(i) = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              cmb = cmb + d2b(i)
              d2b(i) = 0.0
            END IF
            CALL POPREAL8(d1(i))
            amin129b = 0.5*(SIGN(1., sm-d1(i))+SIGN(1., sc(i)-d1(i)))*
     +        d1b(i)
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y30b = amin129b
              x30b = 0.0
            ELSE
              x30b = amin129b
              y30b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              scb(i) = scb(i) + y30b
              d1b(i) = d1b(i) - y30b
            ELSE
              d1b(i) = d1b(i) + y30b
              scb(i) = scb(i) - y30b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              smb = x30b
              d1b(i) = d1b(i) - x30b
            ELSE
              d1b(i) = d1b(i) + x30b
              smb = -x30b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              fb(i, n) = fb(i, n) + cmb
              fb(i-1, n) = fb(i-1, n) - 2.*cmb
              fb(i-2, n) = fb(i-2, n) + cmb
              cmb = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              fb(i+1, n) = fb(i+1, n) + cmb
              fb(i, n) = fb(i, n) - 2.*cmb
              fb(i-1, n) = fb(i-1, n) + cmb
              cmb = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              fb(i+2, n) = fb(i+2, n) + cmb
              fb(i+1, n) = fb(i+1, n) - 2.*cmb
              fb(i, n) = fb(i, n) + cmb
              cmb = 0.0
            END IF
            sfb(i) = sfb(i) + smb
            amin128b = 0.5*(SIGN(1., sc(i)-sf(i))+SIGN(1., sb(i)-sf(i)))
     +        *smb
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y29b = amin128b
              x29b = 0.0
            ELSE
              x29b = amin128b
              y29b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              sbb(i) = sbb(i) + y29b
              sfb(i) = sfb(i) - y29b
            ELSE
              sfb(i) = sfb(i) + y29b
              sbb(i) = sbb(i) - y29b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              scb(i) = scb(i) + x29b
              sfb(i) = sfb(i) - x29b
            ELSE
              sfb(i) = sfb(i) + x29b
              scb(i) = scb(i) - x29b
            END IF
          ENDDO
          DO i=is2,ie
            tempb6 = sbb(i)/2.
            fb(i-2, n) = fb(i-2, n) + tempb6
            fb(i-1, n) = fb(i-1, n) - 4.*tempb6
            fb(i, n) = fb(i, n) + 3.*tempb6
            sbb(i) = 0.0
          ENDDO
          DO i=is1,ie1
            fb(i+1, n) = fb(i+1, n) + scb(i)/2.
            fb(i-1, n) = fb(i-1, n) - scb(i)/2.
            scb(i) = 0.0
          ENDDO
          DO i=is,ie2
            tempb5 = sfb(i)/2.
            fb(i+1, n) = fb(i+1, n) + 4.*tempb5
            fb(i+2, n) = fb(i+2, n) - tempb5
            fb(i, n) = fb(i, n) - 3.*tempb5
            sfb(i) = 0.0
          ENDDO
          DO i=is1,ie
            fb(i, n) = fb(i, n) + s1b(i)
            fb(i-1, n) = fb(i-1, n) - s1b(i)
            s1b(i) = 0.0
          ENDDO
          CALL POPINTEGER4(i)
          CALL TRIDAG_BQ(con1, con2, con1, con3, con3b, d2, d2b, is2, 
     +                   ie2)
          i = ie2
          d2b(i+1) = d2b(i+1) - con1(i)*con3b(i)
          tempb2 = 1.2*con3b(i)
          fb(i+1, n) = fb(i+1, n) + tempb2
          fb(i, n) = fb(i, n) - 2.*tempb2
          fb(i-1, n) = fb(i-1, n) + tempb2
          con3b(i) = 0.0
          CALL POPREAL8(con2(i))
          CALL POPREAL8(con1(i))
          i = ie1
          i = ie
          d2b(i) = 0.0
          CALL POPREAL8ARRAY(con2, mdim)
          CALL POPREAL8ARRAY(con1, mdim)
          DO i=is+3,ie-3
            tempb4 = con3b(i)/44.
            fb(i+2, n) = fb(i+2, n) + 3.*tempb4
            fb(i+1, n) = fb(i+1, n) + 48.*tempb4
            fb(i, n) = fb(i, n) - 102.*tempb4
            fb(i-1, n) = fb(i-1, n) + 48.*tempb4
            fb(i-2, n) = fb(i-2, n) + 3.*tempb4
            con3b(i) = 0.0
          ENDDO
          CALL POPINTEGER4(i)
          i = is2
          d2b(i-1) = d2b(i-1) - con1(i)*con3b(i)
          tempb1 = 1.2*con3b(i)
          fb(i+1, n) = fb(i+1, n) + tempb1
          fb(i, n) = fb(i, n) - 2.*tempb1
          fb(i-1, n) = fb(i-1, n) + tempb1
          con3b(i) = 0.0
          CALL POPREAL8(con2(i))
          CALL POPREAL8(con1(i))
          i = is1
          i = is
          d2b(i) = 0.0
          CALL TRIDAG_BQ(con1, con2, con1, con3, con3b, d1, d1b, is2, 
     +                   ie2)
          i = ie2
          d1b(i+1) = d1b(i+1) - con1(i)*con3b(i)
          fb(i+1, n) = fb(i+1, n) + 0.75*con3b(i)
          fb(i-1, n) = fb(i-1, n) - 0.75*con3b(i)
          con3b(i) = 0.0
          CALL POPREAL8(con1(i))
          amin127b = SIGN(1., t1)*slopee2b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y28b = amin127b
            x28b = 0.0
          ELSE
            x28b = amin127b
            y28b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y42b = y28b
            x42b = 0.0
          ELSE
            x42b = y28b
            y42b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            t1b = y42b
          ELSE
            t1b = -y42b
          END IF
          abs25b = 2.*x42b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            slb = abs25b
          ELSE
            slb = -abs25b
          END IF
          abs12b = 0.5*x28b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = abs12b
            ati1b = abs12b
          ELSE
            atb = -abs12b
            ati1b = -abs12b
          END IF
          CALL POPREAL8(t1)
          amin126b = 0.5*(SIGN(1., at)+SIGN(1., ati1))*t1b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y27b = amin126b
            x27b = 0.0
          ELSE
            x27b = amin126b
            y27b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            ati1b = ati1b + y27b
          ELSE
            ati1b = ati1b - y27b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = atb + x27b
          ELSE
            atb = atb - x27b
          END IF
          amin125b = (SIGN(1., f1i2)+SIGN(1., f1i3))*0.5*slb
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y26b = amin125b
            x26b = 0.0
          ELSE
            x26b = amin125b
            y26b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1i3b = y26b
          ELSE
            f1i3b = -y26b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1i2b = x26b
          ELSE
            f1i2b = -x26b
          END IF
          f1i3b = f1i3b + ati1b
          f2mi3b = 0.5*ati1b
          f1i2b = f1i2b + atb
          f2mi2b = -(0.5*atb)
          i = ie1
          fb(i, n) = fb(i, n) + qlb(i, n) + qrb(i, n)
          d1b(i) = d1b(i) + 0.5*qlb(i, n) - 0.5*qrb(i, n)
          qrb(i, n) = 0.0
          qlb(i, n) = 0.0
          amin124b = SIGN(1., t1)*d1b(i)
          d1b(i) = 0.0
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y25b = amin124b
            x25b = 0.0
          ELSE
            x25b = amin124b
            y25b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y41b = y25b
            x41b = 0.0
          ELSE
            x41b = y25b
            y41b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            t1b = y41b
          ELSE
            t1b = -y41b
          END IF
          abs24b = 2.*x41b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            slb = abs24b
          ELSE
            slb = -abs24b
          END IF
          abs11b = 0.5*x25b
          ati1 = f1i2 + 0.5*f2mi2
          at = f1i1 - 0.5*f2mi1
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = abs11b
            ati1b = abs11b
          ELSE
            atb = -abs11b
            ati1b = -abs11b
          END IF
          CALL POPREAL8(t1)
          amin123b = 0.5*(SIGN(1., at)+SIGN(1., ati1))*t1b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y24b = amin123b
            x24b = 0.0
          ELSE
            x24b = amin123b
            y24b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            ati1b = ati1b + y24b
          ELSE
            ati1b = ati1b - y24b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = atb + x24b
          ELSE
            atb = atb - x24b
          END IF
          amin122b = 0.5*(SIGN(1., f1i1)+SIGN(1., f1i2))*slb
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y23b = amin122b
            x23b = 0.0
          ELSE
            x23b = amin122b
            y23b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1i2b = f1i2b + y23b
          ELSE
            f1i2b = f1i2b - y23b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1i1b = x23b
          ELSE
            f1i1b = -x23b
          END IF
          CALL POPREAL8(ati1)
          f1i2b = f1i2b + ati1b
          f2mi2b = f2mi2b + 0.5*ati1b
          CALL POPREAL8(at)
          f1i1b = f1i1b + atb
          f2mi1b = -(0.5*atb)
          i = ie
          fb(i, n) = fb(i, n) + qlb(i, n) + qrb(i, n)
          d1b(i) = d1b(i) + 0.5*qlb(i, n) - 0.5*qrb(i, n)
          qrb(i, n) = 0.0
          qlb(i, n) = 0.0
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2i1b = 0.0
          ELSE
            amin121b = SIGN(1., t1)*d1b(i)
            d1b(i) = 0.0
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y22b = amin121b
              x22b = 0.0
            ELSE
              x22b = amin121b
              y22b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y40b = y22b
              x40b = 0.0
            ELSE
              x40b = y22b
              y40b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              t1b = y40b
            ELSE
              t1b = -y40b
            END IF
            abs23b = 2.*x40b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              slb = abs23b
            ELSE
              slb = -abs23b
            END IF
            abs10b = 0.5*x22b
            ati1 = f1i1 + 0.5*f2mi1
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              atb = abs10b
              ati1b = abs10b
            ELSE
              atb = -abs10b
              ati1b = -abs10b
            END IF
            CALL POPREAL8(t1)
            amin120b = 0.5*(SIGN(1., at)+SIGN(1., ati1))*t1b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y21b = amin120b
              x21b = 0.0
            ELSE
              x21b = amin120b
              y21b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              ati1b = ati1b + y21b
            ELSE
              ati1b = ati1b - y21b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              atb = atb + x21b
            ELSE
              atb = atb - x21b
            END IF
            CALL POPREAL8(ati1)
            f1i1b = f1i1b + ati1b
            f2mi1b = f2mi1b + 0.5*ati1b
            CALL POPREAL8(at)
            tempb0 = -(0.5**2*atb)
            f1bmaxb = f1bmaxb + atb
            amin119b = (SIGN(1., f2i1)+SIGN(1., f2bmax))*tempb0
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y20b = amin119b
              x20b = 0.0
            ELSE
              x20b = amin119b
              y20b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f2bmaxb = f2bmaxb + y20b
            ELSE
              f2bmaxb = f2bmaxb - y20b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f2i1b = x20b
            ELSE
              f2i1b = -x20b
            END IF
            amin118b = 0.5*(SIGN(1., f1bmax)+SIGN(1., f1i1))*slb
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y19b = amin118b
              x19b = 0.0
            ELSE
              x19b = amin118b
              y19b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f1i1b = f1i1b + y19b
            ELSE
              f1i1b = f1i1b - y19b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f1bmaxb = f1bmaxb + x19b
            ELSE
              f1bmaxb = f1bmaxb - x19b
            END IF
          END IF
          amin117b = 0.5*(SIGN(1., at1)+SIGN(1., 2.*f1i1))*d1b(i)
          d1b(i) = 0.0
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y18b = amin117b
            x18b = 0.0
          ELSE
            x18b = amin117b
            y18b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1i1b = f1i1b + 2.*y18b
          ELSE
            f1i1b = f1i1b - 2.*y18b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            at1b = x18b
          ELSE
            at1b = -x18b
          END IF
          f1i1b = f1i1b + at1b
          f2mi1b = f2mi1b + 0.5*at1b
          amin116b = (SIGN(1., f2i3)+SIGN(1., f2i2))*0.5*f2mi3b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y17b = amin116b
            x17b = 0.0
          ELSE
            x17b = amin116b
            y17b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2i2b = y17b
          ELSE
            f2i2b = -y17b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2i3b = x17b
          ELSE
            f2i3b = -x17b
          END IF
          amin115b = 0.5*(SIGN(1., f2i2)+SIGN(1., f2i1))*f2mi2b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y16b = amin115b
            x16b = 0.0
          ELSE
            x16b = amin115b
            y16b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2i1b = f2i1b + y16b
          ELSE
            f2i1b = f2i1b - y16b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2i2b = f2i2b + x16b
          ELSE
            f2i2b = f2i2b - x16b
          END IF
          amin114b = 0.5*(SIGN(1., f2i)+SIGN(1., f2i1))*f2mi1b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y15b = amin114b
            x15b = 0.0
          ELSE
            x15b = amin114b
            y15b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2ib = y15b
          ELSE
            f2ib = -y15b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2i1b = f2i1b + x15b
          ELSE
            f2i1b = f2i1b - x15b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2ib = f2ib + 2.*f2bmaxb
            f2i1b = f2i1b - f2bmaxb
            f1bmaxb = f1bmaxb + f2ib
            f1i1b = f1i1b - f2ib
            fb(i, n) = fb(i, n) - f1bmaxb
            f1bmaxb = 0.0
            f2bmaxb = 0.0
            f2ib = 0.0
          END IF
          CALL POPREAL8(f2i)
          f2i1b = f2i1b + 2.*f2ib
          f2i2b = f2i2b - f2ib
          f1i3b = f1i3b + f2i3b - f2i2b
          f1i4b = -f2i3b
          f1i2b = f1i2b + f2i2b - f2i1b
          f1i1b = f1i1b + f2i1b
          fb(i-3, n) = fb(i-3, n) + f1i4b
          fb(i-4, n) = fb(i-4, n) - f1i4b
          fb(i-2, n) = fb(i-2, n) + f1i3b
          fb(i-3, n) = fb(i-3, n) - f1i3b
          CALL POPREAL8(f1i2)
          fb(i-1, n) = fb(i-1, n) + f1i2b
          fb(i-2, n) = fb(i-2, n) - f1i2b
          CALL POPREAL8(f1i1)
          fb(i, n) = fb(i, n) + f1i1b
          fb(i-1, n) = fb(i-1, n) - f1i1b
          CALL POPREAL8ARRAY(con1, mdim)
          DO i=is+3,ie-3
            tempb3 = con3b(i)/36.
            fb(i+2, n) = fb(i+2, n) + tempb3
            fb(i+1, n) = fb(i+1, n) + 28.*tempb3
            fb(i-1, n) = fb(i-1, n) - 28.*tempb3
            fb(i-2, n) = fb(i-2, n) - tempb3
            con3b(i) = 0.0
          ENDDO
          CALL POPINTEGER4(i)
          i = is2
          d1b(i-1) = d1b(i-1) - con1(i)*con3b(i)
          fb(i+1, n) = fb(i+1, n) + 0.75*con3b(i)
          fb(i-1, n) = fb(i-1, n) - 0.75*con3b(i)
          con3b(i) = 0.0
          amin113b = SIGN(1., t1)*slopes2b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y14b = amin113b
            x14b = 0.0
          ELSE
            x14b = amin113b
            y14b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y39b = y14b
            x39b = 0.0
          ELSE
            x39b = y14b
            y39b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            t1b = y39b
          ELSE
            t1b = -y39b
          END IF
          abs22b = 2.*x39b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            slb = abs22b
          ELSE
            slb = -abs22b
          END IF
          abs9b = 0.5*x14b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = abs9b
            ati1b = abs9b
          ELSE
            atb = -abs9b
            ati1b = -abs9b
          END IF
          CALL POPREAL8(t1)
          amin112b = 0.5*(SIGN(1., at)+SIGN(1., ati1))*t1b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y13b = amin112b
            x13b = 0.0
          ELSE
            x13b = amin112b
            y13b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            ati1b = ati1b + y13b
          ELSE
            ati1b = ati1b - y13b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = atb + x13b
          ELSE
            atb = atb - x13b
          END IF
          amin111b = (SIGN(1., f1i2)+SIGN(1., f1i1))*0.5*slb
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y12b = amin111b
            x12b = 0.0
          ELSE
            x12b = amin111b
            y12b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1i1b = y12b
          ELSE
            f1i1b = -y12b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1i2b = x12b
          ELSE
            f1i2b = -x12b
          END IF
          f1i1b = f1i1b + ati1b
          f2mi1b = 0.5*ati1b
          CALL POPREAL8(at)
          f1i2b = f1i2b + atb
          f2mi2b = -(0.5*atb)
          i = is1
          fb(i, n) = fb(i, n) + qlb(i, n) + qrb(i, n)
          d1b(i) = d1b(i) + 0.5*qlb(i, n) - 0.5*qrb(i, n)
          qrb(i, n) = 0.0
          qlb(i, n) = 0.0
          amin110b = SIGN(1., t1)*d1b(i)
          d1b(i) = 0.0
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y11b = amin110b
            x11b = 0.0
          ELSE
            x11b = amin110b
            y11b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y38b = y11b
            x38b = 0.0
          ELSE
            x38b = y11b
            y38b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            t1b = y38b
          ELSE
            t1b = -y38b
          END IF
          abs21b = 2.*x38b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            slb = abs21b
          ELSE
            slb = -abs21b
          END IF
          abs8b = 0.5*x11b
          ati1 = f1i + 0.5*f2mi
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = abs8b
            ati1b = abs8b
          ELSE
            atb = -abs8b
            ati1b = -abs8b
          END IF
          CALL POPREAL8(t1)
          amin19b = 0.5*(SIGN(1., at)+SIGN(1., ati1))*t1b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y10b = amin19b
            x10b = 0.0
          ELSE
            x10b = amin19b
            y10b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            ati1b = ati1b + y10b
          ELSE
            ati1b = ati1b - y10b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = atb + x10b
          ELSE
            atb = atb - x10b
          END IF
          amin18b = 0.5*(SIGN(1., f1i)+SIGN(1., f1i1))*slb
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y9b = amin18b
            x9b = 0.0
          ELSE
            x9b = amin18b
            y9b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1ib = y9b
          ELSE
            f1ib = -y9b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1i1b = f1i1b + x9b
          ELSE
            f1i1b = f1i1b - x9b
          END IF
          CALL POPREAL8(ati1)
          f1ib = f1ib + ati1b
          f2mib = 0.5*ati1b
          f1i1b = f1i1b + atb
          f2mi1b = f2mi1b - 0.5*atb
          i = is
          fb(i, n) = fb(i, n) + qlb(i, n) + qrb(i, n)
          d1b(i) = d1b(i) + 0.5*qlb(i, n) - 0.5*qrb(i, n)
          qrb(i, n) = 0.0
          qlb(i, n) = 0.0
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2ib = 0.0
          ELSE
            amin17b = SIGN(1., t1)*d1b(i)
            d1b(i) = 0.0
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y8b = amin17b
              x8b = 0.0
            ELSE
              x8b = amin17b
              y8b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y37b = y8b
              x37b = 0.0
            ELSE
              x37b = y8b
              y37b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              t1b = y37b
            ELSE
              t1b = -y37b
            END IF
            abs20b = 2.*x37b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              slb = abs20b
            ELSE
              slb = -abs20b
            END IF
            abs7b = 0.5*x8b
            at = f1i - 0.5*f2mi
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              atb = abs7b
              ati1b = abs7b
            ELSE
              atb = -abs7b
              ati1b = -abs7b
            END IF
            amin16b = 0.5*(SIGN(1., at)+SIGN(1., ati1))*t1b
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y7b = amin16b
              x7b = 0.0
            ELSE
              x7b = amin16b
              y7b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              ati1b = ati1b + y7b
            ELSE
              ati1b = ati1b - y7b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              atb = atb + x7b
            ELSE
              atb = atb - x7b
            END IF
            tempb = 0.5**2*ati1b
            f1bminb = f1bminb + ati1b
            amin15b = (SIGN(1., f2i)+SIGN(1., f2bmin))*tempb
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y6b = amin15b
              x6b = 0.0
            ELSE
              x6b = amin15b
              y6b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f2bminb = f2bminb + y6b
            ELSE
              f2bminb = f2bminb - y6b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f2ib = x6b
            ELSE
              f2ib = -x6b
            END IF
            f1ib = f1ib + atb
            f2mib = f2mib - 0.5*atb
            amin14b = 0.5*(SIGN(1., f1i)+SIGN(1., f1bmin))*slb
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              y5b = amin14b
              x5b = 0.0
            ELSE
              x5b = amin14b
              y5b = 0.0
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f1bminb = f1bminb + y5b
            ELSE
              f1bminb = f1bminb - y5b
            END IF
            CALL POPCONTROL1B(branch)
            IF (branch .EQ. 0) THEN
              f1ib = f1ib + x5b
            ELSE
              f1ib = f1ib - x5b
            END IF
          END IF
          at = f1i - 0.5*f2mi
          amin13b = 0.5*(SIGN(1., at)+SIGN(1., 2.*f1i))*d1b(i)
          d1b(i) = 0.0
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y4b = amin13b
            x4b = 0.0
          ELSE
            x4b = amin13b
            y4b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f1ib = f1ib + 2.*y4b
          ELSE
            f1ib = f1ib - 2.*y4b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            atb = x4b
          ELSE
            atb = -x4b
          END IF
          f1ib = f1ib + atb
          f2mib = f2mib - 0.5*atb
          f2i2 = f1i2 - f1i1
          f1i3 = f(i+4, n) - f(i+3, n)
          f2i3 = f1i3 - f1i2
          amin12b = (SIGN(1., f2i2)+SIGN(1., f2i3))*0.5*f2mi2b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y3b = amin12b
            x3b = 0.0
          ELSE
            x3b = amin12b
            y3b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2i3b = y3b
          ELSE
            f2i3b = -y3b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2i2b = x3b
          ELSE
            f2i2b = -x3b
          END IF
          f2i1 = f1i1 - f1i
          amin11b = 0.5*(SIGN(1., f2i1)+SIGN(1., f2i2))*f2mi1b
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y2b = amin11b
            x2b = 0.0
          ELSE
            x2b = amin11b
            y2b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2i2b = f2i2b + y2b
          ELSE
            f2i2b = f2i2b - y2b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2i1b = x2b
          ELSE
            f2i1b = -x2b
          END IF
          amin10b = 0.5*(SIGN(1., f2i)+SIGN(1., f2i1))*f2mib
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            y1b = amin10b
            x1b = 0.0
          ELSE
            x1b = amin10b
            y1b = 0.0
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2i1b = f2i1b + y1b
          ELSE
            f2i1b = f2i1b - y1b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2ib = f2ib + x1b
          ELSE
            f2ib = f2ib - x1b
          END IF
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2ib = f2ib + 2.*f2bminb
            f2i1b = f2i1b - f2bminb
            f1ib = f1ib + f2ib
            f1bminb = f1bminb - f2ib
            fb(i, n) = fb(i, n) + f1bminb
            f1bminb = 0.0
            f2ib = 0.0
            f2bminb = 0.0
          END IF
          f2i1b = f2i1b + 2.*f2ib
          f2i2b = f2i2b - f2ib
          f1i3b = f2i3b
          f1i2b = f1i2b + f2i2b - f2i3b
          f1i1b = f1i1b + f2i1b - f2i2b
          f1ib = f1ib - f2i1b
          fb(i+4, n) = fb(i+4, n) + f1i3b
          fb(i+3, n) = fb(i+3, n) + f1i2b - f1i3b
          fb(i+2, n) = fb(i+2, n) + f1i1b - f1i2b
          fb(i+1, n) = fb(i+1, n) + f1ib - f1i1b
          fb(i, n) = fb(i, n) - f1ib
        ENDDO
      END IF
      END
