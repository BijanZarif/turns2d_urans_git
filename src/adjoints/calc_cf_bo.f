C        Generated by TAPENADE     (INRIA, Tropics team)
C  Tapenade 3.6 (r4343) - 10 Feb 2012 10:52
C
C  Differentiation of calc_cf in reverse (adjoint) mode:
C   gradient     of useful results: fmtip fsmach q cf
C   with respect to varying inputs: fmtip fsmach q
C
C
      SUBROUTINE CALC_CF_BO(jd, kd, x, y, xv, yv, q, qb, xx, xy, yx, yy
     +                      , cf, cfb)
      USE PARAMS_GLOBAL
      USE PARAMS_SENSITIVITY
      IMPLICIT NONE
C
      INCLUDE 'DIFFSIZES.inc'
C  Hint: ISIZE1OFzz1bINcalc_cf should be the value of jd
      INTEGER jd, kd
      REAL q(jd, kd, nq), x(jd, kd), y(jd, kd), xv(jmax, kmax), yv(jmax
     +     , kmax)
      REAL qb(jd, kd, nq)
      REAL xx(jd, kd), xy(jd, kd)
      REAL yx(jd, kd), yy(jd, kd)
      REAL cf(jd)
      REAL cfb(jd)
C
      REAL zz1(jd)
      REAL fmm, rr, rho, u, v, um, vm, e, vsq, pp, pp1, cp, cn, cc, cmle
     +     , cpinv, uxi, vxi
      REAL fmmb, uxib, vxib
      REAL ueta, veta, xix, xiy, etax, etay
      REAL uetab, vetab
      REAL tauw, sfdiv, cnv, ccv, cmlev, cpv, uinf2, amu
      REAL uinf2b
      REAL chord, alngth
      INTEGER j, k, k2, k3, j1, j2, jm1, jp1, js, je
      INTEGER branch
      REAL temp1
      REAL temp0
      REAL tempb9
      REAL tempb8
      REAL tempb7
      REAL tempb6
      REAL tempb5
      REAL tempb4
      REAL tempb3
      REAL tempb2
      REAL tempb1
      REAL temp0b
      REAL tempb0
      REAL zz1b(jd)
      REAL temp0b9
      REAL temp0b8
      REAL temp0b7
      REAL temp0b6
      REAL temp0b5
      REAL temp0b4
      REAL tempb
      REAL temp0b3
      REAL temp0b2
      REAL temp0b1
      REAL temp0b0
      REAL temp1b9
      REAL temp1b8
      REAL temp1b7
      REAL temp1b
      REAL temp1b6
      REAL temp
      REAL temp1b5
      REAL temp1b4
      REAL temp1b3
      REAL temp1b2
      REAL temp1b1
      REAL temp1b0
C
      k = kbeg
      k2 = k + 1
      k3 = k2 + 1
      j1 = jtail1
      j2 = jtail2
C
C     set normalization factor
      IF (fsmach .NE. 0) THEN
        fmm = fsmach
        CALL PUSHCONTROL2B(0)
      ELSE IF (fmtip .NE. 0) THEN
        fmm = fmtip
        CALL PUSHCONTROL2B(1)
      ELSE
        CALL PUSHCONTROL2B(2)
        fmm = 1.0
      END IF
C
      alngth = 1.
      amu = rinf*alngth/rey
      uinf2 = fmm**2
C     
      j = j1
      ueta = -(1.5*q(j, k, 2)/q(j, k, 1)) + 2.*q(j, k2, 2)/q(j, k2, 1) -
     +  .5*q(j, k3, 2)/q(j, k3, 1)
      veta = -(1.5*q(j, k, 3)/q(j, k, 1)) + 2.*q(j, k2, 3)/q(j, k2, 1) -
     +  .5*q(j, k3, 3)/q(j, k3, 1)
      j = j2
      CALL PUSHREAL8(ueta)
      ueta = -(1.5*q(j, k, 2)/q(j, k, 1)) + 2.*q(j, k2, 2)/q(j, k2, 1) -
     +  .5*q(j, k3, 2)/q(j, k3, 1)
      CALL PUSHREAL8(veta)
      veta = -(1.5*q(j, k, 3)/q(j, k, 1)) + 2.*q(j, k2, 3)/q(j, k2, 1) -
     +  .5*q(j, k3, 3)/q(j, k3, 1)
C..   set limits
      js = j1 + 1
      je = j2 - 1
      CALL PUSHINTEGER4(j)
      DO j=js,je
        CALL PUSHREAL8(ueta)
        ueta = -(1.5*q(j, k, 2)/q(j, k, 1)) + 2.*q(j, k2, 2)/q(j, k2, 1)
     +    - .5*q(j, k3, 2)/q(j, k3, 1)
        CALL PUSHREAL8(veta)
        veta = -(1.5*q(j, k, 3)/q(j, k, 1)) + 2.*q(j, k2, 3)/q(j, k2, 1)
     +    - .5*q(j, k3, 3)/q(j, k3, 1)
C
      ENDDO
      zz1b = 0.0
      zz1b(:) = cfb(:)
      uinf2b = 0.0
      DO j=je,js,-1
        jp1 = j + 1
        jm1 = j - 1
        vxi = .5*(q(jp1, k, 3)/q(jp1, k, 1)-q(jm1, k, 3)/q(jm1, k, 1))
        uxi = .5*(q(jp1, k, 2)/q(jp1, k, 1)-q(jm1, k, 2)/q(jm1, k, 1))
        etax = yx(j, k)
        etay = yy(j, k)
        xix = xx(j, k)
        xiy = xy(j, k)
        temp1 = .5*rinf*uinf2
        temp1b = amu*zz1b(j)/temp1
        uxib = xiy*temp1b
        uetab = etay*temp1b
        vxib = -(xix*temp1b)
        vetab = -(etax*temp1b)
        uinf2b = uinf2b - (xiy*uxi+etay*ueta-xix*vxi-etax*veta)*.5*rinf*
     +    temp1b/temp1
        zz1b(j) = 0.0
        CALL POPREAL8(veta)
        temp1b0 = 2.*vetab/q(j, k2, 1)
        temp1b1 = -(1.5*vetab/q(j, k, 1))
        temp1b2 = -(.5*vetab/q(j, k3, 1))
        qb(j, k2, 3) = qb(j, k2, 3) + temp1b0
        qb(j, k2, 1) = qb(j, k2, 1) - q(j, k2, 3)*temp1b0/q(j, k2, 1)
        qb(j, k, 3) = qb(j, k, 3) + temp1b1
        qb(j, k, 1) = qb(j, k, 1) - q(j, k, 3)*temp1b1/q(j, k, 1)
        qb(j, k3, 3) = qb(j, k3, 3) + temp1b2
        qb(j, k3, 1) = qb(j, k3, 1) - q(j, k3, 3)*temp1b2/q(j, k3, 1)
        CALL POPREAL8(ueta)
        temp1b3 = 2.*uetab/q(j, k2, 1)
        temp1b4 = -(1.5*uetab/q(j, k, 1))
        temp1b5 = -(.5*uetab/q(j, k3, 1))
        qb(j, k2, 2) = qb(j, k2, 2) + temp1b3
        qb(j, k2, 1) = qb(j, k2, 1) - q(j, k2, 2)*temp1b3/q(j, k2, 1)
        qb(j, k, 2) = qb(j, k, 2) + temp1b4
        qb(j, k, 1) = qb(j, k, 1) - q(j, k, 2)*temp1b4/q(j, k, 1)
        qb(j, k3, 2) = qb(j, k3, 2) + temp1b5
        qb(j, k3, 1) = qb(j, k3, 1) - q(j, k3, 2)*temp1b5/q(j, k3, 1)
        temp1b6 = .5*vxib/q(jp1, k, 1)
        temp1b7 = -(.5*vxib/q(jm1, k, 1))
        qb(jp1, k, 3) = qb(jp1, k, 3) + temp1b6
        qb(jp1, k, 1) = qb(jp1, k, 1) - q(jp1, k, 3)*temp1b6/q(jp1, k, 1
     +    )
        qb(jm1, k, 3) = qb(jm1, k, 3) + temp1b7
        qb(jm1, k, 1) = qb(jm1, k, 1) - q(jm1, k, 3)*temp1b7/q(jm1, k, 1
     +    )
        temp1b8 = .5*uxib/q(jp1, k, 1)
        temp1b9 = -(.5*uxib/q(jm1, k, 1))
        qb(jp1, k, 2) = qb(jp1, k, 2) + temp1b8
        qb(jp1, k, 1) = qb(jp1, k, 1) - q(jp1, k, 2)*temp1b8/q(jp1, k, 1
     +    )
        qb(jm1, k, 2) = qb(jm1, k, 2) + temp1b9
        qb(jm1, k, 1) = qb(jm1, k, 1) - q(jm1, k, 2)*temp1b9/q(jm1, k, 1
     +    )
      ENDDO
      CALL POPINTEGER4(j)
      j = j2
      jm1 = j - 1
      vxi = q(j, k, 3)/q(j, k, 1) - q(jm1, k, 3)/q(jm1, k, 1)
      uxi = q(j, k, 2)/q(j, k, 1) - q(jm1, k, 2)/q(jm1, k, 1)
      etax = yx(j, k)
      etay = yy(j, k)
      xix = xx(j, k)
      xiy = xy(j, k)
      temp0 = .5*rinf*uinf2
      temp0b = amu*zz1b(j)/temp0
      uxib = xiy*temp0b
      uetab = etay*temp0b
      vxib = -(xix*temp0b)
      vetab = -(etax*temp0b)
      uinf2b = uinf2b - (xiy*uxi+etay*ueta-xix*vxi-etax*veta)*.5*rinf*
     +  temp0b/temp0
      zz1b(j) = 0.0
      CALL POPREAL8(veta)
      temp0b0 = 2.*vetab/q(j, k2, 1)
      temp0b1 = -(1.5*vetab/q(j, k, 1))
      temp0b2 = -(.5*vetab/q(j, k3, 1))
      qb(j, k2, 3) = qb(j, k2, 3) + temp0b0
      qb(j, k2, 1) = qb(j, k2, 1) - q(j, k2, 3)*temp0b0/q(j, k2, 1)
      qb(j, k, 3) = qb(j, k, 3) + temp0b1
      qb(j, k, 1) = qb(j, k, 1) - q(j, k, 3)*temp0b1/q(j, k, 1)
      qb(j, k3, 3) = qb(j, k3, 3) + temp0b2
      qb(j, k3, 1) = qb(j, k3, 1) - q(j, k3, 3)*temp0b2/q(j, k3, 1)
      CALL POPREAL8(ueta)
      temp0b3 = 2.*uetab/q(j, k2, 1)
      temp0b4 = -(1.5*uetab/q(j, k, 1))
      temp0b5 = -(.5*uetab/q(j, k3, 1))
      qb(j, k2, 2) = qb(j, k2, 2) + temp0b3
      qb(j, k2, 1) = qb(j, k2, 1) - q(j, k2, 2)*temp0b3/q(j, k2, 1)
      qb(j, k, 2) = qb(j, k, 2) + temp0b4
      qb(j, k, 1) = qb(j, k, 1) - q(j, k, 2)*temp0b4/q(j, k, 1)
      qb(j, k3, 2) = qb(j, k3, 2) + temp0b5
      qb(j, k3, 1) = qb(j, k3, 1) - q(j, k3, 2)*temp0b5/q(j, k3, 1)
      temp0b6 = vxib/q(j, k, 1)
      temp0b7 = -(vxib/q(jm1, k, 1))
      qb(j, k, 3) = qb(j, k, 3) + temp0b6
      qb(j, k, 1) = qb(j, k, 1) - q(j, k, 3)*temp0b6/q(j, k, 1)
      qb(jm1, k, 3) = qb(jm1, k, 3) + temp0b7
      qb(jm1, k, 1) = qb(jm1, k, 1) - q(jm1, k, 3)*temp0b7/q(jm1, k, 1)
      temp0b8 = uxib/q(j, k, 1)
      temp0b9 = -(uxib/q(jm1, k, 1))
      qb(j, k, 2) = qb(j, k, 2) + temp0b8
      qb(j, k, 1) = qb(j, k, 1) - q(j, k, 2)*temp0b8/q(j, k, 1)
      qb(jm1, k, 2) = qb(jm1, k, 2) + temp0b9
      qb(jm1, k, 1) = qb(jm1, k, 1) - q(jm1, k, 2)*temp0b9/q(jm1, k, 1)
      j = j1
      jp1 = j + 1
      vxi = q(jp1, k, 3)/q(jp1, k, 1) - q(j, k, 3)/q(j, k, 1)
      uxi = q(jp1, k, 2)/q(jp1, k, 1) - q(j, k, 2)/q(j, k, 1)
      etax = yx(j, k)
      etay = yy(j, k)
      xix = xx(j, k)
      xiy = xy(j, k)
      temp = .5*rinf*uinf2
      tempb = amu*zz1b(j)/temp
      uxib = xiy*tempb
      uetab = etay*tempb
      vxib = -(xix*tempb)
      vetab = -(etax*tempb)
      uinf2b = uinf2b - (xiy*uxi+etay*ueta-xix*vxi-etax*veta)*.5*rinf*
     +  tempb/temp
      tempb0 = 2.*vetab/q(j, k2, 1)
      tempb1 = -(1.5*vetab/q(j, k, 1))
      tempb2 = -(.5*vetab/q(j, k3, 1))
      qb(j, k2, 3) = qb(j, k2, 3) + tempb0
      qb(j, k2, 1) = qb(j, k2, 1) - q(j, k2, 3)*tempb0/q(j, k2, 1)
      qb(j, k, 3) = qb(j, k, 3) + tempb1
      qb(j, k, 1) = qb(j, k, 1) - q(j, k, 3)*tempb1/q(j, k, 1)
      qb(j, k3, 3) = qb(j, k3, 3) + tempb2
      qb(j, k3, 1) = qb(j, k3, 1) - q(j, k3, 3)*tempb2/q(j, k3, 1)
      tempb3 = 2.*uetab/q(j, k2, 1)
      tempb4 = -(1.5*uetab/q(j, k, 1))
      tempb5 = -(.5*uetab/q(j, k3, 1))
      qb(j, k2, 2) = qb(j, k2, 2) + tempb3
      qb(j, k2, 1) = qb(j, k2, 1) - q(j, k2, 2)*tempb3/q(j, k2, 1)
      qb(j, k, 2) = qb(j, k, 2) + tempb4
      qb(j, k, 1) = qb(j, k, 1) - q(j, k, 2)*tempb4/q(j, k, 1)
      qb(j, k3, 2) = qb(j, k3, 2) + tempb5
      qb(j, k3, 1) = qb(j, k3, 1) - q(j, k3, 2)*tempb5/q(j, k3, 1)
      tempb6 = vxib/q(jp1, k, 1)
      tempb7 = -(vxib/q(j, k, 1))
      qb(jp1, k, 3) = qb(jp1, k, 3) + tempb6
      qb(jp1, k, 1) = qb(jp1, k, 1) - q(jp1, k, 3)*tempb6/q(jp1, k, 1)
      qb(j, k, 3) = qb(j, k, 3) + tempb7
      qb(j, k, 1) = qb(j, k, 1) - q(j, k, 3)*tempb7/q(j, k, 1)
      tempb8 = uxib/q(jp1, k, 1)
      tempb9 = -(uxib/q(j, k, 1))
      qb(jp1, k, 2) = qb(jp1, k, 2) + tempb8
      qb(jp1, k, 1) = qb(jp1, k, 1) - q(jp1, k, 2)*tempb8/q(jp1, k, 1)
      qb(j, k, 2) = qb(j, k, 2) + tempb9
      qb(j, k, 1) = qb(j, k, 1) - q(j, k, 2)*tempb9/q(j, k, 1)
      fmmb = 2*fmm*uinf2b
      CALL POPCONTROL2B(branch)
      IF (branch .EQ. 0) THEN
        fsmachb = fsmachb + fmmb
      ELSE IF (branch .EQ. 1) THEN
        fmtipb = fmtipb + fmmb
      END IF
      END
