C        Generated by TAPENADE     (INRIA, Tropics team)
C  Tapenade 3.6 (r4343) - 10 Feb 2012 10:52
C
C  Differentiation of turbc in reverse (adjoint) mode:
C   gradient     of useful results: q
C   with respect to varying inputs: q
C   RW status of diff variables: q:in-out
C
C*************************************************************
      SUBROUTINE TURBC_BQ(q, qb, u, v, ug, vg, xx, xy, yx, yy, jd, kd, 
     +                    im)
      USE PARAMS_GLOBAL
      IMPLICIT NONE
C*************************************************************
C*************************************************************
      INTEGER jd, kd
      REAL q(jd, kd, nq)
      REAL qb(jd, kd, nq)
      REAL u(jd, kd), v(jd, kd), ug(jd, kd), vg(jd, kd)
      REAL xx(jd, kd), xy(jd, kd), yx(jd, kd), yy(jd, kd)
      INTEGER im
C
C..   local variables
      INTEGER js, je, ks, ke, idir
      INTEGER j, k, ib
      DO ib=1,nbc_all(im)
        js = jbcs_all(ib, im)
        je = jbce_all(ib, im)
        ks = kbcs_all(ib, im)
        ke = kbce_all(ib, im)
        IF (js .LT. 0) js = jmax + js + 1
        IF (ks .LT. 0) ks = kmax + ks + 1
        IF (je .LT. 0) je = jmax + je + 1
        IF (ke .LT. 0) ke = kmax + ke + 1
C
        IF (js .GT. 1) js = js + nhalo
        IF (ks .GT. 1) ks = ks + nhalo
        IF (je .LT. jmax) je = je + nhalo - 1
        IF (ke .LT. kmax) ke = ke + nhalo - 1
        IF (je .EQ. jmax) je = jd
        IF (ke .EQ. kmax) ke = kd
C
        idir = ibdir_all(ib, im)
C
C.. inviscid wind tunnel wall bc
        IF (ibtyp_all(ib, im) .EQ. 3 .OR. ibtyp_all(ib, im) .EQ. 4) THEN
          CALL TURBC_EXTPT_BQ(q, qb, jd, kd, js, je, ks, ke, idir)
        ELSE IF (ibtyp_all(ib, im) .EQ. 5) THEN
          CALL TURBC_WALL_BQ(q, qb, jd, kd, js, je, ks, ke, idir)
        ELSE IF (ibtyp_all(ib, im) .EQ. 10 .OR. ibtyp_all(ib, im) .EQ. 
     +      11) THEN
          CALL TURBC_SYM_BQ(q, qb, jd, kd, js, je, ks, ke, idir)
        ELSE IF (ibtyp_all(ib, im) .EQ. 22) THEN
          CALL TURBC_PERIODIC_BQ(q, qb, jd, kd, js, je, ks, ke, idir)
        ELSE IF (ibtyp_all(ib, im) .EQ. 51) THEN
          CALL TURBC_WAKE_BQ(q, qb, jd, kd, js, je, ks, ke, idir)
        ELSE IF (ibtyp_all(ib, im) .EQ. 46) THEN
          CALL TURBC_INF_BQ(q, qb, jd, kd, js, je, ks, ke, idir)
        ELSE IF (ibtyp_all(ib, im) .EQ. 47) THEN
          CALL TURBC_OUT_BQ(q, qb, u, v, ug, vg, xx, xy, yx, yy, jd, kd
     +                      , js, je, ks, ke, idir)
        END IF
      ENDDO
      END
