C        Generated by TAPENADE     (INRIA, Tropics team)
C  Tapenade 3.6 (r4343) - 10 Feb 2012 10:52
C
C  Differentiation of bcout_trkl in reverse (adjoint) mode:
C   gradient     of useful results: einf vinf uinf q
C   with respect to varying inputs: einf vinf uinf q
C
C***********************************************************************
      SUBROUTINE BCOUT_TRKL_BQ(q, qb, x, y, xx, xy, yx, yy, ug, vg, bt, 
     +                         jd, kd, js, je, ks, ke, idir)
      USE PARAMS_GLOBAL
      USE PARAMS_SENSITIVITY
      IMPLICIT NONE
C
C     Outflow boundary condition with Turkel Preconditioning 
C     Characteristic extrapolation based on Riemann invariants
C*********************************************************************
C*********************************************************************
      INTEGER jd, kd, js, je, ks, ke, idir
      REAL q(jd, kd, nq)
      REAL qb(jd, kd, nq)
C local variables
      REAL xx(jd, kd), xy(jd, kd), yx(jd, kd), yy(jd, kd), ug(jd, kd), 
     +     vg(jd, kd), x(jd, kd), y(jd, kd), bt(jd, kd)
C
      REAL foso
      REAL rhoext, uext, vext, eext, pext
      REAL xxn, xyn, yxn, yyn, snorm
      REAL rho, rrho, uu, vv, e, uv2, cjkl, c2i, ge, qq
      REAL rhob, rrhob, uub, vvb, eb, uv2b, cjklb, c2ib, geb, qqb
      REAL z, r, s, zi, bsq
      REAL zb, rb, sb, zib
      REAL rho1, rho2, u1, u2, v1, v2, p1, p2, press
      REAL rho1b, rho2b, u1b, u2b, v1b, v2b, p1b, p2b, pressb
      INTEGER k, k1, k2, j, j1, j2, jc, kc, iadd, iadir
      REAL qext(4), qbar(4), delq(4), delw(4)
      REAL qextb(4), qbarb(4), delqb(4), delwb(4)
      REAL tmp
      REAL tmp0
      REAL tmp1
      REAL tmp2
      REAL tmp3
      REAL tmp4
      REAL tmp5
      REAL tmp6
      REAL tmp7
      REAL tmp8
      REAL tmp9
      REAL tmp10
      REAL temp3
      REAL temp9b8
      REAL temp29
      REAL temp2
      REAL temp9b7
      REAL temp28
      REAL temp1
      REAL tmp4b
      REAL temp9b6
      REAL temp25b0
      REAL temp27
      REAL temp0
      REAL temp9b5
      REAL temp26
      REAL temp9b4
      REAL temp7b
      REAL temp25
      REAL temp21b
      REAL temp9b3
      REAL temp24
      REAL temp9b2
      REAL temp23
      REAL temp9b1
      REAL temp22
      REAL temp20b0
      REAL temp9b0
      REAL temp21
      REAL temp20
      REAL tmp7b
      REAL temp16b
      REAL temp18b0
      REAL temp24b
      REAL temp32b
      REAL temp4b0
      REAL temp19b
      REAL tempb2
      REAL tempb1
      REAL temp0b
      REAL tempb0
      REAL temp23b1
      REAL tmp10b
      REAL tmpb
      REAL temp23b0
      INTRINSIC SIGN
      REAL tmp0b
      REAL temp3b
      INTRINSIC ABS
      REAL temp7b0
      REAL temp16b2
      REAL temp19
      REAL temp16b1
      REAL temp18
      REAL temp16b0
      REAL temp26b9
      REAL tmp3b
      REAL temp17
      REAL temp26b8
      REAL temp2b1
      REAL temp12b
      REAL temp16
      REAL temp26b7
      REAL temp6b
      REAL temp2b0
      REAL temp15
      REAL temp20b
      REAL temp26b6
      REAL temp14
      REAL temp26b5
      REAL temp13
      REAL temp26b4
      REAL temp12
      REAL temp26b3
      REAL temp11
      REAL temp9b10
      REAL temp26b2
      REAL temp10
      REAL tmp6b
      REAL temp26b1
      REAL temp15b
      REAL temp26b0
      REAL temp9b
      REAL temp23b
      REAL temp21b0
      REAL tmp9b
      REAL temp18b
      REAL temp19b1
      REAL temp26b
      REAL temp19b0
      REAL temp5b0
      REAL tempb
      REAL temp0b2
      REAL temp0b1
      REAL temp29b
      REAL temp0b0
      REAL temp29b0
      REAL temp2b
      REAL temp26b10
      REAL temp24b0
      REAL tmp2b
      REAL temp5b
      REAL temp8b0
      REAL temp17b2
      REAL temp17b1
      REAL tmp5b
      REAL temp17b0
      REAL temp8b
      REAL temp22b
      REAL temp3b0
      REAL temp12b0
      REAL temp32
      REAL temp31
      REAL tmp8b
      REAL temp30
      REAL temp17b
      REAL temp25b
      REAL temp22b0
      REAL temp1b
      REAL temp6b1
      INTRINSIC SQRT
      REAL temp
      REAL temp6b0
      REAL temp15b2
      REAL temp15b1
      REAL temp32b2
      REAL temp15b0
      REAL temp32b1
      REAL temp9
      REAL temp32b0
      REAL temp8
      REAL tmp1b
      REAL temp7
      REAL temp1b0
      REAL temp6
      REAL temp4b
      REAL temp5
      REAL temp4
      REAL temp9b9
C***  first executable statement
C
      iadd = SIGN(1, idir)
      IF (idir .GE. 0.) THEN
        iadir = idir
      ELSE
        iadir = -idir
      END IF
C
      IF (iadir .EQ. 1) THEN
C
        IF (idir .EQ. 1) THEN
          j = je
        ELSE IF (idir .EQ. -1) THEN
          j = js
        END IF
        j1 = j + iadd
        j2 = j1 + iadd
C
        foso = 1.0
        CALL PUSHREAL8ARRAY(q, jd*kd*nq)
        CALL PUSHINTEGER4(j)
        CALL PUSHREAL8ARRAY(delq, 4)
        CALL PUSHREAL8ARRAY(delw, 4)
        CALL PUSHREAL8(foso)
        CALL PUSHINTEGER4(j1)
        CALL PUSHINTEGER4(j2)
        CALL PUSHREAL8ARRAY(qext, 4)
        CALL PUSHREAL8ARRAY(qbar, 4)
        DO k=ks,ke
C..calculate metrics at boundary
          snorm = -(1.*iadd/SQRT(xx(j, k)**2+xy(j, k)**2))
          xxn = xx(j, k)*snorm
          xyn = xy(j, k)*snorm
C..first-order extrapolation
          qext(1) = (1.+foso)*q(j1, k, 1)*q(j1, k, nq) - foso*q(j2, k, 1
     +      )*q(j2, k, nq)
          qext(2) = (1.+foso)*q(j1, k, 2)*q(j1, k, nq) - foso*q(j2, k, 2
     +      )*q(j2, k, nq)
          qext(3) = (1.+foso)*q(j1, k, 3)*q(j1, k, nq) - foso*q(j2, k, 3
     +      )*q(j2, k, nq)
          qext(4) = (1.+foso)*q(j1, k, 4)*q(j1, k, nq) - foso*q(j2, k, 4
     +      )*q(j2, k, nq)
C
          qbar(1) = 0.5*(qext(1)+rinf)
          qbar(2) = 0.5*(qext(2)+rinf*uinf)
          qbar(3) = 0.5*(qext(3)+rinf*vinf)
          qbar(4) = 0.5*(qext(4)+einf)
          delq(1) = 0.5*(rinf-qext(1))
          delq(2) = 0.5*(rinf*uinf-qext(2))
          delq(3) = 0.5*(rinf*vinf-qext(3))
          delq(4) = 0.5*(einf-qext(4))
C
          rho = qbar(1)
          rrho = 1./rho
          uu = qbar(2)*rrho
          vv = qbar(3)*rrho
          e = qbar(4)*rrho
          uv2 = 0.5*(uu*uu+vv*vv)
          cjkl = SQRT(ggm1*(e-uv2))
          c2i = 1./(cjkl*cjkl)
          ge = gamma*e - gm1*uv2
          qq = (uu-ug(j, k))*xxn + (vv-vg(j, k))*xyn
C
          bsq = mp**2/(bt(j, k)-mp**2*(bt(j, k)-1))
C
          z = SQRT((1.-bsq)*qq*(1.-bsq)*qq + 4.*bsq*cjkl*cjkl)
          zi = 1./z
          r = 0.5*((1.-bsq)*qq+z)
          s = 0.5*((1.-bsq)*qq-z)
C
C..multiplying by sign(lamda_pa)*inv(X_pa)
          delw(1) = (1.-uv2*gm1*c2i)*SIGN(1., qq)*delq(1)
          delw(1) = delw(1) + uu*c2i*gm1*SIGN(1., qq)*delq(2)
          delw(1) = delw(1) + vv*c2i*gm1*SIGN(1., qq)*delq(3)
          delw(1) = delw(1) - gm1*c2i*SIGN(1., qq)*delq(4)
          delw(2) = (vv*xxn-uu*xyn)*SIGN(1., qq)*delq(1)
          delw(2) = delw(2) + xyn*SIGN(1., qq)*delq(2)
          delw(2) = delw(2) - xxn*SIGN(1., qq)*delq(3)
          delw(3) = -(zi*(uv2*gm1*c2i*s+bsq*qq)*SIGN(1., r+bsq*qq)*delq(
     +      1))
          delw(3) = delw(3) + (xxn*bsq+s*uu*gm1*c2i)*zi*SIGN(1., r+bsq*
     +      qq)*delq(2)
          delw(3) = delw(3) + (xyn*bsq+s*vv*gm1*c2i)*zi*SIGN(1., r+qq*
     +      bsq)*delq(3)
          delw(3) = delw(3) - s*gm1*c2i*zi*SIGN(1., r+qq*bsq)*delq(4)
          delw(4) = zi*(uv2*gm1*c2i*r+qq*bsq)*SIGN(1., s+bsq*qq)*delq(1)
          delw(4) = delw(4) - (xxn*bsq+r*uu*gm1*c2i)*zi*SIGN(1., s+bsq*
     +      qq)*delq(2)
          delw(4) = delw(4) - (xyn*bsq+r*vv*gm1*c2i)*zi*SIGN(1., s+qq*
     +      bsq)*delq(3)
          delw(4) = delw(4) + r*gm1*c2i*zi*SIGN(1., s+qq*bsq)*delq(4)
C.. multiplying by (X_pa)
          delq(1) = delw(1) + delw(3) + delw(4)
          delq(2) = uu*delw(1) + xyn*delw(2) + (uu+xxn*r/bsq)*delw(3)
          delq(2) = delq(2) + (uu+xxn*s/bsq)*delw(4)
          delq(3) = vv*delw(1) - xxn*delw(2) + (vv+xyn*r/bsq)*delw(3)
          delq(3) = delq(3) + (vv+xyn*s/bsq)*delw(4)
          delq(4) = uv2*delw(1) + (uu*xyn-vv*xxn)*delw(2)
          delq(4) = delq(4) + (ge+r*qq/bsq)*delw(3)
          delq(4) = delq(4) + (ge+s*qq/bsq)*delw(4)
C
C.. qbar + delq
          q(j, k, 1) = (qbar(1)-delq(1))/q(j, k, nq)
          q(j, k, 2) = (qbar(2)-delq(2))/q(j, k, nq)
          q(j, k, 3) = (qbar(3)-delq(3))/q(j, k, nq)
          q(j, k, 4) = (qbar(4)-delq(4))/q(j, k, nq)
        ENDDO
C
C
C..extrapolate everything to other halo cells
C
        foso = 0.0
        CALL PUSHREAL8ARRAY(q, jd*kd*nq)
        CALL PUSHINTEGER4(j)
        CALL PUSHINTEGER4(j1)
        CALL PUSHINTEGER4(j2)
        DO jc=1,je-js
          IF (idir .EQ. 1) THEN
            j = je - jc
          ELSE IF (idir .EQ. -1) THEN
            j = js + jc
          END IF
          j1 = j + iadd
          j2 = j1 + iadd
          CALL PUSHREAL8ARRAY(q, jd*kd*nq)
          CALL PUSHINTEGER4(j)
          CALL PUSHINTEGER4(j1)
          CALL PUSHINTEGER4(j2)
C
          DO k=ks,ke
            rho1 = q(j1, k, 1)*q(j1, k, nq)
            rho2 = q(j2, k, 1)*q(j2, k, nq)
            u1 = q(j1, k, 2)/q(j1, k, 1)
            u2 = q(j2, k, 2)/q(j2, k, 1)
            v1 = q(j1, k, 3)/q(j1, k, 1)
            v2 = q(j2, k, 3)/q(j2, k, 1)
            p1 = gm1*(q(j1, k, 4)-0.5*(q(j1, k, 2)**2+q(j1, k, 3)**2)/q(
     +        j1, k, 1))*q(j1, k, nq)
            p2 = gm1*(q(j2, k, 4)-0.5*(q(j2, k, 2)**2+q(j2, k, 3)**2)/q(
     +        j2, k, 1))*q(j2, k, nq)
C
            q(j, k, 1) = ((1.+foso)*rho1-foso*rho2)/q(j, k, nq)
            q(j, k, 2) = ((1.+foso)*u1-foso*u2)*q(j, k, 1)
            q(j, k, 3) = ((1.+foso)*v1-foso*v2)*q(j, k, 1)
            press = (1.+foso)*p1 - foso*p2
            q(j, k, 4) = press/(gm1*q(j, k, nq)) + 0.5*(q(j, k, 2)**2+q(
     +        j, k, 3)**2)/q(j, k, 1)
          ENDDO
          CALL POPINTEGER4(j2)
          CALL POPINTEGER4(j1)
          CALL POPINTEGER4(j)
          CALL POPREAL8ARRAY(q, jd*kd*nq)
          DO k=ks,ke
            rho1 = q(j1, k, 1)*q(j1, k, nq)
            rho2 = q(j2, k, 1)*q(j2, k, nq)
            u1 = q(j1, k, 2)/q(j1, k, 1)
            u2 = q(j2, k, 2)/q(j2, k, 1)
            v1 = q(j1, k, 3)/q(j1, k, 1)
            v2 = q(j2, k, 3)/q(j2, k, 1)
            p1 = gm1*(q(j1, k, 4)-0.5*(q(j1, k, 2)**2+q(j1, k, 3)**2)/q(
     +        j1, k, 1))*q(j1, k, nq)
            p2 = gm1*(q(j2, k, 4)-0.5*(q(j2, k, 2)**2+q(j2, k, 3)**2)/q(
     +        j2, k, 1))*q(j2, k, nq)
C
            tmp9 = ((1.+foso)*rho1-foso*rho2)/q(j, k, nq)
            CALL PUSHREAL8(q(j, k, 1))
            q(j, k, 1) = tmp9
            CALL PUSHREAL8(q(j, k, 2))
            q(j, k, 2) = ((1.+foso)*u1-foso*u2)*q(j, k, 1)
            CALL PUSHREAL8(q(j, k, 3))
            q(j, k, 3) = ((1.+foso)*v1-foso*v2)*q(j, k, 1)
            press = (1.+foso)*p1 - foso*p2
            tmp10b = qb(j, k, 4)
            qb(j, k, 4) = 0.0
            temp32 = gm1*q(j, k, nq)
            temp32b = 0.5*tmp10b/q(j, k, 1)
            pressb = tmp10b/temp32
            qb(j, k, nq) = qb(j, k, nq) - press*gm1*tmp10b/temp32**2
            qb(j, k, 2) = qb(j, k, 2) + 2*q(j, k, 2)*temp32b
            qb(j, k, 3) = qb(j, k, 3) + 2*q(j, k, 3)*temp32b
            qb(j, k, 1) = qb(j, k, 1) - (q(j, k, 2)**2+q(j, k, 3)**2)*
     +        temp32b/q(j, k, 1)
            p1b = (foso+1.)*pressb
            p2b = -(foso*pressb)
            CALL POPREAL8(q(j, k, 3))
            temp32b0 = q(j, k, 1)*qb(j, k, 3)
            v1b = (foso+1.)*temp32b0
            v2b = -(foso*temp32b0)
            qb(j, k, 1) = qb(j, k, 1) + ((foso+1.)*v1-foso*v2)*qb(j, k, 
     +        3)
            qb(j, k, 3) = 0.0
            CALL POPREAL8(q(j, k, 2))
            temp32b1 = q(j, k, 1)*qb(j, k, 2)
            u1b = (foso+1.)*temp32b1
            u2b = -(foso*temp32b1)
            qb(j, k, 1) = qb(j, k, 1) + ((foso+1.)*u1-foso*u2)*qb(j, k, 
     +        2)
            qb(j, k, 2) = 0.0
            CALL POPREAL8(q(j, k, 1))
            tmp9b = qb(j, k, 1)
            qb(j, k, 1) = 0.0
            temp32b2 = tmp9b/q(j, k, nq)
            rho1b = (foso+1.)*temp32b2
            rho2b = -(foso*temp32b2)
            qb(j, k, nq) = qb(j, k, nq) - ((foso+1.)*rho1-foso*rho2)*
     +        temp32b2/q(j, k, nq)
            temp31 = q(j2, k, 1)
            temp30 = q(j2, k, 2)**2 + q(j2, k, 3)**2
            temp29 = temp30/temp31
            temp29b = gm1*q(j2, k, nq)*p2b
            temp29b0 = -(0.5*temp29b/temp31)
            qb(j2, k, 4) = qb(j2, k, 4) + temp29b
            qb(j2, k, 2) = qb(j2, k, 2) + 2*q(j2, k, 2)*temp29b0
            qb(j2, k, 3) = qb(j2, k, 3) + 2*q(j2, k, 3)*temp29b0
            qb(j2, k, 1) = qb(j2, k, 1) - temp29*temp29b0
            qb(j2, k, nq) = qb(j2, k, nq) + gm1*(q(j2, k, 4)-0.5*temp29)
     +        *p2b
            temp28 = q(j1, k, 1)
            temp27 = q(j1, k, 2)**2 + q(j1, k, 3)**2
            temp26 = temp27/temp28
            temp26b5 = gm1*q(j1, k, nq)*p1b
            temp26b6 = -(0.5*temp26b5/temp28)
            qb(j1, k, 4) = qb(j1, k, 4) + temp26b5
            qb(j1, k, 2) = qb(j1, k, 2) + 2*q(j1, k, 2)*temp26b6
            qb(j1, k, 3) = qb(j1, k, 3) + 2*q(j1, k, 3)*temp26b6
            qb(j1, k, 1) = qb(j1, k, 1) - temp26*temp26b6
            qb(j1, k, nq) = qb(j1, k, nq) + gm1*(q(j1, k, 4)-0.5*temp26)
     +        *p1b
            temp26b7 = v2b/q(j2, k, 1)
            qb(j2, k, 3) = qb(j2, k, 3) + temp26b7
            qb(j2, k, 1) = qb(j2, k, 1) - q(j2, k, 3)*temp26b7/q(j2, k, 
     +        1)
            temp26b8 = v1b/q(j1, k, 1)
            qb(j1, k, 3) = qb(j1, k, 3) + temp26b8
            qb(j1, k, 1) = qb(j1, k, 1) - q(j1, k, 3)*temp26b8/q(j1, k, 
     +        1)
            temp26b9 = u2b/q(j2, k, 1)
            qb(j2, k, 2) = qb(j2, k, 2) + temp26b9
            qb(j2, k, 1) = qb(j2, k, 1) - q(j2, k, 2)*temp26b9/q(j2, k, 
     +        1)
            temp26b10 = u1b/q(j1, k, 1)
            qb(j1, k, 2) = qb(j1, k, 2) + temp26b10
            qb(j1, k, 1) = qb(j1, k, 1) - q(j1, k, 2)*temp26b10/q(j1, k
     +        , 1)
            qb(j2, k, 1) = qb(j2, k, 1) + q(j2, k, nq)*rho2b
            qb(j2, k, nq) = qb(j2, k, nq) + q(j2, k, 1)*rho2b
            qb(j1, k, 1) = qb(j1, k, 1) + q(j1, k, nq)*rho1b
            qb(j1, k, nq) = qb(j1, k, nq) + q(j1, k, 1)*rho1b
          ENDDO
        ENDDO
        CALL POPINTEGER4(j2)
        CALL POPINTEGER4(j1)
        CALL POPINTEGER4(j)
        CALL POPREAL8ARRAY(q, jd*kd*nq)
        foso = 1.0
        delqb = 0.0
        delwb = 0.0
        qextb = 0.0
        qbarb = 0.0
        CALL POPREAL8ARRAY(qbar, 4)
        CALL POPREAL8ARRAY(qext, 4)
        CALL POPINTEGER4(j2)
        CALL POPINTEGER4(j1)
        CALL POPREAL8(foso)
        CALL POPREAL8ARRAY(delw, 4)
        CALL POPREAL8ARRAY(delq, 4)
        CALL POPINTEGER4(j)
        CALL POPREAL8ARRAY(q, jd*kd*nq)
        DO k=ks,ke
C..calculate metrics at boundary
          snorm = -(1.*iadd/SQRT(xx(j, k)**2+xy(j, k)**2))
          xxn = xx(j, k)*snorm
          xyn = xy(j, k)*snorm
C..first-order extrapolation
          qext(1) = (1.+foso)*q(j1, k, 1)*q(j1, k, nq) - foso*q(j2, k, 1
     +      )*q(j2, k, nq)
          qext(2) = (1.+foso)*q(j1, k, 2)*q(j1, k, nq) - foso*q(j2, k, 2
     +      )*q(j2, k, nq)
          qext(3) = (1.+foso)*q(j1, k, 3)*q(j1, k, nq) - foso*q(j2, k, 3
     +      )*q(j2, k, nq)
          qext(4) = (1.+foso)*q(j1, k, 4)*q(j1, k, nq) - foso*q(j2, k, 4
     +      )*q(j2, k, nq)
C
          qbar(1) = 0.5*(qext(1)+rinf)
          qbar(2) = 0.5*(qext(2)+rinf*uinf)
          qbar(3) = 0.5*(qext(3)+rinf*vinf)
          qbar(4) = 0.5*(qext(4)+einf)
          delq(1) = 0.5*(rinf-qext(1))
          delq(2) = 0.5*(rinf*uinf-qext(2))
          delq(3) = 0.5*(rinf*vinf-qext(3))
          delq(4) = 0.5*(einf-qext(4))
C
          rho = qbar(1)
          rrho = 1./rho
          uu = qbar(2)*rrho
          vv = qbar(3)*rrho
          e = qbar(4)*rrho
          uv2 = 0.5*(uu*uu+vv*vv)
          cjkl = SQRT(ggm1*(e-uv2))
          c2i = 1./(cjkl*cjkl)
          ge = gamma*e - gm1*uv2
          qq = (uu-ug(j, k))*xxn + (vv-vg(j, k))*xyn
C
          bsq = mp**2/(bt(j, k)-mp**2*(bt(j, k)-1))
C
          z = SQRT((1.-bsq)*qq*(1.-bsq)*qq + 4.*bsq*cjkl*cjkl)
          zi = 1./z
          r = 0.5*((1.-bsq)*qq+z)
          s = 0.5*((1.-bsq)*qq-z)
C
C..multiplying by sign(lamda_pa)*inv(X_pa)
          delw(1) = (1.-uv2*gm1*c2i)*SIGN(1., qq)*delq(1)
          delw(1) = delw(1) + uu*c2i*gm1*SIGN(1., qq)*delq(2)
          delw(1) = delw(1) + vv*c2i*gm1*SIGN(1., qq)*delq(3)
          delw(1) = delw(1) - gm1*c2i*SIGN(1., qq)*delq(4)
          delw(2) = (vv*xxn-uu*xyn)*SIGN(1., qq)*delq(1)
          delw(2) = delw(2) + xyn*SIGN(1., qq)*delq(2)
          delw(2) = delw(2) - xxn*SIGN(1., qq)*delq(3)
          delw(3) = -(zi*(uv2*gm1*c2i*s+bsq*qq)*SIGN(1., r+bsq*qq)*delq(
     +      1))
          delw(3) = delw(3) + (xxn*bsq+s*uu*gm1*c2i)*zi*SIGN(1., r+bsq*
     +      qq)*delq(2)
          delw(3) = delw(3) + (xyn*bsq+s*vv*gm1*c2i)*zi*SIGN(1., r+qq*
     +      bsq)*delq(3)
          delw(3) = delw(3) - s*gm1*c2i*zi*SIGN(1., r+qq*bsq)*delq(4)
          delw(4) = zi*(uv2*gm1*c2i*r+qq*bsq)*SIGN(1., s+bsq*qq)*delq(1)
          delw(4) = delw(4) - (xxn*bsq+r*uu*gm1*c2i)*zi*SIGN(1., s+bsq*
     +      qq)*delq(2)
          delw(4) = delw(4) - (xyn*bsq+r*vv*gm1*c2i)*zi*SIGN(1., s+qq*
     +      bsq)*delq(3)
          delw(4) = delw(4) + r*gm1*c2i*zi*SIGN(1., s+qq*bsq)*delq(4)
          CALL PUSHREAL8(delq(1))
C.. multiplying by (X_pa)
          delq(1) = delw(1) + delw(3) + delw(4)
          CALL PUSHREAL8(delq(2))
          delq(2) = uu*delw(1) + xyn*delw(2) + (uu+xxn*r/bsq)*delw(3)
          CALL PUSHREAL8(delq(2))
          delq(2) = delq(2) + (uu+xxn*s/bsq)*delw(4)
          CALL PUSHREAL8(delq(3))
          delq(3) = vv*delw(1) - xxn*delw(2) + (vv+xyn*r/bsq)*delw(3)
          CALL PUSHREAL8(delq(3))
          delq(3) = delq(3) + (vv+xyn*s/bsq)*delw(4)
          CALL PUSHREAL8(delq(4))
          delq(4) = uv2*delw(1) + (uu*xyn-vv*xxn)*delw(2)
          CALL PUSHREAL8(delq(4))
          delq(4) = delq(4) + (ge+r*qq/bsq)*delw(3)
          CALL PUSHREAL8(delq(4))
          delq(4) = delq(4) + (ge+s*qq/bsq)*delw(4)
C
C.. qbar + delq
          tmp5 = (qbar(1)-delq(1))/q(j, k, nq)
          CALL PUSHREAL8(q(j, k, 1))
          q(j, k, 1) = tmp5
          tmp6 = (qbar(2)-delq(2))/q(j, k, nq)
          CALL PUSHREAL8(q(j, k, 2))
          q(j, k, 2) = tmp6
          tmp7 = (qbar(3)-delq(3))/q(j, k, nq)
          CALL PUSHREAL8(q(j, k, 3))
          q(j, k, 3) = tmp7
          temp18 = gm1*uv2*c2i*s + bsq*qq
          tmp8b = qb(j, k, 4)
          qb(j, k, 4) = 0.0
          temp26b = tmp8b/q(j, k, nq)
          qbarb(4) = qbarb(4) + temp26b
          delqb(4) = delqb(4) - temp26b
          qb(j, k, nq) = qb(j, k, nq) - (qbar(4)-delq(4))*temp26b/q(j, k
     +      , nq)
          CALL POPREAL8(q(j, k, 3))
          tmp7b = qb(j, k, 3)
          qb(j, k, 3) = 0.0
          temp26b0 = tmp7b/q(j, k, nq)
          qbarb(3) = qbarb(3) + temp26b0
          delqb(3) = delqb(3) - temp26b0
          qb(j, k, nq) = qb(j, k, nq) - (qbar(3)-delq(3))*temp26b0/q(j, 
     +      k, nq)
          CALL POPREAL8(q(j, k, 2))
          tmp6b = qb(j, k, 2)
          qb(j, k, 2) = 0.0
          temp26b1 = tmp6b/q(j, k, nq)
          qbarb(2) = qbarb(2) + temp26b1
          delqb(2) = delqb(2) - temp26b1
          qb(j, k, nq) = qb(j, k, nq) - (qbar(2)-delq(2))*temp26b1/q(j, 
     +      k, nq)
          CALL POPREAL8(q(j, k, 1))
          tmp5b = qb(j, k, 1)
          qb(j, k, 1) = 0.0
          temp26b2 = tmp5b/q(j, k, nq)
          qbarb(1) = qbarb(1) + temp26b2
          delqb(1) = delqb(1) - temp26b2
          qb(j, k, nq) = qb(j, k, nq) - (qbar(1)-delq(1))*temp26b2/q(j, 
     +      k, nq)
          CALL POPREAL8(delq(4))
          temp26b3 = delw(4)*delqb(4)/bsq
          geb = (delw(3)+delw(4))*delqb(4)
          delwb(4) = delwb(4) + (ge+s*qq/bsq)*delqb(4)
          CALL POPREAL8(delq(4))
          temp26b4 = delw(3)*delqb(4)/bsq
          delwb(3) = delwb(3) + (ge+r*qq/bsq)*delqb(4)
          CALL POPREAL8(delq(4))
          uv2b = delw(1)*delqb(4)
          delwb(1) = delwb(1) + uv2*delqb(4)
          uub = delw(2)*xyn*delqb(4)
          vvb = -(delw(2)*xxn*delqb(4))
          delwb(2) = delwb(2) + (xyn*uu-xxn*vv)*delqb(4)
          delqb(4) = 0.0
          sb = xyn*delw(4)*delqb(3)/bsq + qq*temp26b3
          rb = xyn*delw(3)*delqb(3)/bsq + qq*temp26b4
          CALL POPREAL8(delq(3))
          vvb = vvb + (delw(3)+delw(1)+delw(4))*delqb(3)
          delwb(4) = delwb(4) + (vv+xyn*(s/bsq))*delqb(3)
          CALL POPREAL8(delq(3))
          delwb(1) = delwb(1) + vv*delqb(3)
          delwb(2) = delwb(2) - xxn*delqb(3)
          delwb(3) = delwb(3) + (vv+xyn*(r/bsq))*delqb(3)
          delqb(3) = 0.0
          CALL POPREAL8(delq(2))
          uub = uub + (delw(3)+delw(1)+delw(4))*delqb(2)
          sb = sb + xxn*delw(4)*delqb(2)/bsq
          delwb(4) = delwb(4) + (uu+xxn*(s/bsq))*delqb(2)
          CALL POPREAL8(delq(2))
          delwb(1) = delwb(1) + uu*delqb(2)
          delwb(2) = delwb(2) + xyn*delqb(2)
          rb = rb + xxn*delw(3)*delqb(2)/bsq
          delwb(3) = delwb(3) + (uu+xxn*(r/bsq))*delqb(2)
          delqb(2) = 0.0
          CALL POPREAL8(delq(1))
          delwb(1) = delwb(1) + delqb(1)
          delwb(3) = delwb(3) + delqb(1)
          delwb(4) = delwb(4) + delqb(1)
          delqb(1) = 0.0
          temp25 = zi*delq(4)
          temp25b = gm1*SIGN(1., s+bsq*qq)*delwb(4)
          temp25b0 = r*c2i*temp25b
          delqb(4) = delqb(4) + zi*temp25b0
          temp24b0 = -(SIGN(1., s+bsq*qq)*delwb(4))
          temp24b = zi*delq(3)*gm1*temp24b0
          temp24 = xyn*bsq + gm1*r*vv*c2i
          delqb(3) = delqb(3) + temp24*zi*temp24b0
          temp23b1 = -(SIGN(1., s+bsq*qq)*delwb(4))
          temp23b0 = zi*delq(2)*gm1*temp23b1
          temp23 = xxn*bsq + gm1*r*uu*c2i
          delqb(2) = delqb(2) + temp23*zi*temp23b1
          temp22b0 = SIGN(1., s+bsq*qq)*delwb(4)
          temp22b = zi*delq(1)*temp22b0
          temp23b = gm1*temp22b
          rb = rb + c2i*vv*temp24b + uv2*c2i*temp23b + c2i*uu*temp23b0 +
     +      temp25*c2i*temp25b
          temp22 = gm1*uv2*c2i*r + bsq*qq
          delqb(1) = delqb(1) + temp22*zi*temp22b0
          delwb(4) = 0.0
          temp21 = zi*delq(4)
          temp21b = -(gm1*SIGN(1., r+bsq*qq)*delwb(3))
          temp21b0 = s*c2i*temp21b
          delqb(4) = delqb(4) + zi*temp21b0
          temp20b0 = SIGN(1., r+bsq*qq)*delwb(3)
          temp20b = zi*delq(3)*gm1*temp20b0
          temp20 = xyn*bsq + gm1*s*vv*c2i
          delqb(3) = delqb(3) + temp20*zi*temp20b0
          temp19b1 = SIGN(1., r+bsq*qq)*delwb(3)
          temp19b0 = zi*delq(2)*gm1*temp19b1
          temp19 = xxn*bsq + gm1*s*uu*c2i
          delqb(2) = delqb(2) + temp19*zi*temp19b1
          temp18b0 = -(SIGN(1., r+bsq*qq)*delwb(3))
          zib = temp24*delq(3)*temp24b0 + temp22*delq(1)*temp22b0 + 
     +      temp20*delq(3)*temp20b0 + temp18*delq(1)*temp18b0 + temp19*
     +      delq(2)*temp19b1 + delq(4)*temp21b0 + temp23*delq(2)*
     +      temp23b1 + delq(4)*temp25b0
          temp18b = zi*delq(1)*temp18b0
          temp19b = gm1*temp18b
          sb = sb + c2i*vv*temp20b + uv2*c2i*temp19b + c2i*uu*temp19b0 +
     +      temp21*c2i*temp21b
          delqb(1) = delqb(1) + temp18*zi*temp18b0
          delwb(3) = 0.0
          delqb(3) = delqb(3) - xxn*SIGN(1., qq)*delwb(2)
          delqb(2) = delqb(2) + xyn*SIGN(1., qq)*delwb(2)
          temp17b2 = SIGN(1., qq)*delwb(2)
          temp17 = xxn*vv - xyn*uu
          delqb(1) = delqb(1) + temp17*temp17b2
          delwb(2) = 0.0
          temp17b1 = -(gm1*SIGN(1., qq)*delwb(1))
          delqb(4) = delqb(4) + c2i*temp17b1
          temp17b = gm1*SIGN(1., qq)*delwb(1)
          delqb(3) = delqb(3) + vv*c2i*temp17b
          temp17b0 = gm1*SIGN(1., qq)*delwb(1)
          delqb(2) = delqb(2) + uu*c2i*temp17b0
          temp16b2 = SIGN(1., qq)*delwb(1)
          temp16b0 = -(delq(1)*gm1*temp16b2)
          c2ib = r*vv*temp24b + r*uv2*temp23b + s*vv*temp20b + s*uv2*
     +      temp19b + delq(3)*vv*temp17b + uv2*temp16b0 + delq(2)*uu*
     +      temp17b0 + delq(4)*temp17b1 + s*uu*temp19b0 + temp21*s*
     +      temp21b + r*uu*temp23b0 + temp25*r*temp25b
          temp16 = -(gm1*uv2*c2i) + 1.
          delqb(1) = delqb(1) + temp16*temp16b2
          delwb(1) = 0.0
          zb = 0.5*rb - zib/z**2 - 0.5*sb
          IF ((1.-bsq)**2*qq**2 + bsq*4.*cjkl**2 .EQ. 0.0) THEN
            temp16b = 0.0
          ELSE
            temp16b = zb/(2.0*SQRT((1.-bsq)**2*qq**2+bsq*4.*cjkl**2))
          END IF
          qqb = r*temp26b4 + bsq*temp18b + 0.5*(1.-bsq)*rb + (1.-bsq)**2
     +      *2*qq*temp16b + 0.5*(1.-bsq)*sb + bsq*temp22b + s*temp26b3
          cjklb = bsq*4.*2*cjkl*temp16b - 2*c2ib/cjkl**3
          IF (ggm1*(e-uv2) .EQ. 0.0) THEN
            temp16b1 = 0.0
          ELSE
            temp16b1 = ggm1*cjklb/(2.0*SQRT(ggm1*(e-uv2)))
          END IF
          uv2b = uv2b + s*c2i*temp19b - gm1*geb - temp16b1 + c2i*
     +      temp16b0 + r*c2i*temp23b
          vvb = vvb + c2i*s*temp20b + delq(3)*c2i*temp17b + 0.5*2*vv*
     +      uv2b + xyn*qqb + delq(1)*xxn*temp17b2 + c2i*r*temp24b
          uub = uub + c2i*s*temp19b0 + delq(2)*c2i*temp17b0 + 0.5*2*uu*
     +      uv2b + xxn*qqb - delq(1)*xyn*temp17b2 + c2i*r*temp23b0
          eb = temp16b1 + gamma*geb
          qbarb(4) = qbarb(4) + rrho*eb
          rrhob = qbar(3)*vvb + qbar(2)*uub + qbar(4)*eb
          qbarb(3) = qbarb(3) + rrho*vvb
          qbarb(2) = qbarb(2) + rrho*uub
          rhob = -(rrhob/rho**2)
          qbarb(1) = qbarb(1) + rhob
          einfb = einfb + 0.5*qbarb(4) + 0.5*delqb(4)
          qextb(4) = qextb(4) - 0.5*delqb(4)
          delqb(4) = 0.0
          vinfb = vinfb + 0.5*rinf*delqb(3)
          qextb(3) = qextb(3) - 0.5*delqb(3)
          delqb(3) = 0.0
          uinfb = uinfb + 0.5*rinf*delqb(2)
          qextb(2) = qextb(2) - 0.5*delqb(2)
          delqb(2) = 0.0
          qextb(1) = qextb(1) - 0.5*delqb(1)
          delqb(1) = 0.0
          qextb(4) = qextb(4) + 0.5*qbarb(4)
          qbarb(4) = 0.0
          qextb(3) = qextb(3) + 0.5*qbarb(3)
          vinfb = vinfb + 0.5*rinf*qbarb(3)
          qbarb(3) = 0.0
          qextb(2) = qextb(2) + 0.5*qbarb(2)
          uinfb = uinfb + 0.5*rinf*qbarb(2)
          qbarb(2) = 0.0
          qextb(1) = qextb(1) + 0.5*qbarb(1)
          qbarb(1) = 0.0
          qb(j1, k, 4) = qb(j1, k, 4) + (foso+1.)*q(j1, k, nq)*qextb(4)
          qb(j1, k, nq) = qb(j1, k, nq) + (foso+1.)*q(j1, k, 4)*qextb(4)
          qb(j2, k, 4) = qb(j2, k, 4) - foso*q(j2, k, nq)*qextb(4)
          qb(j2, k, nq) = qb(j2, k, nq) - foso*q(j2, k, 4)*qextb(4)
          qextb(4) = 0.0
          qb(j1, k, 3) = qb(j1, k, 3) + (foso+1.)*q(j1, k, nq)*qextb(3)
          qb(j1, k, nq) = qb(j1, k, nq) + (foso+1.)*q(j1, k, 3)*qextb(3)
          qb(j2, k, 3) = qb(j2, k, 3) - foso*q(j2, k, nq)*qextb(3)
          qb(j2, k, nq) = qb(j2, k, nq) - foso*q(j2, k, 3)*qextb(3)
          qextb(3) = 0.0
          qb(j1, k, 2) = qb(j1, k, 2) + (foso+1.)*q(j1, k, nq)*qextb(2)
          qb(j1, k, nq) = qb(j1, k, nq) + (foso+1.)*q(j1, k, 2)*qextb(2)
          qb(j2, k, 2) = qb(j2, k, 2) - foso*q(j2, k, nq)*qextb(2)
          qb(j2, k, nq) = qb(j2, k, nq) - foso*q(j2, k, 2)*qextb(2)
          qextb(2) = 0.0
          qb(j1, k, 1) = qb(j1, k, 1) + (foso+1.)*q(j1, k, nq)*qextb(1)
          qb(j1, k, nq) = qb(j1, k, nq) + (foso+1.)*q(j1, k, 1)*qextb(1)
          qb(j2, k, 1) = qb(j2, k, 1) - foso*q(j2, k, nq)*qextb(1)
          qb(j2, k, nq) = qb(j2, k, nq) - foso*q(j2, k, 1)*qextb(1)
          qextb(1) = 0.0
        ENDDO
      ELSE IF (iadir .EQ. 2) THEN
C
C
        IF (idir .EQ. 2) THEN
          k = ke
        ELSE IF (idir .EQ. -2) THEN
          k = ks
        END IF
        k1 = k + iadd
        k2 = k1 + iadd
C
        foso = 1.0
        CALL PUSHREAL8ARRAY(q, jd*kd*nq)
        CALL PUSHINTEGER4(k)
        CALL PUSHREAL8ARRAY(delq, 4)
        CALL PUSHREAL8ARRAY(delw, 4)
        CALL PUSHREAL8(foso)
        CALL PUSHINTEGER4(k1)
        CALL PUSHINTEGER4(k2)
        CALL PUSHREAL8ARRAY(qext, 4)
        CALL PUSHREAL8ARRAY(qbar, 4)
        DO j=js,je
C..calculate metrics at boundary
          snorm = -(1.*iadd/SQRT(yx(j, k)**2+yy(j, k)**2))
          yxn = yx(j, k)*snorm
          yyn = yy(j, k)*snorm
C..first-order extrapolation
          qext(1) = (1.+foso)*q(j, k1, 1)*q(j, k1, nq) - foso*q(j, k2, 1
     +      )*q(j, k2, nq)
          qext(2) = (1.+foso)*q(j, k1, 2)*q(j, k1, nq) - foso*q(j, k2, 2
     +      )*q(j, k2, nq)
          qext(3) = (1.+foso)*q(j, k1, 3)*q(j, k1, nq) - foso*q(j, k2, 3
     +      )*q(j, k2, nq)
          qext(4) = (1.+foso)*q(j, k1, 4)*q(j, k1, nq) - foso*q(j, k2, 4
     +      )*q(j, k2, nq)
C
          qbar(1) = 0.5*(qext(1)+rinf)
          qbar(2) = 0.5*(qext(2)+rinf*uinf)
          qbar(3) = 0.5*(qext(3)+rinf*vinf)
          qbar(4) = 0.5*(qext(4)+einf)
          delq(1) = 0.5*(rinf-qext(1))
          delq(2) = 0.5*(rinf*uinf-qext(2))
          delq(3) = 0.5*(rinf*vinf-qext(3))
          delq(4) = 0.5*(einf-qext(4))
C
          rho = qbar(1)
          rrho = 1./rho
          uu = qbar(2)*rrho
          vv = qbar(3)*rrho
          e = qbar(4)*rrho
          uv2 = 0.5*(uu*uu+vv*vv)
          cjkl = SQRT(ggm1*(e-uv2))
          c2i = 1./(cjkl*cjkl)
          ge = gamma*e - gm1*uv2
          qq = (uu-ug(j, k))*yxn + (vv-vg(j, k))*yyn
C
          bsq = mp**2/(bt(j, k)-mp**2*(bt(j, k)-1))
C
          z = SQRT((1.-bsq)*qq*(1.-bsq)*qq + 4.*bsq*cjkl*cjkl)
          zi = 1./z
          r = 0.5*((1.-bsq)*qq+z)
          s = 0.5*((1.-bsq)*qq-z)
C
C..multiplying by sign(lamda_pa)*inv(X_pa)
          delw(1) = (1.-uv2*gm1*c2i)*SIGN(1., qq)*delq(1)
          delw(1) = delw(1) + uu*c2i*gm1*SIGN(1., qq)*delq(2)
          delw(1) = delw(1) + vv*c2i*gm1*SIGN(1., qq)*delq(3)
          delw(1) = delw(1) - gm1*c2i*SIGN(1., qq)*delq(4)
          delw(2) = (vv*yxn-uu*yyn)*SIGN(1., qq)*delq(1)
          delw(2) = delw(2) + yyn*SIGN(1., qq)*delq(2)
          delw(2) = delw(2) - yxn*SIGN(1., qq)*delq(3)
          delw(3) = -(zi*(uv2*gm1*c2i*s+bsq*qq)*SIGN(1., r+bsq*qq)*delq(
     +      1))
          delw(3) = delw(3) + (yxn*bsq+s*uu*gm1*c2i)*zi*SIGN(1., r+bsq*
     +      qq)*delq(2)
          delw(3) = delw(3) + (yyn*bsq+s*vv*gm1*c2i)*zi*SIGN(1., r+qq*
     +      bsq)*delq(3)
          delw(3) = delw(3) - s*gm1*c2i*zi*SIGN(1., r+qq*bsq)*delq(4)
          delw(4) = zi*(uv2*gm1*c2i*r+qq*bsq)*SIGN(1., s+bsq*qq)*delq(1)
          delw(4) = delw(4) - (yxn*bsq+r*uu*gm1*c2i)*zi*SIGN(1., s+bsq*
     +      qq)*delq(2)
          delw(4) = delw(4) - (yyn*bsq+r*vv*gm1*c2i)*zi*SIGN(1., s+qq*
     +      bsq)*delq(3)
          delw(4) = delw(4) + r*gm1*c2i*zi*SIGN(1., s+qq*bsq)*delq(4)
C.. multiplying by (X_pa)
          delq(1) = delw(1) + delw(3) + delw(4)
          delq(2) = uu*delw(1) + yyn*delw(2) + (uu+yxn*r/bsq)*delw(3)
          delq(2) = delq(2) + (uu+yxn*s/bsq)*delw(4)
          delq(3) = vv*delw(1) - yxn*delw(2) + (vv+yyn*r/bsq)*delw(3)
          delq(3) = delq(3) + (vv+yyn*s/bsq)*delw(4)
          delq(4) = uv2*delw(1) + (uu*yyn-vv*yxn)*delw(2)
          delq(4) = delq(4) + (ge+r*qq/bsq)*delw(3)
          delq(4) = delq(4) + (ge+s*qq/bsq)*delw(4)
C
C.. qbar - delq
          q(j, k, 1) = (qbar(1)-delq(1))/q(j, k, nq)
          q(j, k, 2) = (qbar(2)-delq(2))/q(j, k, nq)
          q(j, k, 3) = (qbar(3)-delq(3))/q(j, k, nq)
          q(j, k, 4) = (qbar(4)-delq(4))/q(j, k, nq)
        ENDDO
C
C
C..extrapolate everything to other halo cells
C
        foso = 0.0
        CALL PUSHREAL8ARRAY(q, jd*kd*nq)
        CALL PUSHINTEGER4(k)
        CALL PUSHINTEGER4(k1)
        CALL PUSHINTEGER4(k2)
        DO kc=1,ke-ks
          IF (idir .EQ. 2) THEN
            k = ke - kc
          ELSE IF (idir .EQ. -2) THEN
            k = ks + kc
          END IF
          k1 = k + iadd
          k2 = k1 + iadd
          CALL PUSHREAL8ARRAY(q, jd*kd*nq)
          CALL PUSHINTEGER4(k)
          CALL PUSHINTEGER4(k1)
          CALL PUSHINTEGER4(k2)
C
          DO j=js,je
            rho1 = q(j, k1, 1)*q(j, k1, nq)
            rho2 = q(j, k2, 1)*q(j, k2, nq)
            u1 = q(j, k1, 2)/q(j, k1, 1)
            u2 = q(j, k2, 2)/q(j, k2, 1)
            v1 = q(j, k1, 3)/q(j, k1, 1)
            v2 = q(j, k2, 3)/q(j, k2, 1)
            p1 = gm1*(q(j, k1, 4)-0.5*(q(j, k1, 2)**2+q(j, k1, 3)**2)/q(
     +        j, k1, 1))*q(j, k1, nq)
            p2 = gm1*(q(j, k2, 4)-0.5*(q(j, k2, 2)**2+q(j, k2, 3)**2)/q(
     +        j, k2, 1))*q(j, k2, nq)
C
            q(j, k, 1) = ((1.+foso)*rho1-foso*rho2)/q(j, k, nq)
            q(j, k, 2) = ((1.+foso)*u1-foso*u2)*q(j, k, 1)
            q(j, k, 3) = ((1.+foso)*v1-foso*v2)*q(j, k, 1)
            press = (1.+foso)*p1 - foso*p2
            q(j, k, 4) = press/(gm1*q(j, k, nq)) + 0.5*(q(j, k, 2)**2+q(
     +        j, k, 3)**2)/q(j, k, 1)
          ENDDO
          CALL POPINTEGER4(k2)
          CALL POPINTEGER4(k1)
          CALL POPINTEGER4(k)
          CALL POPREAL8ARRAY(q, jd*kd*nq)
          DO j=js,je
            rho1 = q(j, k1, 1)*q(j, k1, nq)
            rho2 = q(j, k2, 1)*q(j, k2, nq)
            u1 = q(j, k1, 2)/q(j, k1, 1)
            u2 = q(j, k2, 2)/q(j, k2, 1)
            v1 = q(j, k1, 3)/q(j, k1, 1)
            v2 = q(j, k2, 3)/q(j, k2, 1)
            p1 = gm1*(q(j, k1, 4)-0.5*(q(j, k1, 2)**2+q(j, k1, 3)**2)/q(
     +        j, k1, 1))*q(j, k1, nq)
            p2 = gm1*(q(j, k2, 4)-0.5*(q(j, k2, 2)**2+q(j, k2, 3)**2)/q(
     +        j, k2, 1))*q(j, k2, nq)
C
            tmp3 = ((1.+foso)*rho1-foso*rho2)/q(j, k, nq)
            CALL PUSHREAL8(q(j, k, 1))
            q(j, k, 1) = tmp3
            CALL PUSHREAL8(q(j, k, 2))
            q(j, k, 2) = ((1.+foso)*u1-foso*u2)*q(j, k, 1)
            CALL PUSHREAL8(q(j, k, 3))
            q(j, k, 3) = ((1.+foso)*v1-foso*v2)*q(j, k, 1)
            press = (1.+foso)*p1 - foso*p2
            tmp4b = qb(j, k, 4)
            qb(j, k, 4) = 0.0
            temp15 = gm1*q(j, k, nq)
            temp15b = 0.5*tmp4b/q(j, k, 1)
            pressb = tmp4b/temp15
            qb(j, k, nq) = qb(j, k, nq) - press*gm1*tmp4b/temp15**2
            qb(j, k, 2) = qb(j, k, 2) + 2*q(j, k, 2)*temp15b
            qb(j, k, 3) = qb(j, k, 3) + 2*q(j, k, 3)*temp15b
            qb(j, k, 1) = qb(j, k, 1) - (q(j, k, 2)**2+q(j, k, 3)**2)*
     +        temp15b/q(j, k, 1)
            p1b = (foso+1.)*pressb
            p2b = -(foso*pressb)
            CALL POPREAL8(q(j, k, 3))
            temp15b0 = q(j, k, 1)*qb(j, k, 3)
            v1b = (foso+1.)*temp15b0
            v2b = -(foso*temp15b0)
            qb(j, k, 1) = qb(j, k, 1) + ((foso+1.)*v1-foso*v2)*qb(j, k, 
     +        3)
            qb(j, k, 3) = 0.0
            CALL POPREAL8(q(j, k, 2))
            temp15b1 = q(j, k, 1)*qb(j, k, 2)
            u1b = (foso+1.)*temp15b1
            u2b = -(foso*temp15b1)
            qb(j, k, 1) = qb(j, k, 1) + ((foso+1.)*u1-foso*u2)*qb(j, k, 
     +        2)
            qb(j, k, 2) = 0.0
            CALL POPREAL8(q(j, k, 1))
            tmp3b = qb(j, k, 1)
            qb(j, k, 1) = 0.0
            temp15b2 = tmp3b/q(j, k, nq)
            rho1b = (foso+1.)*temp15b2
            rho2b = -(foso*temp15b2)
            qb(j, k, nq) = qb(j, k, nq) - ((foso+1.)*rho1-foso*rho2)*
     +        temp15b2/q(j, k, nq)
            temp14 = q(j, k2, 1)
            temp13 = q(j, k2, 2)**2 + q(j, k2, 3)**2
            temp12 = temp13/temp14
            temp12b = gm1*q(j, k2, nq)*p2b
            temp12b0 = -(0.5*temp12b/temp14)
            qb(j, k2, 4) = qb(j, k2, 4) + temp12b
            qb(j, k2, 2) = qb(j, k2, 2) + 2*q(j, k2, 2)*temp12b0
            qb(j, k2, 3) = qb(j, k2, 3) + 2*q(j, k2, 3)*temp12b0
            qb(j, k2, 1) = qb(j, k2, 1) - temp12*temp12b0
            qb(j, k2, nq) = qb(j, k2, nq) + gm1*(q(j, k2, 4)-0.5*temp12)
     +        *p2b
            temp11 = q(j, k1, 1)
            temp10 = q(j, k1, 2)**2 + q(j, k1, 3)**2
            temp9 = temp10/temp11
            temp9b5 = gm1*q(j, k1, nq)*p1b
            temp9b6 = -(0.5*temp9b5/temp11)
            qb(j, k1, 4) = qb(j, k1, 4) + temp9b5
            qb(j, k1, 2) = qb(j, k1, 2) + 2*q(j, k1, 2)*temp9b6
            qb(j, k1, 3) = qb(j, k1, 3) + 2*q(j, k1, 3)*temp9b6
            qb(j, k1, 1) = qb(j, k1, 1) - temp9*temp9b6
            qb(j, k1, nq) = qb(j, k1, nq) + gm1*(q(j, k1, 4)-0.5*temp9)*
     +        p1b
            temp9b7 = v2b/q(j, k2, 1)
            qb(j, k2, 3) = qb(j, k2, 3) + temp9b7
            qb(j, k2, 1) = qb(j, k2, 1) - q(j, k2, 3)*temp9b7/q(j, k2, 1
     +        )
            temp9b8 = v1b/q(j, k1, 1)
            qb(j, k1, 3) = qb(j, k1, 3) + temp9b8
            qb(j, k1, 1) = qb(j, k1, 1) - q(j, k1, 3)*temp9b8/q(j, k1, 1
     +        )
            temp9b9 = u2b/q(j, k2, 1)
            qb(j, k2, 2) = qb(j, k2, 2) + temp9b9
            qb(j, k2, 1) = qb(j, k2, 1) - q(j, k2, 2)*temp9b9/q(j, k2, 1
     +        )
            temp9b10 = u1b/q(j, k1, 1)
            qb(j, k1, 2) = qb(j, k1, 2) + temp9b10
            qb(j, k1, 1) = qb(j, k1, 1) - q(j, k1, 2)*temp9b10/q(j, k1, 
     +        1)
            qb(j, k2, 1) = qb(j, k2, 1) + q(j, k2, nq)*rho2b
            qb(j, k2, nq) = qb(j, k2, nq) + q(j, k2, 1)*rho2b
            qb(j, k1, 1) = qb(j, k1, 1) + q(j, k1, nq)*rho1b
            qb(j, k1, nq) = qb(j, k1, nq) + q(j, k1, 1)*rho1b
          ENDDO
        ENDDO
        CALL POPINTEGER4(k2)
        CALL POPINTEGER4(k1)
        CALL POPINTEGER4(k)
        CALL POPREAL8ARRAY(q, jd*kd*nq)
        foso = 1.0
        delqb = 0.0
        delwb = 0.0
        qextb = 0.0
        qbarb = 0.0
        CALL POPREAL8ARRAY(qbar, 4)
        CALL POPREAL8ARRAY(qext, 4)
        CALL POPINTEGER4(k2)
        CALL POPINTEGER4(k1)
        CALL POPREAL8(foso)
        CALL POPREAL8ARRAY(delw, 4)
        CALL POPREAL8ARRAY(delq, 4)
        CALL POPINTEGER4(k)
        CALL POPREAL8ARRAY(q, jd*kd*nq)
        DO j=js,je
C..calculate metrics at boundary
          snorm = -(1.*iadd/SQRT(yx(j, k)**2+yy(j, k)**2))
          yxn = yx(j, k)*snorm
          yyn = yy(j, k)*snorm
C..first-order extrapolation
          qext(1) = (1.+foso)*q(j, k1, 1)*q(j, k1, nq) - foso*q(j, k2, 1
     +      )*q(j, k2, nq)
          qext(2) = (1.+foso)*q(j, k1, 2)*q(j, k1, nq) - foso*q(j, k2, 2
     +      )*q(j, k2, nq)
          qext(3) = (1.+foso)*q(j, k1, 3)*q(j, k1, nq) - foso*q(j, k2, 3
     +      )*q(j, k2, nq)
          qext(4) = (1.+foso)*q(j, k1, 4)*q(j, k1, nq) - foso*q(j, k2, 4
     +      )*q(j, k2, nq)
C
          qbar(1) = 0.5*(qext(1)+rinf)
          qbar(2) = 0.5*(qext(2)+rinf*uinf)
          qbar(3) = 0.5*(qext(3)+rinf*vinf)
          qbar(4) = 0.5*(qext(4)+einf)
          delq(1) = 0.5*(rinf-qext(1))
          delq(2) = 0.5*(rinf*uinf-qext(2))
          delq(3) = 0.5*(rinf*vinf-qext(3))
          delq(4) = 0.5*(einf-qext(4))
C
          rho = qbar(1)
          rrho = 1./rho
          uu = qbar(2)*rrho
          vv = qbar(3)*rrho
          e = qbar(4)*rrho
          uv2 = 0.5*(uu*uu+vv*vv)
          cjkl = SQRT(ggm1*(e-uv2))
          c2i = 1./(cjkl*cjkl)
          ge = gamma*e - gm1*uv2
          qq = (uu-ug(j, k))*yxn + (vv-vg(j, k))*yyn
C
          bsq = mp**2/(bt(j, k)-mp**2*(bt(j, k)-1))
C
          z = SQRT((1.-bsq)*qq*(1.-bsq)*qq + 4.*bsq*cjkl*cjkl)
          zi = 1./z
          r = 0.5*((1.-bsq)*qq+z)
          s = 0.5*((1.-bsq)*qq-z)
C
C..multiplying by sign(lamda_pa)*inv(X_pa)
          delw(1) = (1.-uv2*gm1*c2i)*SIGN(1., qq)*delq(1)
          delw(1) = delw(1) + uu*c2i*gm1*SIGN(1., qq)*delq(2)
          delw(1) = delw(1) + vv*c2i*gm1*SIGN(1., qq)*delq(3)
          delw(1) = delw(1) - gm1*c2i*SIGN(1., qq)*delq(4)
          delw(2) = (vv*yxn-uu*yyn)*SIGN(1., qq)*delq(1)
          delw(2) = delw(2) + yyn*SIGN(1., qq)*delq(2)
          delw(2) = delw(2) - yxn*SIGN(1., qq)*delq(3)
          delw(3) = -(zi*(uv2*gm1*c2i*s+bsq*qq)*SIGN(1., r+bsq*qq)*delq(
     +      1))
          delw(3) = delw(3) + (yxn*bsq+s*uu*gm1*c2i)*zi*SIGN(1., r+bsq*
     +      qq)*delq(2)
          delw(3) = delw(3) + (yyn*bsq+s*vv*gm1*c2i)*zi*SIGN(1., r+qq*
     +      bsq)*delq(3)
          delw(3) = delw(3) - s*gm1*c2i*zi*SIGN(1., r+qq*bsq)*delq(4)
          delw(4) = zi*(uv2*gm1*c2i*r+qq*bsq)*SIGN(1., s+bsq*qq)*delq(1)
          delw(4) = delw(4) - (yxn*bsq+r*uu*gm1*c2i)*zi*SIGN(1., s+bsq*
     +      qq)*delq(2)
          delw(4) = delw(4) - (yyn*bsq+r*vv*gm1*c2i)*zi*SIGN(1., s+qq*
     +      bsq)*delq(3)
          delw(4) = delw(4) + r*gm1*c2i*zi*SIGN(1., s+qq*bsq)*delq(4)
          CALL PUSHREAL8(delq(1))
C.. multiplying by (X_pa)
          delq(1) = delw(1) + delw(3) + delw(4)
          CALL PUSHREAL8(delq(2))
          delq(2) = uu*delw(1) + yyn*delw(2) + (uu+yxn*r/bsq)*delw(3)
          CALL PUSHREAL8(delq(2))
          delq(2) = delq(2) + (uu+yxn*s/bsq)*delw(4)
          CALL PUSHREAL8(delq(3))
          delq(3) = vv*delw(1) - yxn*delw(2) + (vv+yyn*r/bsq)*delw(3)
          CALL PUSHREAL8(delq(3))
          delq(3) = delq(3) + (vv+yyn*s/bsq)*delw(4)
          CALL PUSHREAL8(delq(4))
          delq(4) = uv2*delw(1) + (uu*yyn-vv*yxn)*delw(2)
          CALL PUSHREAL8(delq(4))
          delq(4) = delq(4) + (ge+r*qq/bsq)*delw(3)
          CALL PUSHREAL8(delq(4))
          delq(4) = delq(4) + (ge+s*qq/bsq)*delw(4)
C
C.. qbar - delq
          tmp = (qbar(1)-delq(1))/q(j, k, nq)
          CALL PUSHREAL8(q(j, k, 1))
          q(j, k, 1) = tmp
          tmp0 = (qbar(2)-delq(2))/q(j, k, nq)
          CALL PUSHREAL8(q(j, k, 2))
          q(j, k, 2) = tmp0
          tmp1 = (qbar(3)-delq(3))/q(j, k, nq)
          CALL PUSHREAL8(q(j, k, 3))
          q(j, k, 3) = tmp1
          temp1 = gm1*uv2*c2i*s + bsq*qq
          tmp2b = qb(j, k, 4)
          qb(j, k, 4) = 0.0
          temp9b = tmp2b/q(j, k, nq)
          qbarb(4) = qbarb(4) + temp9b
          delqb(4) = delqb(4) - temp9b
          qb(j, k, nq) = qb(j, k, nq) - (qbar(4)-delq(4))*temp9b/q(j, k
     +      , nq)
          CALL POPREAL8(q(j, k, 3))
          tmp1b = qb(j, k, 3)
          qb(j, k, 3) = 0.0
          temp9b0 = tmp1b/q(j, k, nq)
          qbarb(3) = qbarb(3) + temp9b0
          delqb(3) = delqb(3) - temp9b0
          qb(j, k, nq) = qb(j, k, nq) - (qbar(3)-delq(3))*temp9b0/q(j, k
     +      , nq)
          CALL POPREAL8(q(j, k, 2))
          tmp0b = qb(j, k, 2)
          qb(j, k, 2) = 0.0
          temp9b1 = tmp0b/q(j, k, nq)
          qbarb(2) = qbarb(2) + temp9b1
          delqb(2) = delqb(2) - temp9b1
          qb(j, k, nq) = qb(j, k, nq) - (qbar(2)-delq(2))*temp9b1/q(j, k
     +      , nq)
          CALL POPREAL8(q(j, k, 1))
          tmpb = qb(j, k, 1)
          qb(j, k, 1) = 0.0
          temp9b2 = tmpb/q(j, k, nq)
          qbarb(1) = qbarb(1) + temp9b2
          delqb(1) = delqb(1) - temp9b2
          qb(j, k, nq) = qb(j, k, nq) - (qbar(1)-delq(1))*temp9b2/q(j, k
     +      , nq)
          CALL POPREAL8(delq(4))
          temp9b3 = delw(4)*delqb(4)/bsq
          geb = (delw(3)+delw(4))*delqb(4)
          delwb(4) = delwb(4) + (ge+s*qq/bsq)*delqb(4)
          CALL POPREAL8(delq(4))
          temp9b4 = delw(3)*delqb(4)/bsq
          delwb(3) = delwb(3) + (ge+r*qq/bsq)*delqb(4)
          CALL POPREAL8(delq(4))
          uv2b = delw(1)*delqb(4)
          delwb(1) = delwb(1) + uv2*delqb(4)
          uub = delw(2)*yyn*delqb(4)
          vvb = -(delw(2)*yxn*delqb(4))
          delwb(2) = delwb(2) + (yyn*uu-yxn*vv)*delqb(4)
          delqb(4) = 0.0
          sb = yyn*delw(4)*delqb(3)/bsq + qq*temp9b3
          rb = yyn*delw(3)*delqb(3)/bsq + qq*temp9b4
          CALL POPREAL8(delq(3))
          vvb = vvb + (delw(3)+delw(1)+delw(4))*delqb(3)
          delwb(4) = delwb(4) + (vv+yyn*(s/bsq))*delqb(3)
          CALL POPREAL8(delq(3))
          delwb(1) = delwb(1) + vv*delqb(3)
          delwb(2) = delwb(2) - yxn*delqb(3)
          delwb(3) = delwb(3) + (vv+yyn*(r/bsq))*delqb(3)
          delqb(3) = 0.0
          CALL POPREAL8(delq(2))
          uub = uub + (delw(3)+delw(1)+delw(4))*delqb(2)
          sb = sb + yxn*delw(4)*delqb(2)/bsq
          delwb(4) = delwb(4) + (uu+yxn*(s/bsq))*delqb(2)
          CALL POPREAL8(delq(2))
          delwb(1) = delwb(1) + uu*delqb(2)
          delwb(2) = delwb(2) + yyn*delqb(2)
          rb = rb + yxn*delw(3)*delqb(2)/bsq
          delwb(3) = delwb(3) + (uu+yxn*(r/bsq))*delqb(2)
          delqb(2) = 0.0
          CALL POPREAL8(delq(1))
          delwb(1) = delwb(1) + delqb(1)
          delwb(3) = delwb(3) + delqb(1)
          delwb(4) = delwb(4) + delqb(1)
          delqb(1) = 0.0
          temp8 = zi*delq(4)
          temp8b = gm1*SIGN(1., s+bsq*qq)*delwb(4)
          temp8b0 = r*c2i*temp8b
          delqb(4) = delqb(4) + zi*temp8b0
          temp7b0 = -(SIGN(1., s+bsq*qq)*delwb(4))
          temp7b = zi*delq(3)*gm1*temp7b0
          temp7 = yyn*bsq + gm1*r*vv*c2i
          delqb(3) = delqb(3) + temp7*zi*temp7b0
          temp6b1 = -(SIGN(1., s+bsq*qq)*delwb(4))
          temp6b0 = zi*delq(2)*gm1*temp6b1
          temp6 = yxn*bsq + gm1*r*uu*c2i
          delqb(2) = delqb(2) + temp6*zi*temp6b1
          temp5b0 = SIGN(1., s+bsq*qq)*delwb(4)
          temp5b = zi*delq(1)*temp5b0
          temp6b = gm1*temp5b
          rb = rb + c2i*vv*temp7b + uv2*c2i*temp6b + c2i*uu*temp6b0 + 
     +      temp8*c2i*temp8b
          temp5 = gm1*uv2*c2i*r + bsq*qq
          delqb(1) = delqb(1) + temp5*zi*temp5b0
          delwb(4) = 0.0
          temp4 = zi*delq(4)
          temp4b = -(gm1*SIGN(1., r+bsq*qq)*delwb(3))
          temp4b0 = s*c2i*temp4b
          delqb(4) = delqb(4) + zi*temp4b0
          temp3b0 = SIGN(1., r+bsq*qq)*delwb(3)
          temp3b = zi*delq(3)*gm1*temp3b0
          temp3 = yyn*bsq + gm1*s*vv*c2i
          delqb(3) = delqb(3) + temp3*zi*temp3b0
          temp2b1 = SIGN(1., r+bsq*qq)*delwb(3)
          temp2b0 = zi*delq(2)*gm1*temp2b1
          temp2 = yxn*bsq + gm1*s*uu*c2i
          delqb(2) = delqb(2) + temp2*zi*temp2b1
          temp1b0 = -(SIGN(1., r+bsq*qq)*delwb(3))
          zib = temp7*delq(3)*temp7b0 + temp5*delq(1)*temp5b0 + temp3*
     +      delq(3)*temp3b0 + temp1*delq(1)*temp1b0 + temp2*delq(2)*
     +      temp2b1 + delq(4)*temp4b0 + temp6*delq(2)*temp6b1 + delq(4)*
     +      temp8b0
          temp1b = zi*delq(1)*temp1b0
          temp2b = gm1*temp1b
          sb = sb + c2i*vv*temp3b + uv2*c2i*temp2b + c2i*uu*temp2b0 + 
     +      temp4*c2i*temp4b
          delqb(1) = delqb(1) + temp1*zi*temp1b0
          delwb(3) = 0.0
          delqb(3) = delqb(3) - yxn*SIGN(1., qq)*delwb(2)
          delqb(2) = delqb(2) + yyn*SIGN(1., qq)*delwb(2)
          temp0b2 = SIGN(1., qq)*delwb(2)
          temp0 = yxn*vv - yyn*uu
          delqb(1) = delqb(1) + temp0*temp0b2
          delwb(2) = 0.0
          temp0b1 = -(gm1*SIGN(1., qq)*delwb(1))
          delqb(4) = delqb(4) + c2i*temp0b1
          temp0b = gm1*SIGN(1., qq)*delwb(1)
          delqb(3) = delqb(3) + vv*c2i*temp0b
          temp0b0 = gm1*SIGN(1., qq)*delwb(1)
          delqb(2) = delqb(2) + uu*c2i*temp0b0
          tempb2 = SIGN(1., qq)*delwb(1)
          tempb0 = -(delq(1)*gm1*tempb2)
          c2ib = r*vv*temp7b + r*uv2*temp6b + s*vv*temp3b + s*uv2*temp2b
     +      + delq(3)*vv*temp0b + uv2*tempb0 + delq(2)*uu*temp0b0 + delq
     +      (4)*temp0b1 + s*uu*temp2b0 + temp4*s*temp4b + r*uu*temp6b0 +
     +      temp8*r*temp8b
          temp = -(gm1*uv2*c2i) + 1.
          delqb(1) = delqb(1) + temp*tempb2
          delwb(1) = 0.0
          zb = 0.5*rb - zib/z**2 - 0.5*sb
          IF ((1.-bsq)**2*qq**2 + bsq*4.*cjkl**2 .EQ. 0.0) THEN
            tempb = 0.0
          ELSE
            tempb = zb/(2.0*SQRT((1.-bsq)**2*qq**2+bsq*4.*cjkl**2))
          END IF
          qqb = r*temp9b4 + bsq*temp1b + 0.5*(1.-bsq)*rb + (1.-bsq)**2*2
     +      *qq*tempb + 0.5*(1.-bsq)*sb + bsq*temp5b + s*temp9b3
          cjklb = bsq*4.*2*cjkl*tempb - 2*c2ib/cjkl**3
          IF (ggm1*(e-uv2) .EQ. 0.0) THEN
            tempb1 = 0.0
          ELSE
            tempb1 = ggm1*cjklb/(2.0*SQRT(ggm1*(e-uv2)))
          END IF
          uv2b = uv2b + s*c2i*temp2b - gm1*geb - tempb1 + c2i*tempb0 + r
     +      *c2i*temp6b
          vvb = vvb + c2i*s*temp3b + delq(3)*c2i*temp0b + 0.5*2*vv*uv2b 
     +      + yyn*qqb + delq(1)*yxn*temp0b2 + c2i*r*temp7b
          uub = uub + c2i*s*temp2b0 + delq(2)*c2i*temp0b0 + 0.5*2*uu*
     +      uv2b + yxn*qqb - delq(1)*yyn*temp0b2 + c2i*r*temp6b0
          eb = tempb1 + gamma*geb
          qbarb(4) = qbarb(4) + rrho*eb
          rrhob = qbar(3)*vvb + qbar(2)*uub + qbar(4)*eb
          qbarb(3) = qbarb(3) + rrho*vvb
          qbarb(2) = qbarb(2) + rrho*uub
          rhob = -(rrhob/rho**2)
          qbarb(1) = qbarb(1) + rhob
          einfb = einfb + 0.5*qbarb(4) + 0.5*delqb(4)
          qextb(4) = qextb(4) - 0.5*delqb(4)
          delqb(4) = 0.0
          vinfb = vinfb + 0.5*rinf*delqb(3)
          qextb(3) = qextb(3) - 0.5*delqb(3)
          delqb(3) = 0.0
          uinfb = uinfb + 0.5*rinf*delqb(2)
          qextb(2) = qextb(2) - 0.5*delqb(2)
          delqb(2) = 0.0
          qextb(1) = qextb(1) - 0.5*delqb(1)
          delqb(1) = 0.0
          qextb(4) = qextb(4) + 0.5*qbarb(4)
          qbarb(4) = 0.0
          qextb(3) = qextb(3) + 0.5*qbarb(3)
          vinfb = vinfb + 0.5*rinf*qbarb(3)
          qbarb(3) = 0.0
          qextb(2) = qextb(2) + 0.5*qbarb(2)
          uinfb = uinfb + 0.5*rinf*qbarb(2)
          qbarb(2) = 0.0
          qextb(1) = qextb(1) + 0.5*qbarb(1)
          qbarb(1) = 0.0
          qb(j, k1, 4) = qb(j, k1, 4) + (foso+1.)*q(j, k1, nq)*qextb(4)
          qb(j, k1, nq) = qb(j, k1, nq) + (foso+1.)*q(j, k1, 4)*qextb(4)
          qb(j, k2, 4) = qb(j, k2, 4) - foso*q(j, k2, nq)*qextb(4)
          qb(j, k2, nq) = qb(j, k2, nq) - foso*q(j, k2, 4)*qextb(4)
          qextb(4) = 0.0
          qb(j, k1, 3) = qb(j, k1, 3) + (foso+1.)*q(j, k1, nq)*qextb(3)
          qb(j, k1, nq) = qb(j, k1, nq) + (foso+1.)*q(j, k1, 3)*qextb(3)
          qb(j, k2, 3) = qb(j, k2, 3) - foso*q(j, k2, nq)*qextb(3)
          qb(j, k2, nq) = qb(j, k2, nq) - foso*q(j, k2, 3)*qextb(3)
          qextb(3) = 0.0
          qb(j, k1, 2) = qb(j, k1, 2) + (foso+1.)*q(j, k1, nq)*qextb(2)
          qb(j, k1, nq) = qb(j, k1, nq) + (foso+1.)*q(j, k1, 2)*qextb(2)
          qb(j, k2, 2) = qb(j, k2, 2) - foso*q(j, k2, nq)*qextb(2)
          qb(j, k2, nq) = qb(j, k2, nq) - foso*q(j, k2, 2)*qextb(2)
          qextb(2) = 0.0
          qb(j, k1, 1) = qb(j, k1, 1) + (foso+1.)*q(j, k1, nq)*qextb(1)
          qb(j, k1, nq) = qb(j, k1, nq) + (foso+1.)*q(j, k1, 1)*qextb(1)
          qb(j, k2, 1) = qb(j, k2, 1) - foso*q(j, k2, nq)*qextb(1)
          qb(j, k2, nq) = qb(j, k2, nq) - foso*q(j, k2, 1)*qextb(1)
          qextb(1) = 0.0
        ENDDO
      END IF
      END
