C        Generated by TAPENADE     (INRIA, Tropics team)
C  Tapenade 3.6 (r4343) - 10 Feb 2012 10:52
C
C  Differentiation of muscld_new in reverse (adjoint) mode:
C   gradient     of useful results: f ql qr
C   with respect to varying inputs: f ql qr
C
C************************************************************************
      SUBROUTINE MUSCLD_NEW_BQ(f, fb, ql, qlb, qr, qrb, is, imax, im, th
     +                         , qt, eps, fmin, fmax, ibmin, ibmax, iba)
      USE PARAMS_GLOBAL
      IMPLICIT NONE
      INCLUDE 'DIFFSIZES.inc'
C  Hint: ISIZE1OFf2bINmuscld_new should be the value of mdim
C  Hint: ISIZE2OFf2bINmuscld_new should be the value of nmv
C
C  muscl interpolation for higher order accuracy
C  differentiable limiter for 3rd order accuracy
C
C*************************************************************************
C*************************************************************************
      REAL f(mdim, nmv)
      REAL fb(mdim, nmv)
      REAL ql(mdim, nmv), qr(mdim, nmv)
      REAL qlb(mdim, nmv), qrb(mdim, nmv)
      REAL fmin(nmv), fmax(nmv)
C local variables
      INTEGER iba(mdim)
      REAL f2(mdim, nmv)
      INTEGER is, imax, im, ibmin, ibmax, n, i
      REAL thm, thp, f2i, f2i1, a1, a2, f3i, f3qt
      REAL f2ib, f2i1b, a1b, a2b, f3ib, f3qtb
      REAL th, qt, eps
      INTEGER branch
      REAL tempb1
      REAL tempb0
      REAL f2b(mdim, nmv)
      REAL tempb
C
      IF (qt .EQ. 0.0) THEN
        DO n=1,nmv
          DO i=is,imax
            fb(i, n) = fb(i, n) + qlb(i, n) + qrb(i, n)
            qrb(i, n) = 0.0
            qlb(i, n) = 0.0
          ENDDO
        ENDDO
      ELSE
        thm = 1.0 - th
        thp = 1.0 + th
        f2b = 0.0
        DO n=1,nmv
          DO i=is,im
            f2(i, n) = f(i+1, n) - f(i, n)
          ENDDO
C..first-order at boundary
C..central at boundary?
C         qr(is,n) = 0.5*(f(is,n)+f(is+1,n))
C         ql(is,n) = 0.5*(f(is,n)+f(is+1,n))
          IF (ibmin .EQ. 2) THEN
            CALL PUSHCONTROL1B(0)
          ELSE
            CALL PUSHCONTROL1B(1)
          END IF
C..first-order at boundary
C..central at boundary?
C         ql(imax,n) = 0.5*(f(imax,n)+f(im,n))
C         qr(imax,n) = 0.5*(f(imax,n)+f(im,n))
          IF (ibmax .EQ. 2) THEN
            f2i = fmax(n) - f(imax, n)
            f2i1 = f(imax, n) - f(im, n)
            a1 = 3.0*(f2i*f2i1+eps)
            a2 = 2.0*(f2i-f2i1)**2 + a1
C           epsf   = eps*( 0.5+sign( 0.5,-abs(a2) ) )
            f3i = a1/a2
            f3qt = qt*f3i
            f3qtb = (thm*f2i1+thp*f2i)*qlb(imax, n) - (thp*f2i1+thm*f2i)
     +        *qrb(imax, n)
            f3ib = qt*f3qtb
            a2b = -(a1*f3ib/a2**2)
            a1b = a2b + f3ib/a2
            tempb0 = 2.0*2*(f2i-f2i1)*a2b
            f2i1b = f3qt*thm*qlb(imax, n) + 3.0*f2i*a1b - tempb0 - f3qt*
     +        thp*qrb(imax, n)
            fb(imax, n) = fb(imax, n) + qlb(imax, n) + f2i1b + qrb(imax
     +        , n)
            f2ib = f3qt*thp*qlb(imax, n) + 3.0*f2i1*a1b + tempb0 - f3qt*
     +        thm*qrb(imax, n)
            qrb(imax, n) = 0.0
            qlb(imax, n) = 0.0
            fb(im, n) = fb(im, n) - f2i1b
            fb(imax, n) = fb(imax, n) - f2ib
          END IF
          fb(imax, n) = fb(imax, n) + qlb(imax, n) + qrb(imax, n)
          qrb(imax, n) = 0.0
          qlb(imax, n) = 0.0
          CALL POPCONTROL1B(branch)
          IF (branch .EQ. 0) THEN
            f2i1 = f(is, n) - fmin(n)
            f2i = f(is+1, n) - f(is, n)
            a1 = 3.0*(f2i*f2i1+eps)
            a2 = 2.0*(f2i-f2i1)**2 + a1
            f3i = a1/a2
            f3qt = qt*f3i
            f3qtb = (thm*f2i1+thp*f2i)*qlb(is, n) - (thp*f2i1+thm*f2i)*
     +        qrb(is, n)
            f3ib = qt*f3qtb
            a2b = -(a1*f3ib/a2**2)
            a1b = a2b + f3ib/a2
            tempb = 2.0*2*(f2i-f2i1)*a2b
            f2i1b = f3qt*thm*qlb(is, n) + 3.0*f2i*a1b - tempb - f3qt*thp
     +        *qrb(is, n)
            fb(is, n) = fb(is, n) + qlb(is, n) + f2i1b + qrb(is, n)
            f2ib = f3qt*thp*qlb(is, n) + 3.0*f2i1*a1b + tempb - f3qt*thm
     +        *qrb(is, n)
            qrb(is, n) = 0.0
            qlb(is, n) = 0.0
            fb(is+1, n) = fb(is+1, n) + f2ib
            fb(is, n) = fb(is, n) - f2ib
          END IF
          fb(is, n) = fb(is, n) + qrb(is, n) + qlb(is, n)
          qlb(is, n) = 0.0
          qrb(is, n) = 0.0
          DO i=is+1,im
            f2i = f2(i, n)
            f2i1 = f2(i-1, n)
            a1 = 3.0*(f2i*f2i1+eps)
            a2 = 2.0*(f2i-f2i1)**2 + a1
C           epsf   = eps*( 0.5+sign( 0.5,-abs(a2) ) )
            f3i = a1/a2
            f3qt = qt*f3i*iba(i)*iba(i+1)*iba(i-1)
            fb(i, n) = fb(i, n) + qlb(i, n) + qrb(i, n)
            f3qtb = (thm*f2i1+thp*f2i)*qlb(i, n) - (thp*f2i1+thm*f2i)*
     +        qrb(i, n)
            f3ib = iba(i-1)*iba(i)*iba(i+1)*qt*f3qtb
            a2b = -(a1*f3ib/a2**2)
            a1b = a2b + f3ib/a2
            tempb1 = 2.0*2*(f2i-f2i1)*a2b
            f2i1b = f3qt*thm*qlb(i, n) + 3.0*f2i*a1b - tempb1 - f3qt*thp
     +        *qrb(i, n)
            f2ib = f3qt*thp*qlb(i, n) + 3.0*f2i1*a1b + tempb1 - f3qt*thm
     +        *qrb(i, n)
            qrb(i, n) = 0.0
            qlb(i, n) = 0.0
            f2b(i-1, n) = f2b(i-1, n) + f2i1b
            f2b(i, n) = f2b(i, n) + f2ib
          ENDDO
          DO i=is,im
            fb(i+1, n) = fb(i+1, n) + f2b(i, n)
            fb(i, n) = fb(i, n) - f2b(i, n)
            f2b(i, n) = 0.0
          ENDDO
        ENDDO
      END IF
      END
